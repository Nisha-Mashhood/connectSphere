{"version":3,"file":"collaboration.repositry.js","sourceRoot":"","sources":["../../src/repositories/collaboration.repositry.ts"],"names":[],"mappings":"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","sourcesContent":["import MentorRequest from \"../models/mentorRequset.js\";\r\nimport Collaboration from \"../models/collaboration.js\";\r\nimport Mentor from \"../models/mentor.model.js\";\r\nimport { ICollaboration } from \"../Interfaces/models/ICollaboration.js\";\r\n\r\nexport interface LockedSlot {\r\n  day: string;\r\n  timeSlots: string[];\r\n}\r\n\r\n//create a temporary requset document\r\nexport const createTemporaryRequest = async (data: any) => {\r\n    try {\r\n      const request = new MentorRequest(data);\r\n      return await request.save();\r\n    } catch (error:any) {\r\n      throw new Error(`Error saving temporary request: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  // Get mentor requests from the database\r\nexport const getMentorRequestsByMentorId = async (mentorId: string) => {\r\n  try {\r\n    return await MentorRequest.find({ mentorId })\r\n      .populate(\"userId\", \"name profilePic\") \r\n  } catch (error: any) {\r\n    throw new Error(`Error fetching mentor requests: ${error.message}`);\r\n  }\r\n};\r\n\r\n// Find mentor request by ID\r\nexport const findMentorRequestById = async (id: string) => {\r\n  try {\r\n    return await MentorRequest.findById(id);\r\n  } catch (error: any) {\r\n    throw new Error(`Error fetching mentor request by ID: ${error.message}`);\r\n  }\r\n};\r\n\r\n// Update mentor request acceptance status\r\nexport const updateMentorRequestStatus = async (id: string, status: string) => {\r\n  try {\r\n    const request = await MentorRequest.findById(id);\r\n    if (request) {\r\n      request.isAccepted = status;\r\n      await request.save();\r\n      return request;\r\n    }\r\n    throw new Error(\"Request not found\");\r\n  } catch (error: any) {\r\n    throw new Error(`Error updating mentor request status: ${error.message}`);\r\n  }\r\n};\r\n\r\nexport const getRequestByUserId = async (userId: string) => {\r\n  return await MentorRequest.find({ userId })\r\n    .populate({\r\n      path: 'mentorId',  \r\n      populate: {\r\n        path: 'userId',\r\n        select: 'name email profilePic'\r\n      }\r\n    })\r\n};\r\n\r\nexport const createCollaboration = async (collaborationData: Partial<ICollaboration>): Promise<ICollaboration> => {\r\n  const collaborationResult = new Collaboration(collaborationData);\r\n  return await collaborationResult.save();\r\n};\r\n\r\n\r\nexport const deleteMentorRequest = async (requestId: string): Promise<void> => {\r\n  await MentorRequest.findByIdAndDelete(requestId);\r\n};\r\n\r\nexport const findCollabById = async(collabId:string): Promise<ICollaboration | null> =>{\r\n  try {\r\n    const collaboration = await Collaboration.findById(collabId)\r\n      .populate({\r\n        path: \"mentorId\",\r\n        model: \"Mentor\",\r\n        populate: {\r\n          path: \"userId\",\r\n          model: \"User\",\r\n        },\r\n      })\r\n      .populate({\r\n        path: \"userId\",\r\n        model: \"User\",\r\n      });\r\n\r\n    if (!collaboration) {\r\n      throw new Error(\"Collaboration not found\");\r\n    }\r\n\r\n    return collaboration;\r\n  } catch (error: any) {\r\n    console.log(\"Error in repository file:\", error);\r\n    throw new Error(`Error fetching collaboration: ${error.message}`);\r\n  }\r\n}\r\n\r\nexport const deleteCollabById = async(collabId:string) =>{\r\n  try {\r\n    return await Collaboration.findByIdAndDelete(collabId)\r\n  } catch (error:any) {\r\n    throw new Error(\"Error fetching group requests: \" + error.message);\r\n  }\r\n}\r\n\r\n//mark collaboration as cancelled\r\nexport const markCollabAsCancelled = async (collabId: string) => {\r\n  try {\r\n    return await Collaboration.findByIdAndUpdate(\r\n      collabId,\r\n      { isCancelled: true },\r\n      { new: true } \r\n    );\r\n  } catch (error: any) {\r\n    throw new Error(\"Error updating collaboration: \" + error.message);\r\n  }\r\n};\r\n\r\n//update feedback given filed of the collaboartion\r\nexport const updateCollabFeedback = async (collabId: string) => {\r\n  try {\r\n    return await Collaboration.findByIdAndUpdate(\r\n      collabId,\r\n      { feedbackGiven: true }, \r\n      { new: true }\r\n    );\r\n  } catch (error: any) {\r\n    throw new Error(`Error updating collaboration feedback status: ${error.message}`);\r\n  }\r\n};\r\n\r\n//Get collab data For user\r\nexport const getCollabDataForUser = async (userId: string) => {\r\n  try {\r\n    const collabData = await Collaboration.find({ userId, isCancelled:false })\r\n    .populate({\r\n      path: 'mentorId',  \r\n      populate: {\r\n        path: 'userId',\r\n      }\r\n    })\r\n    .populate('userId');\r\n    return collabData;\r\n  } catch (error:any) {\r\n    throw new Error(`Error getting collaboration data for user: ${error.message}`);\r\n  }\r\n};\r\n\r\n//get collab data for mentor\r\nexport const getCollabDataForMentor = async (mentorId: string) => {\r\n  try {\r\n    // Find the mentor document to get their userId\r\n    const mentor = await Mentor.findById(mentorId).select('userId');\r\n    if (!mentor) throw new Error('Mentor not found');\r\n\r\n    const userId = mentor.userId;\r\n\r\n    // Fetch collaborations where they are the mentor OR the requester\r\n    const collabData = await Collaboration.find({\r\n      $or: [\r\n        { mentorId, isCancelled: false },\r\n        { userId, isCancelled: false },\r\n      ],\r\n    })\r\n      .populate({\r\n      path: 'mentorId',  \r\n      populate: {\r\n        path: 'userId',\r\n      }\r\n    })\r\n      .populate('userId');\r\n\r\n    return collabData;\r\n  } catch (error: any) {\r\n    throw new Error(`Error getting collaboration data for mentor: ${error.message}`);\r\n  }\r\n};\r\n\r\n//FOR ADMIN\r\n//Find all requset data for ADMIN\r\nexport const findMentorRequest = async ({ page, limit, search }: { page: number, limit: number, search: string }) => {\r\n  try {\r\n    const query = search\r\n      ? {\r\n          $or: [\r\n            { \"userId.name\": { $regex: search, $options: \"i\" } },\r\n            { \"userId.email\": { $regex: search, $options: \"i\" } },\r\n            { \"mentorId.userId.name\": { $regex: search, $options: \"i\" } },\r\n            { \"mentorId.userId.email\": { $regex: search, $options: \"i\" } },\r\n            { \"mentorId.specialization\": { $regex: search, $options: \"i\" } },\r\n          ],\r\n        }\r\n      : {};\r\n\r\n    const total = await MentorRequest.countDocuments(query);\r\n    const requests = await MentorRequest.find(query)\r\n      .populate({\r\n        path: \"mentorId\",\r\n        model: \"Mentor\",\r\n        populate: {\r\n          path: \"userId\",\r\n          model: \"User\",\r\n        },\r\n      })\r\n      .populate({\r\n        path: \"userId\",\r\n        model: \"User\",\r\n      })\r\n      .skip((page - 1) * limit)\r\n      .limit(limit);\r\n\r\n    return { requests, total, page, pages: Math.ceil(total / limit) };\r\n  } catch (error: any) {\r\n    throw new Error(`Error fetching mentor request: ${error.message}`);\r\n  }\r\n};\r\n\r\n//Find All collab datas for ADMIN\r\nexport const findCollab = async ({ page, limit, search }: { page: number, limit: number, search: string }) => {\r\n  try {\r\n    const query = search\r\n      ? {\r\n          $or: [\r\n            { \"userId.name\": { $regex: search, $options: \"i\" } },\r\n            { \"userId.email\": { $regex: search, $options: \"i\" } },\r\n            { \"mentorId.userId.name\": { $regex: search, $options: \"i\" } },\r\n            { \"mentorId.userId.email\": { $regex: search, $options: \"i\" } },\r\n            { \"mentorId.specialization\": { $regex: search, $options: \"i\" } },\r\n          ],\r\n        }\r\n      : {};\r\n\r\n    const total = await Collaboration.countDocuments(query);\r\n    const collabs = await Collaboration.find(query)\r\n      .populate({\r\n        path: \"mentorId\",\r\n        model: \"Mentor\",\r\n        populate: {\r\n          path: \"userId\",\r\n          model: \"User\",\r\n        },\r\n      })\r\n      .populate({\r\n        path: \"userId\",\r\n        model: \"User\",\r\n      })\r\n      .skip((page - 1) * limit)\r\n      .limit(limit);\r\n\r\n    return { collabs, total, page, pages: Math.ceil(total / limit) };\r\n  } catch (error: any) {\r\n    throw new Error(\"Error fetching collaborations: \" + error.message);\r\n  }\r\n};\r\n\r\n//get requset details\r\nexport const fetchMentorRequsetDetails = async(requsetId: string) =>{\r\n    try {\r\n      return await MentorRequest.findById(requsetId)\r\n      .populate({\r\n        path: \"mentorId\",\r\n        model: \"Mentor\",\r\n        populate: {\r\n          path: \"userId\",\r\n          model: \"User\",\r\n        },\r\n      })\r\n      .populate({\r\n        path: \"userId\",\r\n        model: \"User\",\r\n      }) ;\r\n  } catch (error:any) {\r\n    throw new Error(`Error fetching mentor request : ${error.message}`);\r\n  }\r\n}\r\n\r\n//get collab details\r\nexport const findCollabDetails = async (collabId: string): Promise<ICollaboration[] | null> => {\r\n  try {\r\n    return await Collaboration.findById(collabId)\r\n      .populate({\r\n        path: \"mentorId\",\r\n        model: \"Mentor\",\r\n        populate: {\r\n          path: \"userId\",\r\n          model: \"User\",\r\n        },\r\n      })\r\n      .populate({\r\n        path: \"userId\",\r\n        model: \"User\",\r\n      }) as ICollaboration[] | null;\r\n  } catch (error: any) {\r\n    throw new Error(\"Error fetching collaboration Details: \" + error.message);\r\n  }\r\n};\r\n\r\n// Update Unavailable Days\r\nexport const updateUnavailableDays = async (\r\n  collabId: string,\r\n  updateData: {\r\n    datesAndReasons: any;  // Dates and reasons array\r\n    requestedBy: string;\r\n    requesterId: string;\r\n    approvedById: string;\r\n    isApproved: string;\r\n  }\r\n) => {\r\n  try {\r\n    const updatedCollaboration = await Collaboration.findByIdAndUpdate(\r\n      collabId,\r\n      {\r\n        $push: {\r\n          \"unavailableDays\": {\r\n            datesAndReasons: updateData.datesAndReasons,\r\n            requestedBy: updateData.requestedBy,\r\n            requesterId: updateData.requesterId,\r\n            approvedById: updateData.approvedById,\r\n            isApproved: updateData.isApproved\r\n          }\r\n        }\r\n      },\r\n      { new: true }\r\n    );\r\n    console.log(\"Updated Collaboration :\",updatedCollaboration)\r\n    return updatedCollaboration;\r\n  } catch (error) {\r\n    console.log(\"error in collaboaration repositry :\",error)\r\n    throw new Error(`Error updating unavailable days: ${error}`);\r\n  }\r\n};\r\n\r\n// Update Temporary Slot Changes\r\nexport const updateTemporarySlotChanges = async (\r\n  collabId: string,\r\n  updateData: {\r\n    datesAndNewSlots: any;  // New time slots with dates\r\n    requestedBy: string;\r\n    requesterId: string;\r\n    approvedById: string;\r\n    isApproved: string;\r\n  }\r\n) => {\r\n  try {\r\n    const updatedCollaboration = await Collaboration.findByIdAndUpdate(\r\n      collabId,\r\n      {\r\n        $push: {\r\n          \"temporarySlotChanges\": {\r\n            datesAndNewSlots: updateData.datesAndNewSlots,\r\n            requestedBy: updateData.requestedBy,\r\n            requesterId: updateData.requesterId,\r\n            approvedById: updateData.approvedById,\r\n            isApproved: updateData.isApproved\r\n          }\r\n        }\r\n      },\r\n      { new: true }\r\n    );\r\n    console.log(\"Updated Collaboration :\",updatedCollaboration)\r\n    return updatedCollaboration;\r\n  } catch (error) {\r\n    console.log(\"error in collaboaration repositry :\",error)\r\n    throw new Error(`Error updating temporary slot changes: ${error}`);\r\n  }\r\n};\r\n\r\n//Update the is Approved of the collaboration\r\nexport const updateRequestStatus = async (\r\n  collabId: string,\r\n  requestId: string,\r\n  requestType: \"unavailable\" | \"timeSlot\",\r\n  status: \"approved\" | \"rejected\",\r\n  newEndDate?: Date \r\n): Promise<ICollaboration | null> => {\r\n  try {\r\n    const updateField =\r\n      requestType === \"unavailable\" ? \"unavailableDays\" : \"temporarySlotChanges\";\r\n\r\n    let updateQuery: any = {\r\n      $set: {\r\n        [`${updateField}.$.isApproved`]: status,\r\n      },\r\n    };\r\n\r\n    // Add endDate to the update query if provided\r\n    if (newEndDate) {\r\n      updateQuery.$set[\"endDate\"] = newEndDate;\r\n    }\r\n\r\n    const updatedCollaboration = await Collaboration.findOneAndUpdate(\r\n      {\r\n        _id: collabId,\r\n        [`${updateField}._id`]: requestId,\r\n      },\r\n      updateQuery,\r\n      { new: true }\r\n    )\r\n      .populate({\r\n        path: \"mentorId\",\r\n        model: \"Mentor\",\r\n        populate: {\r\n          path: \"userId\",\r\n          model: \"User\",\r\n        },\r\n      })\r\n      .populate({\r\n        path: \"userId\",\r\n        model: \"User\",\r\n      });\r\n\r\n    if (!updatedCollaboration) {\r\n      throw new Error(\"Collaboration or request not found\");\r\n    }\r\n\r\n    console.log(\"Updated collaboration from repository:\", updatedCollaboration);\r\n    return updatedCollaboration;\r\n  } catch (error: any) {\r\n    console.log(\"Error in repository file:\", error);\r\n    throw new Error(`Error updating request status: ${error.message}`);\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const getLockedSlotsByMentorId = async (mentorId: string): Promise<LockedSlot[]> => {\r\n  try {\r\n    const currentDate = new Date();\r\n\r\n    // active collaborations \r\n    const collaborations = await Collaboration.find({\r\n      mentorId,\r\n      isCancelled: false,\r\n      $or: [\r\n        { endDate: { $gt: currentDate } },\r\n        { endDate: null },\r\n      ],\r\n    }).select(\"selectedSlot\");\r\n\r\n    // accepted mentor requests\r\n    const mentorRequests = await MentorRequest.find({\r\n      mentorId,\r\n      isAccepted: \"Accepted\",\r\n    }).select(\"selectedSlot\");\r\n\r\n    // Combine slots from collaborations\r\n    const collabSlots: LockedSlot[] = collaborations.flatMap(collab =>\r\n      collab.selectedSlot.map(slot => ({\r\n        day: slot.day,\r\n        timeSlots: slot.timeSlots,\r\n      }))\r\n    );\r\n\r\n    // Combine slots from mentor requests\r\n    const requestSlots: LockedSlot[] = mentorRequests\r\n            .map((request: any) => {\r\n              const selectedSlot = request.selectedSlot as { day?: string; timeSlots?: string };\r\n              if (!selectedSlot.day || !selectedSlot.timeSlots) {\r\n                console.log(`Invalid selectedSlot for mentorRequestId: ${request._id}`);\r\n                return null;\r\n              }\r\n              return {\r\n                day: selectedSlot.day,\r\n                timeSlots: [selectedSlot.timeSlots],\r\n              };\r\n            })\r\n            .filter((slot): slot is LockedSlot => slot !== null);\r\n\r\n    // Combine and deduplicate slots\r\n    const allSlots: LockedSlot[] = [...collabSlots, ...requestSlots];\r\n    // console.log(\"All Slots :\",allSlots)\r\n    const uniqueSlots: LockedSlot[] = [];\r\n\r\n    allSlots.forEach(slot => {\r\n      const existing = uniqueSlots.find(s => s.day === slot.day);\r\n      if (existing) {\r\n        // Merge timeSlots for the same day\r\n        existing.timeSlots = Array.from(new Set([...existing.timeSlots, ...slot.timeSlots]));\r\n      } else {\r\n        uniqueSlots.push({ day: slot.day, timeSlots: slot.timeSlots });\r\n      }\r\n    });\r\n\r\n    // console.log(\"Locked/ Unique slot :\",uniqueSlots)\r\n\r\n    console.log(`Fetched ${uniqueSlots.length} locked slots for mentorId: ${mentorId}`);\r\n    return uniqueSlots;\r\n  } catch (error: any) {\r\n    console.log(`Error fetching locked slots for mentorId ${mentorId}: ${error.message}`);\r\n    throw new Error(`Error fetching locked slots: ${error.message}`);\r\n  }\r\n};"]}