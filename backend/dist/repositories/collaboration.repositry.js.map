{"version":3,"file":"collaboration.repositry.js","sourceRoot":"","sources":["../../src/repositories/collaboration.repositry.ts"],"names":[],"mappings":"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","sourcesContent":["import MentorRequest from \"../models/mentorRequset.js\";\r\nimport Collaboration, { ICollaboration } from \"../models/collaboration.js\";\r\n\r\n//create a temporary requset document\r\nexport const createTemporaryRequest = async (data: any) => {\r\n    try {\r\n      const request = new MentorRequest(data);\r\n      return await request.save();\r\n    } catch (error:any) {\r\n      throw new Error(`Error saving temporary request: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  // Get mentor requests from the database\r\nexport const getMentorRequestsByMentorId = async (mentorId: string) => {\r\n  try {\r\n    return await MentorRequest.find({ mentorId })\r\n      .populate(\"userId\", \"name profilePic\") \r\n  } catch (error: any) {\r\n    throw new Error(`Error fetching mentor requests: ${error.message}`);\r\n  }\r\n};\r\n\r\n// Find mentor request by ID\r\nexport const findMentorRequestById = async (id: string) => {\r\n  try {\r\n    return await MentorRequest.findById(id);\r\n  } catch (error: any) {\r\n    throw new Error(`Error fetching mentor request by ID: ${error.message}`);\r\n  }\r\n};\r\n\r\n// Update mentor request acceptance status\r\nexport const updateMentorRequestStatus = async (id: string, status: string) => {\r\n  try {\r\n    const request = await MentorRequest.findById(id);\r\n    if (request) {\r\n      request.isAccepted = status;\r\n      await request.save();\r\n      return request;\r\n    }\r\n    throw new Error(\"Request not found\");\r\n  } catch (error: any) {\r\n    throw new Error(`Error updating mentor request status: ${error.message}`);\r\n  }\r\n};\r\n\r\nexport const getRequestByUserId = async (userId: string) => {\r\n  return await MentorRequest.find({ userId })\r\n    .populate({\r\n      path: 'mentorId',  \r\n      populate: {\r\n        path: 'userId',\r\n        select: 'name email profilePic'\r\n      }\r\n    })\r\n};\r\n\r\nexport const createCollaboration = async (collaborationData: Partial<ICollaboration>): Promise<ICollaboration> => {\r\n  const collaborationResult = new Collaboration(collaborationData);\r\n  return await collaborationResult.save();\r\n};\r\n\r\n\r\nexport const deleteMentorRequest = async (requestId: string): Promise<void> => {\r\n  await MentorRequest.findByIdAndDelete(requestId);\r\n};\r\n\r\nexport const findCollabById = async(collabId:string): Promise<ICollaboration | null> =>{\r\n  try {\r\n  return await Collaboration.findById(collabId)\r\n  .populate({\r\n    path: \"mentorId\",\r\n    populate: {\r\n      path: \"userId\", \r\n      model: \"User\",\r\n    },\r\n  })\r\n  .populate(\"userId\")as ICollaboration | null;; \r\n  } catch (error:any) {\r\n    throw new Error(\"Error fetching group requests: \" + error.message);\r\n  }\r\n}\r\n\r\nexport const deleteCollabById = async(collabId:string) =>{\r\n  try {\r\n    return await Collaboration.findByIdAndDelete(collabId)\r\n  } catch (error:any) {\r\n    throw new Error(\"Error fetching group requests: \" + error.message);\r\n  }\r\n}\r\n\r\n//mark collaboration as cancelled\r\nexport const markCollabAsCancelled = async (collabId: string) => {\r\n  try {\r\n    return await Collaboration.findByIdAndUpdate(\r\n      collabId,\r\n      { isCancelled: true },\r\n      { new: true } \r\n    );\r\n  } catch (error: any) {\r\n    throw new Error(\"Error updating collaboration: \" + error.message);\r\n  }\r\n};\r\n\r\n//update feedback given filed of the collaboartion\r\nexport const updateCollabFeedback = async (collabId: string) => {\r\n  try {\r\n    return await Collaboration.findByIdAndUpdate(\r\n      collabId,\r\n      { feedbackGiven: true }, \r\n      { new: true }\r\n    );\r\n  } catch (error: any) {\r\n    throw new Error(`Error updating collaboration feedback status: ${error.message}`);\r\n  }\r\n};\r\n\r\n//Get collab data For user\r\nexport const getCollabDataForUser = async (userId: string) => {\r\n  try {\r\n    const collabData = await Collaboration.find({ userId, isCancelled:false })\r\n    .populate({\r\n      path: 'mentorId',  \r\n      populate: {\r\n        path: 'userId',\r\n        select: 'name email profilePic'\r\n      }\r\n    })\r\n    .populate('userId');\r\n    return collabData;\r\n  } catch (error:any) {\r\n    throw new Error(`Error getting collaboration data for user: ${error.message}`);\r\n  }\r\n};\r\n\r\n//get collab data for mentor\r\nexport const getCollabDataForMentor = async (mentorId: string) => {\r\n  try {\r\n    const collabData = await Collaboration.find({ mentorId, isCancelled:false })\r\n    .populate('mentorId')\r\n    .populate(\"userId\", \"name email profilePic\") \r\n    return collabData;\r\n  } catch (error:any) {\r\n    throw new Error(`Error getting collaboration data for mentor: ${error.message}`);\r\n  }\r\n};\r\n\r\n//FOR ADMIN\r\n//Find all requset data for ADMIN\r\nexport const findMentorRequest = async ({ page, limit, search }: { page: number, limit: number, search: string }) => {\r\n  try {\r\n    const query = search\r\n      ? {\r\n          $or: [\r\n            { \"userId.name\": { $regex: search, $options: \"i\" } },\r\n            { \"userId.email\": { $regex: search, $options: \"i\" } },\r\n            { \"mentorId.userId.name\": { $regex: search, $options: \"i\" } },\r\n            { \"mentorId.userId.email\": { $regex: search, $options: \"i\" } },\r\n            { \"mentorId.specialization\": { $regex: search, $options: \"i\" } },\r\n          ],\r\n        }\r\n      : {};\r\n\r\n    const total = await MentorRequest.countDocuments(query);\r\n    const requests = await MentorRequest.find(query)\r\n      .populate({\r\n        path: \"mentorId\",\r\n        model: \"Mentor\",\r\n        populate: {\r\n          path: \"userId\",\r\n          model: \"User\",\r\n        },\r\n      })\r\n      .populate({\r\n        path: \"userId\",\r\n        model: \"User\",\r\n      })\r\n      .skip((page - 1) * limit)\r\n      .limit(limit);\r\n\r\n    return { requests, total, page, pages: Math.ceil(total / limit) };\r\n  } catch (error: any) {\r\n    throw new Error(`Error fetching mentor request: ${error.message}`);\r\n  }\r\n};\r\n\r\n//Find All collab datas for ADMIN\r\nexport const findCollab = async ({ page, limit, search }: { page: number, limit: number, search: string }) => {\r\n  try {\r\n    const query = search\r\n      ? {\r\n          $or: [\r\n            { \"userId.name\": { $regex: search, $options: \"i\" } },\r\n            { \"userId.email\": { $regex: search, $options: \"i\" } },\r\n            { \"mentorId.userId.name\": { $regex: search, $options: \"i\" } },\r\n            { \"mentorId.userId.email\": { $regex: search, $options: \"i\" } },\r\n            { \"mentorId.specialization\": { $regex: search, $options: \"i\" } },\r\n          ],\r\n        }\r\n      : {};\r\n\r\n    const total = await Collaboration.countDocuments(query);\r\n    const collabs = await Collaboration.find(query)\r\n      .populate({\r\n        path: \"mentorId\",\r\n        model: \"Mentor\",\r\n        populate: {\r\n          path: \"userId\",\r\n          model: \"User\",\r\n        },\r\n      })\r\n      .populate({\r\n        path: \"userId\",\r\n        model: \"User\",\r\n      })\r\n      .skip((page - 1) * limit)\r\n      .limit(limit);\r\n\r\n    return { collabs, total, page, pages: Math.ceil(total / limit) };\r\n  } catch (error: any) {\r\n    throw new Error(\"Error fetching collaborations: \" + error.message);\r\n  }\r\n};\r\n\r\n//get requset details\r\nexport const fetchMentorRequsetDetails = async(requsetId: string) =>{\r\n    try {\r\n      return await MentorRequest.findById(requsetId)\r\n      .populate({\r\n        path: \"mentorId\",\r\n        model: \"Mentor\",\r\n        populate: {\r\n          path: \"userId\",\r\n          model: \"User\",\r\n        },\r\n      })\r\n      .populate({\r\n        path: \"userId\",\r\n        model: \"User\",\r\n      }) ;\r\n  } catch (error:any) {\r\n    throw new Error(`Error fetching mentor request : ${error.message}`);\r\n  }\r\n}\r\n\r\n//get collab details\r\nexport const findCollabDetails = async (collabId: string): Promise<ICollaboration[] | null> => {\r\n  try {\r\n    return await Collaboration.findById(collabId)\r\n      .populate({\r\n        path: \"mentorId\",\r\n        model: \"Mentor\",\r\n        populate: {\r\n          path: \"userId\",\r\n          model: \"User\",\r\n        },\r\n      })\r\n      .populate({\r\n        path: \"userId\",\r\n        model: \"User\",\r\n      }) as ICollaboration[] | null;\r\n  } catch (error: any) {\r\n    throw new Error(\"Error fetching collaboration Details: \" + error.message);\r\n  }\r\n};\r\n\r\n// Update Unavailable Days\r\nexport const updateUnavailableDays = async (\r\n  collabId: string,\r\n  updateData: {\r\n    datesAndReasons: any;  // Dates and reasons array\r\n    requestedBy: string;\r\n    requesterId: string;\r\n    approvedById: string;\r\n    isApproved: string;\r\n  }\r\n) => {\r\n  try {\r\n    const updatedCollaboration = await Collaboration.findByIdAndUpdate(\r\n      collabId,\r\n      {\r\n        $push: {\r\n          \"unavailableDays\": {\r\n            datesAndReasons: updateData.datesAndReasons,\r\n            requestedBy: updateData.requestedBy,\r\n            requesterId: updateData.requesterId,\r\n            approvedById: updateData.approvedById,\r\n            isApproved: updateData.isApproved\r\n          }\r\n        }\r\n      },\r\n      { new: true }\r\n    );\r\n    console.log(\"Updated Collaboration :\",updatedCollaboration)\r\n    return updatedCollaboration;\r\n  } catch (error) {\r\n    console.log(\"error in collaboaration repositry :\",error)\r\n    throw new Error(`Error updating unavailable days: ${error}`);\r\n  }\r\n};\r\n\r\n// Update Temporary Slot Changes\r\nexport const updateTemporarySlotChanges = async (\r\n  collabId: string,\r\n  updateData: {\r\n    datesAndNewSlots: any;  // New time slots with dates\r\n    requestedBy: string;\r\n    requesterId: string;\r\n    approvedById: string;\r\n    isApproved: string;\r\n  }\r\n) => {\r\n  try {\r\n    const updatedCollaboration = await Collaboration.findByIdAndUpdate(\r\n      collabId,\r\n      {\r\n        $push: {\r\n          \"temporarySlotChanges\": {\r\n            datesAndNewSlots: updateData.datesAndNewSlots,\r\n            requestedBy: updateData.requestedBy,\r\n            requesterId: updateData.requesterId,\r\n            approvedById: updateData.approvedById,\r\n            isApproved: updateData.isApproved\r\n          }\r\n        }\r\n      },\r\n      { new: true }\r\n    );\r\n    console.log(\"Updated Collaboration :\",updatedCollaboration)\r\n    return updatedCollaboration;\r\n  } catch (error) {\r\n    console.log(\"error in collaboaration repositry :\",error)\r\n    throw new Error(`Error updating temporary slot changes: ${error}`);\r\n  }\r\n};\r\n\r\n//Update the is Approved of the collaboration\r\nexport const updateRequestStatus = async (\r\n  collabId: string,\r\n  requestId: string,\r\n  requestType: \"unavailable\" | \"timeSlot\",\r\n  status: \"approved\" | \"rejected\",\r\n): Promise<ICollaboration | null> => {\r\n  try {\r\n    const updateField = requestType === \"unavailable\" ? \"unavailableDays\" : \"temporarySlotChanges\";\r\n\r\n    let updateQuery: any = {\r\n      $set: {\r\n        [`${updateField}.$.isApproved`]: status,\r\n      },\r\n    };\r\n\r\n    // Fetch the collaboration to get current endDate and selected day\r\n    const collaboration = await Collaboration.findById(collabId);\r\n    if (!collaboration) throw new Error(\"Collaboration not found\");\r\n\r\n    // Only update endDate for unavailable requests when approved\r\n    if (requestType === \"unavailable\" && status === \"approved\") {\r\n      const request = collaboration.unavailableDays.find(\r\n        (req) => req._id.toString() === requestId\r\n      );\r\n      if (request) {\r\n        const unavailableDates = request.datesAndReasons.map((item) => new Date(item.date));\r\n        const selectedDay = collaboration.selectedSlot[0].day;\r\n        const currentEndDate = collaboration.endDate || collaboration.startDate; // Fallback to startDate if endDate is null\r\n        const newEndDate = calculateNewEndDate(currentEndDate, unavailableDates, selectedDay);\r\n        updateQuery.$set[\"endDate\"] = newEndDate;\r\n      }\r\n    }\r\n\r\n    // Perform the update\r\n    const updatedCollaboration = await Collaboration.findOneAndUpdate(\r\n      {\r\n        _id: collabId,\r\n        [`${updateField}._id`]: requestId,\r\n      },\r\n      updateQuery,\r\n      { new: true }\r\n    )\r\n      .populate({\r\n        path: \"mentorId\",\r\n        model: \"Mentor\",\r\n        populate: {\r\n          path: \"userId\",\r\n          model: \"User\",\r\n        },\r\n      })\r\n      .populate({\r\n        path: \"userId\",\r\n        model: \"User\",\r\n      });\r\n\r\n    if (!updatedCollaboration) {\r\n      throw new Error(\"Collaboration or request not found\");\r\n    }\r\n\r\n    console.log(\"Updated collaboration:\", updatedCollaboration);\r\n    return updatedCollaboration;\r\n  } catch (error: any) {\r\n    console.log(\"Error in repositry file :\",error);\r\n    throw new Error(`Error updating request status: ${error.message}`);\r\n  }\r\n};\r\n\r\n\r\n// Helper function to calculate new end date based on unavailable days\r\nconst calculateNewEndDate = (\r\n  currentEndDate: Date,\r\n  unavailableDates: Date[],\r\n  selectedDay: \"Sunday\" | \"Monday\" | \"Tuesday\" | \"Wednesday\" | \"Thursday\" | \"Friday\" | \"Saturday\"\r\n): Date => {\r\n  const dayMap: { [key in typeof selectedDay]: number } = {\r\n    Sunday: 0,\r\n    Monday: 1,\r\n    Tuesday: 2,\r\n    Wednesday: 3,\r\n    Thursday: 4,\r\n    Friday: 5,\r\n    Saturday: 6,\r\n  };\r\n  const selectedDayOfWeek = dayMap[selectedDay];\r\n  const newEndDate = new Date(currentEndDate);\r\n  const daysToAdd = unavailableDates.length; // Number of weeks to extend\r\n\r\n  // Move forward by the number of unavailable days, ensuring we land on the selected day\r\n  let currentDate = new Date(newEndDate);\r\n  let sessionsAdded = 0;\r\n\r\n  while (sessionsAdded < daysToAdd) {\r\n    currentDate.setDate(currentDate.getDate() + 1);\r\n    if (currentDate.getDay() === selectedDayOfWeek) {\r\n      sessionsAdded++;\r\n    }\r\n  }\r\n\r\n  return currentDate;\r\n};"]}