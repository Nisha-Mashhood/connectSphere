{"version":3,"file":"notification.repositry.js","sourceRoot":"","sources":["../../src/repositories/notification.repositry.ts"],"names":[],"mappings":"AAAA,OAAM,EAAE,IAAI,EAAE,MAAK,yBAAyB,CAAC;AAG7C,6BAA6B;AAC7B,MAAM,CAAC,MAAM,gBAAgB,GAAG,KAAK,EAAE,MAAa,EAAE,YAA6B,EAAE,EAAE;IACrF,OAAO,MAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,EAAE,wBAAwB,EAAE,YAAY,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;AACzG,CAAC,CAAC;AAEF,mCAAmC;AACnC,MAAM,CAAC,MAAM,uBAAuB,GAAG,KAAK,IAAI,EAAE;IAChD,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;IACvB,OAAO,MAAM,IAAI,CAAC,IAAI,CAAC;QACnB,MAAM,EAAE,EAAE,GAAG,EAAE,WAAW,EAAE,EAAC,+BAA+B;QAC5D,OAAO,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,yBAAyB;QACjD,gBAAgB,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,kDAAkD;QACnF,wBAAwB,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAG,mBAAmB;KAChE,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import{ Task }from \"../models/task.modal.js\";\r\nimport{ PushSubscription } from \"../services/notification.service.js\";\r\n\r\n//Save subscription to a task\r\nexport const saveSubscription = async (taskId:string, subscription:PushSubscription) => {\r\n  return await Task.findByIdAndUpdate(taskId, { notificationSubscription: subscription }, { new: true });\r\n};\r\n\r\n//Get tasks that need notifications\r\nexport const getTasksForNotification = async () => {\r\n  const now = new Date();\r\n  return await Task.find({\r\n      status: { $ne: \"completed\" },// Task should not be completed\r\n      dueDate: { $gte: now }, // Due date is not passed\r\n      notificationDate: { $lte: now }, // Fetch tasks where notification date has arrived\r\n      notificationSubscription: { $ne: null },  // Has subscription\r\n  });\r\n};"]}