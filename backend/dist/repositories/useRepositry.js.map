{"version":3,"file":"useRepositry.js","sourceRoot":"","sources":["../../src/repositories/useRepositry.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,IAAuB,MAAM,mBAAmB,CAAC;AAExD,oBAAoB;AACpB,MAAM,CAAC,MAAM,UAAU,GAAG,CAAO,QAAgC,EAAE,EAAE;IACjE,OAAO,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AACrC,CAAC,CAAA,CAAC;AAEF,uBAAuB;AACvB,MAAM,CAAC,MAAM,eAAe,GAAG,CAAO,KAAa,EAAE,EAAE;IACrD,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;AACvC,CAAC,CAAA,CAAC;AAEF,oBAAoB;AACpB,MAAM,CAAC,MAAM,YAAY,GAAG,CAAO,EAAU,EAAE,EAAE;IAC/C,OAAO,MAAM,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACjC,CAAC,CAAA,CAAC;AAEF,gBAAgB;AAChB,MAAM,CAAC,MAAM,UAAU,GAAG,CAAO,EAAU,EAAE,UAAkC,EAAE,EAAE;IACjF,OAAO,MAAM,IAAI,CAAC,iBAAiB,CAAC,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;AACrE,CAAC,CAAA,CAAC","sourcesContent":["import User, { UserInterface } from '../models/user.js';\r\n\r\n// Create a new user\r\nexport const createUser = async (userData: Partial<UserInterface>) => {\r\n    return await User.create(userData);\r\n  };\r\n  \r\n  // Find a user by email\r\n  export const findUserByEmail = async (email: string) => {\r\n    return await User.findOne({ email });\r\n  };\r\n  \r\n  // Find a user by ID\r\n  export const findUserById = async (id: string) => {\r\n    return await User.findById(id);\r\n  };\r\n  \r\n  // Update a user\r\n  export const updateUser = async (id: string, updateData: Partial<UserInterface>) => {\r\n    return await User.findByIdAndUpdate(id, updateData, { new: true });\r\n  };\r\n"]}