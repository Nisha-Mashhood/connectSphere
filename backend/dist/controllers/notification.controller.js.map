{"version":3,"file":"notification.controller.js","sourceRoot":"","sources":["../../src/controllers/notification.controller.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,mBAAmB,MAAM,qCAAqC,CAAC;AAEzE,MAAM,CAAC,MAAM,gBAAgB,GAAG,KAAK,EAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IACnE,MAAM,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,MAAgB,CAAC;IAC1C,IAAI,CAAC,MAAM,EAAE,CAAC;QACb,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC,CAAC;QACtD,OAAM;IACP,CAAC;IACD,MAAM,aAAa,GAAG,MAAM,mBAAmB,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;IACzE,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AAC1B,CAAC,CAAA;AAED,MAAM,CAAC,MAAM,UAAU,GAAG,KAAK,EAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IAC7D,MAAM,EAAE,cAAc,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;IACtC,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC;IACtF,IAAI,CAAC,YAAY,EAAE,CAAC;QAClB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,wBAAwB,EAAE,CAAC,CAAC;QAC1D,OAAM;IACR,CAAC;IACD,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACzB,CAAC,CAAA;AAED,MAAM,CAAC,MAAM,cAAc,GAAG,KAAK,EAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IACjE,MAAM,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,MAAgB,CAAC;IAC1C,IAAI,CAAC,MAAM,EAAE,CAAC;QACZ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,oBAAoB,EAAE,CAAC,CAAC;QACtD,OAAM;IACR,CAAC;IACD,MAAM,KAAK,GAAG,MAAM,mBAAmB,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;IAC/D,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;AACtB,CAAC,CAAA","sourcesContent":["import { Request, Response } from \"express\";\r\nimport * as notificationService from \"../services/notification.service.js\";\r\n\r\n  export const getNotifications = async(req: Request, res: Response) =>{\r\n    const userId = req.query.userId as string;\r\n    if (!userId) {\r\n     res.status(400).json({ error: 'userId is required' });\r\n     return \r\n    }\r\n    const notifications = await notificationService.getNotifications(userId);\r\n    res.json(notifications);\r\n  }\r\n\r\n  export const markAsRead = async(req: Request, res: Response) =>{\r\n    const { notificationId } = req.params;\r\n    const notification = await notificationService.markNotificationAsRead(notificationId);\r\n    if (!notification) {\r\n      res.status(404).json({ error: 'Notification not found' });\r\n      return \r\n    }\r\n    res.json(notification);\r\n  }\r\n\r\n  export const getUnreadCount = async(req: Request, res: Response) => {\r\n    const userId = req.query.userId as string;\r\n    if (!userId) {\r\n      res.status(400).json({ error: 'userId is required' });\r\n      return \r\n    }\r\n    const count = await notificationService.getUnreadCount(userId);\r\n    res.json({ count });\r\n  }\r\n"]}