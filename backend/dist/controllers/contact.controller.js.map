{"version":3,"file":"contact.controller.js","sourceRoot":"","sources":["../../src/controllers/contact.controller.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,sBAAsB,EAAE,MAAM,gCAAgC,CAAC;AAExE,MAAM,CAAC,MAAM,yBAAyB,GAAG,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,EAAE;IAC7E,IAAI,CAAC;QACH,MAAM,MAAM,GAAG,GAAG,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,8BAA8B;QACnE,MAAM,QAAQ,GAAG,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,8BAA8B;QACtE,IAAI,CAAC,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;YACzB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,8BAA8B,EAAE,CAAC,CAAC;YAClE,OAAM;QACR,CAAC;QAED,MAAM,QAAQ,GAAG,MAAM,sBAAsB,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;QAEjE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,iCAAiC,EAAE,CAAC,CAAC;QACrF,OAAO;IACT,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,qCAAqC,EAAE,KAAK,CAAC,CAAC;QAC5D,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,6BAA6B,EAAE,CAAC,CAAC;QACjE,OAAO;IACT,CAAC;AACH,CAAC,CAAC","sourcesContent":["import { Request, Response } from \"express\";\r\nimport { getUserContactsService } from \"../services/contact.service.js\";\r\n\r\nexport const getUserContactsController = async (req: Request, res: Response) => {\r\n  try {\r\n    const userId = req.currentUser?._id; // From verifyToken middleware\r\n    const userRole = req.currentUser?.role; // From verifyToken middleware\r\n    if (!userId || !userRole) {\r\n      res.status(400).json({ message: \"User ID or role not provided\" });\r\n      return \r\n    }\r\n\r\n    const contacts = await getUserContactsService(userId.toString());\r\n\r\n    res.status(200).json({ data: contacts, message: \"Contacts retrieved successfully\" });\r\n    return;\r\n  } catch (error) {\r\n    console.error(\"Error in getUserContactsController:\", error);\r\n    res.status(500).json({ message: \"Failed to retrieve contacts\" });\r\n    return;\r\n  }\r\n};"]}