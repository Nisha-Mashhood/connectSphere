{"version":3,"file":"subcategory.controller.js","sourceRoot":"","sources":["../../src/controllers/subcategory.controller.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,kBAAkB,MAAM,oCAAoC,CAAC;AAEzE,MAAM,CAAC,MAAM,iBAAiB,GAAG,KAAK,EACpC,GAAY,EACZ,GAAa,EACE,EAAE;IACjB,IAAI,CAAC;QACH,MAAM,SAAS,GAAG,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;QACjC,MAAM,QAAQ,GAAG,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;QAChC,MAAM,WAAW,GAAG,MAAM,kBAAkB,CAAC,iBAAiB,CAC5D,GAAG,CAAC,IAAI,EACR,SAAS,EACT,QAAQ,CACT,CAAC;QACF,GAAG;aACA,MAAM,CAAC,GAAG,CAAC;aACX,IAAI,CAAC,EAAE,OAAO,EAAE,kCAAkC,EAAE,WAAW,EAAE,CAAC,CAAC;IACxE,CAAC;IAAC,OAAO,KAAU,EAAE,CAAC;QACpB,GAAG;aACA,MAAM,CAAC,GAAG,CAAC;aACX,IAAI,CAAC,EAAE,OAAO,EAAE,4BAA4B,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;IAC3E,CAAC;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,mBAAmB,GAAG,KAAK,EACtC,GAAY,EACZ,GAAa,EACE,EAAE;IACjB,IAAI,CAAC;QACH,MAAM,aAAa,GAAG,MAAM,kBAAkB,CAAC,mBAAmB,CAChE,GAAG,CAAC,MAAM,CAAC,UAAU,CACtB,CAAC;QACF,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACtC,CAAC;IAAC,OAAO,KAAU,EAAE,CAAC;QACpB,GAAG;aACA,MAAM,CAAC,GAAG,CAAC;aACX,IAAI,CAAC,EAAE,OAAO,EAAE,8BAA8B,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;IAC7E,CAAC;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,kBAAkB,GAAG,KAAK,EACrC,GAAY,EACZ,GAAa,EACE,EAAE;IACjB,IAAI,CAAC;QACH,MAAM,WAAW,GAAG,MAAM,kBAAkB,CAAC,kBAAkB,CAC7D,GAAG,CAAC,MAAM,CAAC,EAAE,CACd,CAAC;QACF,IAAI,CAAC,WAAW,EAAE,CAAC;YACjB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,uBAAuB,EAAE,CAAC,CAAC;YAC3D,OAAO;QACT,CAAC;QACD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACpC,CAAC;IAAC,OAAO,KAAU,EAAE,CAAC;QACpB,GAAG;aACA,MAAM,CAAC,GAAG,CAAC;aACX,IAAI,CAAC,EAAE,OAAO,EAAE,4BAA4B,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;IAC3E,CAAC;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,iBAAiB,GAAG,KAAK,EACpC,GAAY,EACZ,GAAa,EACE,EAAE;IACjB,IAAI,CAAC;QACH,MAAM,SAAS,GAAG,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;QACjC,MAAM,QAAQ,GAAG,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;QAChC,MAAM,kBAAkB,GAAG,MAAM,kBAAkB,CAAC,iBAAiB,CACnE,GAAG,CAAC,MAAM,CAAC,EAAE,EACb,GAAG,CAAC,IAAI,EACR,SAAS,EACT,QAAQ,CACT,CAAC;QACF,IAAI,CAAC,kBAAkB,EAAE,CAAC;YACxB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,uBAAuB,EAAE,CAAC,CAAC;YAC3D,OAAO;QACT,CAAC;QACD,GAAG;aACA,MAAM,CAAC,GAAG,CAAC;aACX,IAAI,CAAC;YACJ,OAAO,EAAE,kCAAkC;YAC3C,kBAAkB;SACnB,CAAC,CAAC;IACP,CAAC;IAAC,OAAO,KAAU,EAAE,CAAC;QACpB,GAAG;aACA,MAAM,CAAC,GAAG,CAAC;aACX,IAAI,CAAC,EAAE,OAAO,EAAE,4BAA4B,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;IAC3E,CAAC;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,iBAAiB,GAAG,KAAK,EACpC,GAAY,EACZ,GAAa,EACE,EAAE;IACjB,IAAI,CAAC;QACH,MAAM,kBAAkB,GAAG,MAAM,kBAAkB,CAAC,iBAAiB,CACnE,GAAG,CAAC,MAAM,CAAC,EAAE,CACd,CAAC;QACF,IAAI,CAAC,kBAAkB,EAAE,CAAC;YACxB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,uBAAuB,EAAE,CAAC,CAAC;YAC3D,OAAO;QACT,CAAC;QACD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,kCAAkC,EAAE,CAAC,CAAC;IACxE,CAAC;IAAC,OAAO,KAAU,EAAE,CAAC;QACpB,GAAG;aACA,MAAM,CAAC,GAAG,CAAC;aACX,IAAI,CAAC,EAAE,OAAO,EAAE,4BAA4B,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;IAC3E,CAAC;AACH,CAAC,CAAC","sourcesContent":["import { Request, Response } from \"express\";\r\nimport * as SubcategoryService from \"../services/subcategory.service.js\";\r\n\r\nexport const createSubcategory = async (\r\n  req: Request,\r\n  res: Response\r\n): Promise<void> => {\r\n  try {\r\n    const imagePath = req.file?.path;\r\n    const fileSize = req.file?.size;\r\n    const subcategory = await SubcategoryService.createSubcategory(\r\n      req.body,\r\n      imagePath,\r\n      fileSize\r\n    );\r\n    res\r\n      .status(201)\r\n      .json({ message: \"Subcategory created successfully\", subcategory });\r\n  } catch (error: any) {\r\n    res\r\n      .status(500)\r\n      .json({ message: \"Error creating subcategory\", error: error.message });\r\n  }\r\n};\r\n\r\nexport const getAllSubcategories = async (\r\n  req: Request,\r\n  res: Response\r\n): Promise<void> => {\r\n  try {\r\n    const subcategories = await SubcategoryService.getAllSubcategories(\r\n      req.params.categoryId\r\n    );\r\n    res.status(200).json(subcategories);\r\n  } catch (error: any) {\r\n    res\r\n      .status(500)\r\n      .json({ message: \"Error fetching subcategories\", error: error.message });\r\n  }\r\n};\r\n\r\nexport const getSubcategoryById = async (\r\n  req: Request,\r\n  res: Response\r\n): Promise<void> => {\r\n  try {\r\n    const subcategory = await SubcategoryService.getSubcategoryById(\r\n      req.params.id\r\n    );\r\n    if (!subcategory) {\r\n      res.status(404).json({ message: \"Subcategory not found\" });\r\n      return;\r\n    }\r\n    res.status(200).json(subcategory);\r\n  } catch (error: any) {\r\n    res\r\n      .status(500)\r\n      .json({ message: \"Error fetching subcategory\", error: error.message });\r\n  }\r\n};\r\n\r\nexport const updateSubcategory = async (\r\n  req: Request,\r\n  res: Response\r\n): Promise<void> => {\r\n  try {\r\n    const imagePath = req.file?.path;\r\n    const fileSize = req.file?.size;\r\n    const updatedSubcategory = await SubcategoryService.updateSubcategory(\r\n      req.params.id,\r\n      req.body,\r\n      imagePath,\r\n      fileSize\r\n    );\r\n    if (!updatedSubcategory) {\r\n      res.status(404).json({ message: \"Subcategory not found\" });\r\n      return;\r\n    }\r\n    res\r\n      .status(200)\r\n      .json({\r\n        message: \"Subcategory updated successfully\",\r\n        updatedSubcategory,\r\n      });\r\n  } catch (error: any) {\r\n    res\r\n      .status(500)\r\n      .json({ message: \"Error updating subcategory\", error: error.message });\r\n  }\r\n};\r\n\r\nexport const deleteSubcategory = async (\r\n  req: Request,\r\n  res: Response\r\n): Promise<void> => {\r\n  try {\r\n    const deletedSubcategory = await SubcategoryService.deleteSubcategory(\r\n      req.params.id\r\n    );\r\n    if (!deletedSubcategory) {\r\n      res.status(404).json({ message: \"Subcategory not found\" });\r\n      return;\r\n    }\r\n    res.status(200).json({ message: \"Subcategory deleted successfully\" });\r\n  } catch (error: any) {\r\n    res\r\n      .status(500)\r\n      .json({ message: \"Error deleting subcategory\", error: error.message });\r\n  }\r\n};\r\n"]}