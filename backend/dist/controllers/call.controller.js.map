{"version":3,"file":"call.controller.js","sourceRoot":"","sources":["../../src/controllers/call.controller.ts"],"names":[],"mappings":"AAAA,+CAA+C;AAC/C,8DAA8D;;AAE9D,kEAAkE;AAClE,UAAU;AACV,yEAAyE;AACzE,uEAAuE;AACvE,oEAAoE;AACpE,gBAAgB;AAChB,QAAQ;AACR,8CAA8C;AAC9C,iBAAiB;AACjB,kBAAkB;AAClB,qBAAqB;AACrB,cAAc;AACd,eAAe;AACf,SAAS;AACT,+DAA+D;AAC/D,2BAA2B;AAC3B,sDAAsD;AACtD,MAAM;AACN,KAAK;AAEL,4EAA4E;AAC5E,UAAU;AACV,qCAAqC;AACrC,sBAAsB;AACtB,gEAAgE;AAChE,gBAAgB;AAChB,QAAQ;AACR,4EAA4E;AAC5E,oDAAoD;AACpD,2BAA2B;AAC3B,sDAAsD;AACtD,MAAM;AACN,KAAK;AAEL,2EAA2E;AAC3E,UAAU;AACV,oCAAoC;AACpC,qBAAqB;AACrB,+DAA+D;AAC/D,gBAAgB;AAChB,QAAQ;AACR,0EAA0E;AAC1E,oDAAoD;AACpD,2BAA2B;AAC3B,sDAAsD;AACtD,MAAM;AACN,KAAK","sourcesContent":["// import { Request, Response } from \"express\";\r\n// import * as CallService from \"../services/call.service.js\";\r\n\r\n// export const logCall = async (req: Request, res: Response) => {\r\n//   try {\r\n//     const { chatKey, callerId, recipientId, type, status } = req.body;\r\n//     if (!chatKey || !callerId || !recipientId || !type || !status) {\r\n//       res.status(400).json({ error: \"Missing required fields\" });\r\n//       return;\r\n//     }\r\n//     const call = await CallService.logCall(\r\n//       chatKey,\r\n//       callerId,\r\n//       recipientId,\r\n//       type,\r\n//       status\r\n//     );\r\n//     res.status(201).json({ status: \"success\", data: call });\r\n//   } catch (error: any) {\r\n//     res.status(500).json({ error: error.message });\r\n//   }\r\n// };\r\n\r\n// export const getCallsByChatKey = async (req: Request, res: Response) => {\r\n//   try {\r\n//     const { chatKey } = req.query;\r\n//     if (!chatKey) {\r\n//       res.status(400).json({ error: \"chatKey is required\" });\r\n//       return;\r\n//     }\r\n//     const calls = await CallService.getCallsByChatKey(chatKey as string);\r\n//     res.json({ status: \"success\", data: calls });\r\n//   } catch (error: any) {\r\n//     res.status(500).json({ error: error.message });\r\n//   }\r\n// };\r\n\r\n// export const getCallsByUserId = async (req: Request, res: Response) => {\r\n//   try {\r\n//     const { userId } = req.query;\r\n//     if (!userId) {\r\n//       res.status(400).json({ error: \"userId is required\" });\r\n//       return;\r\n//     }\r\n//     const calls = await CallService.getCallsByUserId(userId as string);\r\n//     res.json({ status: \"success\", data: calls });\r\n//   } catch (error: any) {\r\n//     res.status(500).json({ error: error.message });\r\n//   }\r\n// };\r\n"]}