{"version":3,"file":"group.controller.js","sourceRoot":"","sources":["../../src/controllers/group.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from \"express\";\r\nimport {\r\n  createGroupService,\r\n  deleteGroupByIdService,\r\n  fetchAllGroupRequests,\r\n  // fetchAllGroups,\r\n  fetchGroupDetails,\r\n  // fetchGroupDetailsById,\r\n  fetchGroupDetailsService,\r\n  fetchGroupRequestById,\r\n  fetchGroupRequestsByAdminId,\r\n  fetchGroupRequestsByGroupId,\r\n  fetchGroupRequestsByuserId,\r\n  fetchGroups,\r\n  groupDetilsForMembers,\r\n  modifyGroupRequestStatus,\r\n  processGroupPaymentService,\r\n  removeMemberFromGroup,\r\n  requestToJoinGroup,\r\n  updateGroupImageService,\r\n} from \"../services/group.service.js\";\r\nimport { findRequestById } from \"../repositories/group.repositry.js\";\r\nimport { uploadImage } from \"../utils/cloudinary.utils.js\";\r\nexport const createGroup = async (req: Request, res: Response) => {\r\n  try {\r\n    const groupData = req.body;\r\n    const createdGroup = await createGroupService(groupData);\r\n\r\n    res.status(201).json({\r\n      success: true,\r\n      message: \"Group created successfully\",\r\n      data: createdGroup,\r\n    });\r\n  } catch (error: any) {\r\n    console.error(\"Error in createGroupController:\", error);\r\n    res.status(500).json({\r\n      success: false,\r\n      message: error.message || \"Internal server error\",\r\n    });\r\n  }\r\n};\r\n\r\nexport const getGroupDetails = async (req: Request, res: Response) => {\r\n  const { adminId } = req.params;\r\n\r\n  try {\r\n    const groupDetails = await fetchGroupDetails(adminId);\r\n    if (groupDetails.length === 0) {\r\n      res.status(404).json({ message: \"No groups found for this admin.\" });\r\n      return;\r\n    }\r\n\r\n    res\r\n      .status(200)\r\n      .json({ message: \"Groups fetched successfully\", data: groupDetails });\r\n    return;\r\n  } catch (error: any) {\r\n    res.status(500).json({ message: error.message });\r\n    return;\r\n  }\r\n};\r\n\r\nexport const getGroupDetailsByGroupId = async (req: Request, res: Response) => {\r\n  const { groupId } = req.params;\r\n  try {\r\n    const groupDetails = await fetchGroupDetailsService(groupId);\r\n\r\n    // Check if groupDetails is null or undefined\r\n    if (!groupDetails) {\r\n      res.status(404).json({ message: \"No group found with the provided ID.\" });\r\n      return;\r\n    }\r\n\r\n    res\r\n      .status(200)\r\n      .json({ message: \"Groups fetched successfully\", data: groupDetails });\r\n    return;\r\n  } catch (error: any) {\r\n    res.status(500).json({ message: error.message });\r\n    return;\r\n  }\r\n};\r\n\r\nexport const getGroups = async (_req: Request, res: Response) => {\r\n  try {\r\n    const groupDetails = await fetchGroups();\r\n    if (groupDetails.length === 0) {\r\n      res.status(404).json({ message: \"No groups found.\" });\r\n      return;\r\n    }\r\n\r\n    res\r\n      .status(200)\r\n      .json({ message: \"Groups fetched successfully\", data: groupDetails });\r\n    return;\r\n  } catch (error: any) {\r\n    res.status(500).json({ message: error.message });\r\n    return;\r\n  }\r\n};\r\n\r\nexport const sendGroupRequset = async (req: Request, res: Response) => {\r\n  const { groupId, userId } = req.body;\r\n  try {\r\n    const requsetDeatils = await requestToJoinGroup(groupId, userId);\r\n    res\r\n      .status(201)\r\n      .json({ message: \"Requset send successfully\", data: requsetDeatils });\r\n    return;\r\n  } catch (error: any) {\r\n    res.status(500).json({ message: error.message });\r\n    return;\r\n  }\r\n};\r\n\r\nexport const getrequsetDeatilsbyGroupId = async (\r\n  req: Request,\r\n  res: Response\r\n) => {\r\n  const { groupId } = req.params;\r\n  try {\r\n    const requsetDeatils = await fetchGroupRequestsByGroupId(groupId);\r\n    res\r\n      .status(201)\r\n      .json({ message: \"Requset accessed successfully\", data: requsetDeatils });\r\n    return;\r\n  } catch (error: any) {\r\n    res.status(500).json({ message: error.message });\r\n    return;\r\n  }\r\n};\r\n\r\nexport const getrequsetDeatilsbyAdminId = async (\r\n  req: Request,\r\n  res: Response\r\n) => {\r\n  const { adminId } = req.params;\r\n  try {\r\n    const requsetDeatils = await fetchGroupRequestsByAdminId(adminId);\r\n    res\r\n      .status(201)\r\n      .json({ message: \"Requset accessed successfully\", data: requsetDeatils });\r\n    return;\r\n  } catch (error: any) {\r\n    res.status(500).json({ message: error.message });\r\n    return;\r\n  }\r\n};\r\n\r\nexport const getrequsetDeatilsbyUserId = async (\r\n  req: Request,\r\n  res: Response\r\n) => {\r\n  const { userId } = req.params;\r\n  try {\r\n    const requsetDeatils = await fetchGroupRequestsByuserId(userId);\r\n    res\r\n      .status(201)\r\n      .json({ message: \"Requset accessed successfully\", data: requsetDeatils });\r\n    return;\r\n  } catch (error: any) {\r\n    res.status(500).json({ message: error.message });\r\n    return;\r\n  }\r\n};\r\n\r\nexport const updaterequsetDeatils = async (req: Request, res: Response) => {\r\n  const { requestId, status } = req.body;\r\n  try {\r\n    const requsetDeatils = await modifyGroupRequestStatus(requestId, status);\r\n    res\r\n      .status(201)\r\n      .json({ message: \"Requset updated successfully\", data: requsetDeatils });\r\n    return;\r\n  } catch (error: any) {\r\n    res.status(500).json({ message: error.message });\r\n    return;\r\n  }\r\n};\r\n\r\n//Make payemnt requset\r\nexport const makeStripePaymentController = async (req: Request, res: Response) => {\r\n  const { paymentMethodId, amount, requestId, email, groupRequestData, returnUrl } = req.body;\r\n  console.log(\"Payment request received:\", req.body);\r\n\r\n  try {\r\n    // Validate input\r\n    if (!paymentMethodId || !amount || !requestId || !email || !groupRequestData || !returnUrl) {\r\n       res.status(400).json({\r\n        status: \"failure\",\r\n        message: \"Missing required payment information\"\r\n      });\r\n      return\r\n    }\r\n\r\n    // Retrieve the group request document\r\n    const groupRequest = await findRequestById(requestId);\r\n    if (!groupRequest) {\r\n      res.status(404).json({\r\n        status: \"failure\",\r\n        message: \"Group request not found\"\r\n      });\r\n      return\r\n    }\r\n\r\n    // Process payment and handle members in group collection\r\n    const paymentResult = await processGroupPaymentService(\r\n      paymentMethodId,\r\n      amount,\r\n      requestId,\r\n      email,\r\n      groupRequestData,\r\n      returnUrl\r\n    );\r\n\r\n    // Handle different payment intent statuses\r\n    if (paymentResult.status === \"requires_action\" && paymentResult.next_action) {\r\n      // Payment requires additional action (like 3D Secure)\r\n      res.status(200).json({ \r\n        status: \"requires_action\", \r\n        charge: paymentResult \r\n      });\r\n      return;\r\n    } else if (paymentResult.status === \"succeeded\") {\r\n      // Payment succeeded\r\n      res.status(200).json({ status: \"success\", charge: paymentResult });\r\n      return;\r\n    } else {\r\n      // Payment failed or is pending\r\n      res.status(200).json({ \r\n        status: \"pending\", \r\n        charge: paymentResult,\r\n        message: `Payment status: ${paymentResult.status}` \r\n      });\r\n      return;\r\n    }\r\n    \r\n  } catch (error: any) {\r\n    console.error(\"Payment processing error:\", error.message);\r\n    res.status(500).json({\r\n      status: \"failure\",\r\n      error: error.message || \"An error occurred during payment processing\"\r\n    });\r\n    return\r\n  }\r\n};\r\n\r\nexport const removeGroupMember = async (req: Request, res: Response) => {\r\n  const { groupId, userId } = req.body;\r\n  try {\r\n    const response = await removeMemberFromGroup(groupId, userId);\r\n    res.status(200).json({ status: \"success\", response });\r\n  } catch (error: any) {\r\n    console.error(\"Error:\", error.message);\r\n    res.status(500).json({ status: \"failure\", error: error.message });\r\n  }\r\n};\r\n\r\nexport const deleteGroup = async (req: Request, res: Response) => {\r\n  const { groupId } = req.params;\r\n\r\n  try {\r\n    const response = await deleteGroupByIdService(groupId);\r\n    res\r\n      .status(200)\r\n      .json({\r\n        status: \"success\",\r\n        message: \"Group deleted successfully\",\r\n        response,\r\n      });\r\n  } catch (error: any) {\r\n    console.error(\"Error:\", error.message);\r\n    res.status(500).json({ status: \"failure\", error: error.message });\r\n  }\r\n};\r\n\r\n//Update the profile picture and cover picture for the group\r\nexport const updateGroupImage = async (req: Request, res: Response) => {\r\n\r\n  console.log(req.body);\r\n  try {\r\n    const { groupId } = req.params;\r\n    const files = req.files as\r\n      | { [fieldname: string]: Express.Multer.File[] }\r\n      | undefined;\r\n\r\n    if (!files || Object.keys(files).length === 0) {\r\n      res.status(400).json({ error: \"No file uploaded\" });\r\n      return;\r\n    }\r\n\r\n    // Extract the profile or cover photo if available\r\n    const profilePic = files[\"profilePic\"]?.[0] || null;\r\n    const coverPic = files[\"coverPic\"]?.[0] || null;\r\n\r\n    if (!profilePic && !coverPic) {\r\n      res.status(400).json({ error: \"Invalid file upload\" });\r\n      return;\r\n    }\r\n\r\n    let profilePicUrl: string | undefined;\r\n    let coverPicUrl: string | undefined;\r\n\r\n    // Upload profile picture if available\r\n    if (files[\"profilePic\"]?.[0]) {\r\n      const profilePicPath = files[\"profilePic\"][0].path;\r\n      profilePicUrl = await uploadImage(\r\n        profilePicPath,\r\n        \"group_profile_pictures\"\r\n      );\r\n    }\r\n\r\n    // Upload cover picture if available\r\n    if (files[\"coverPic\"]?.[0]) {\r\n      const coverPicPath = files[\"coverPic\"][0].path;\r\n      coverPicUrl = await uploadImage(coverPicPath, \"group_cover_pictures\");\r\n\r\n    }\r\n\r\n    // Update the group record\r\n    const updatedGroup = await updateGroupImageService(\r\n      groupId,\r\n      profilePicUrl,\r\n      coverPicUrl\r\n    );\r\n\r\n    res\r\n      .status(200)\r\n      .json({ message: \"Image updated successfully\", updatedGroup });\r\n  } catch (error) {\r\n    console.error(\"Error updating group images:\", error);\r\n    res.status(500).json({ error: \"Internal Server Error\" });\r\n  }\r\n};\r\n\r\n//Fetch group details for members\r\nexport const fetchGroupDetailsForMembers = async (req: Request, res: Response) => {\r\n  const userId = req.params.userid;\r\n\r\n  try {\r\n    // Fetch group details by userId using GroupService\r\n    const groupDetails = await groupDetilsForMembers(userId);\r\n\r\n    if (!groupDetails) {\r\n      res.status(404).json({ message: \"Group not found or user is not part of a group.\" });\r\n      return \r\n    }\r\n\r\n    res.status(200).json(groupDetails);\r\n  } catch (error) {\r\n    console.error(\"Error fetching group details:\", error);\r\n    res.status(500).json({ message: \"Internal server error\" });\r\n  }\r\n};\r\n\r\n// // Get all groups\r\n// export const getAllGroupsController = async (_req: Request, res: Response) => {\r\n//   try {\r\n//     const groups = await fetchAllGroups();\r\n//     res.status(200).json(groups);\r\n//   } catch (error: any) {\r\n//     res.status(500).json({ message: error.message });\r\n//   }\r\n// };\r\n\r\n// // Get group details by ID\r\n// export const getGroupDetailsByIdController = async (req: Request, res: Response) => {\r\n//   try {\r\n//     const groupId = req.params.groupId;\r\n//     const groupDetails = await fetchGroupDetailsById(groupId);\r\n//     if (!groupDetails) {\r\n//       res.status(404).json({ message: \"Group not found\" });\r\n//       return \r\n//     }\r\n//     res.status(200).json(groupDetails);\r\n//   } catch (error: any) {\r\n//     res.status(500).json({ message: error.message });\r\n//   }\r\n// };\r\n\r\n// Get all group requests\r\nexport const getAllGroupRequestsController = async (_req: Request, res: Response) => {\r\n  try {\r\n    const groupRequests = await fetchAllGroupRequests();\r\n    res.status(200).json(groupRequests);\r\n  } catch (error: any) {\r\n    res.status(500).json({ message: error.message });\r\n  }\r\n};\r\n\r\n// Get group request details by request ID\r\nexport const getGroupRequestByIdController = async (req: Request, res: Response) => {\r\n  try {\r\n    const requestId = req.params.requestId;\r\n    const requestDetails = await fetchGroupRequestById(requestId);\r\n    if (!requestDetails) {\r\n      res.status(404).json({ message: \"Group request not found\" });\r\n      return \r\n    }\r\n    res.status(200).json(requestDetails);\r\n  } catch (error: any) {\r\n    res.status(500).json({ message: error.message });\r\n  }\r\n};"]}