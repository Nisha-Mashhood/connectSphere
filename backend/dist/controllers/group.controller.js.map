{"version":3,"file":"group.controller.js","sourceRoot":"","sources":["../../src/controllers/group.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from \"express\";\r\nimport {\r\n  createGroupService,\r\n  fetchGroupDetails,\r\n  fetchGroupRequestsByAdminId,\r\n  fetchGroupRequestsByGroupId,\r\n  fetchGroupRequestsByuserId,\r\n  fetchGroups,\r\n  modifyGroupRequestStatus,\r\n  requestToJoinGroup,\r\n} from \"../services/group.service.js\";\r\n\r\nexport const createGroup = async (req: Request, res: Response) => {\r\n  try {\r\n    const groupData = req.body;\r\n    const createdGroup = await createGroupService(groupData);\r\n\r\n    res.status(201).json({\r\n      success: true,\r\n      message: \"Group created successfully\",\r\n      data: createdGroup,\r\n    });\r\n  } catch (error: any) {\r\n    console.error(\"Error in createGroupController:\", error);\r\n    res.status(500).json({\r\n      success: false,\r\n      message: error.message || \"Internal server error\",\r\n    });\r\n  }\r\n};\r\n\r\nexport const getGroupDetails = async (req: Request, res: Response) => {\r\n  const { adminId } = req.params;\r\n\r\n  try {\r\n    const groupDetails = await fetchGroupDetails(adminId);\r\n    if (groupDetails.length === 0) {\r\n      res.status(404).json({ message: \"No groups found for this admin.\" });\r\n      return;\r\n    }\r\n\r\n    res\r\n      .status(200)\r\n      .json({ message: \"Groups fetched successfully\", data: groupDetails });\r\n    return;\r\n  } catch (error: any) {\r\n    res.status(500).json({ message: error.message });\r\n    return;\r\n  }\r\n};\r\n\r\nexport const getGroups = async (_req: Request, res: Response) => {\r\n  try {\r\n    const groupDetails = await fetchGroups();\r\n    if (groupDetails.length === 0) {\r\n      res.status(404).json({ message: \"No groups found.\" });\r\n      return;\r\n    }\r\n\r\n    res\r\n      .status(200)\r\n      .json({ message: \"Groups fetched successfully\", data: groupDetails });\r\n    return;\r\n  } catch (error: any) {\r\n    res.status(500).json({ message: error.message });\r\n    return;\r\n  }\r\n};\r\n\r\nexport const sendGroupRequset = async(req:Request, res:Response) =>{\r\n  const { groupId, userId } = req.body;\r\n  try {\r\n    const requsetDeatils = await requestToJoinGroup(groupId, userId)\r\n    res.status(201).json({message:\"Requset send successfully\",data: requsetDeatils});\r\n    return;\r\n  } catch (error:any) {\r\n    res.status(500).json({ message: error.message });\r\n    return;\r\n  }\r\n}\r\n\r\nexport const getrequsetDeatilsbyGroupId = async(req:Request, res:Response) =>{\r\n  const { groupId } = req.params;\r\n  try {\r\n    const requsetDeatils = await fetchGroupRequestsByGroupId(groupId)\r\n    res.status(201).json({message:\"Requset accessed successfully\",data: requsetDeatils});\r\n    return;\r\n  } catch (error:any) {\r\n    res.status(500).json({ message: error.message });\r\n    return;\r\n  }\r\n}\r\n\r\nexport const getrequsetDeatilsbyAdminId = async(req:Request, res:Response) =>{\r\n  const { adminId } = req.params;\r\n  try {\r\n    const requsetDeatils = await fetchGroupRequestsByAdminId(adminId)\r\n    res.status(201).json({message:\"Requset accessed successfully\",data: requsetDeatils});\r\n    return;\r\n  } catch (error:any) {\r\n    res.status(500).json({ message: error.message });\r\n    return;\r\n  }\r\n}\r\n\r\nexport const getrequsetDeatilsbyUserId = async(req:Request, res:Response) =>{\r\n  const { userId } = req.params;\r\n  try {\r\n    const requsetDeatils = await fetchGroupRequestsByuserId(userId)\r\n    res.status(201).json({message:\"Requset accessed successfully\",data: requsetDeatils});\r\n    return;\r\n  } catch (error:any) {\r\n    res.status(500).json({ message: error.message });\r\n    return;\r\n  }\r\n}\r\n\r\nexport const updaterequsetDeatils = async(req:Request, res:Response) =>{\r\n  const { requestId, status } = req.body;\r\n  try {\r\n    const requsetDeatils = await modifyGroupRequestStatus(requestId, status)\r\n    res.status(201).json({message:\"Requset updated successfully\",data: requsetDeatils});\r\n    return;\r\n  } catch (error:any) {\r\n    res.status(500).json({ message: error.message });\r\n    return;\r\n  }\r\n}"]}