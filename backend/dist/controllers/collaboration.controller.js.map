{"version":3,"file":"collaboration.controller.js","sourceRoot":"","sources":["../../src/controllers/collaboration.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from \"express\";\r\nimport { acceptRequest,  getCollabDataForMentorService,  getCollabDataForUserService,  getMentorRequests,  getRequsetForUser,  processPaymentService,  rejectRequest, TemporaryRequestService } from \"../services/collaboration.service.js\";\r\nimport mentorRequset from \"../models/mentorRequset.js\";\r\n\r\nexport const TemporaryRequestController = async (req: Request, res: Response) => {\r\n    try {\r\n      const { mentorId, userId, selectedSlot, price } = req.body;\r\n  \r\n      if (!mentorId || !userId || !selectedSlot || !price) {\r\n        res.status(400).json({ message: \"All fields are required\" });\r\n        return ;\r\n      }\r\n  \r\n      const requestData = { \r\n        mentorId, \r\n        userId, \r\n        selectedSlot,\r\n        price \r\n    };\r\n      const newRequest = await TemporaryRequestService(requestData);\r\n\r\n      console.log(newRequest)\r\n  \r\n      res.status(201).json({\r\n        message: \"Request created successfully\",\r\n        request: newRequest,\r\n      });\r\n      return \r\n    } catch (error:any) {\r\n      res.status(500).json({ message: error.message });\r\n      return \r\n    }\r\n  };\r\n\r\n  // Get all mentor requests for the logged-in mentor\r\n  export const getMentorRequestsController = async (req: Request, res: Response) => {\r\n    const mentorId = req.query.mentorId as string;\r\n    if (!mentorId) {\r\n      res.status(400).json({ message: \"Mentor ID is required.\" });\r\n      return \r\n    }    \r\n    try {\r\n      const mentorRequests = await getMentorRequests(mentorId);\r\n      res.status(200).json({ requests: mentorRequests });\r\n    } catch (error: any) {\r\n      res.status(500).json({ message: error.message });\r\n    }\r\n  };\r\n  \r\n  // Accept a mentor request\r\n  export const acceptRequestController = async (req: Request, res: Response) => {\r\n    try {\r\n      const { id } = req.params;\r\n      const request = await acceptRequest(id);\r\n      res.status(200).json({ message: \"Request accepted\", request });\r\n    } catch (error: any) {\r\n      res.status(500).json({ message: error.message });\r\n    }\r\n  };\r\n  \r\n  // Reject a mentor request\r\n  export const rejectRequestController = async (req: Request, res: Response) => {\r\n    try {\r\n      const { id } = req.params;\r\n      const request = await rejectRequest(id);\r\n      res.status(200).json({ message: \"Request rejected\", request });\r\n    } catch (error: any) {\r\n      res.status(500).json({ message: error.message });\r\n    }\r\n  };\r\n\r\n    // Get requset for user\r\n    export const getRequsetForUserController = async (req: Request, res: Response) => {\r\n      try {\r\n        const { id } = req.params;\r\n        const userRequest = await getRequsetForUser(id);\r\n        res.status(200).json({ message: \"Request retrieved successfully\", requests: userRequest });\r\n      } catch (error: any) {\r\n        res.status(500).json({ message: error.message });\r\n      }\r\n    };\r\n\r\n    //Make payemnt requset\r\n    export const makeStripePaymentController = async(req: Request, res: Response) =>{\r\n      const { token, amount, requestId } = req.body;\r\n\r\n      try {\r\n        // Retrieve the mentor request document\r\n        const mentorRequestData = await mentorRequset.findById(requestId);\r\n\r\n        if (!mentorRequestData) {\r\n            res.status(404).json({ status: 'failure', message: 'Mentor request not found' });\r\n            return \r\n        }\r\n\r\n        // Process payment and handle collaboration creation\r\n        const paymentResult = await processPaymentService(token, amount, requestId, mentorRequestData);\r\n\r\n        res.status(200).json({ status: 'success', charge: paymentResult });\r\n        return \r\n    } catch (error: any) {\r\n        console.error('Payment error:', error.message);\r\n        res.status(500).json({ status: 'failure', error: error.message });\r\n        return \r\n    }\r\n    }\r\n\r\n    //get collab data for user\r\n    export const getCollabDataForUserController = async (req: Request, res: Response) => {\r\n      try {\r\n        const userId = req.params.id; \r\n        const collabData = await getCollabDataForUserService(userId); \r\n        res.status(200).json({ collabData });\r\n        return \r\n      } catch (error:any) {\r\n       res.status(500).json({ message: error.message });\r\n        return\r\n      }\r\n    };\r\n\r\n\r\n    //Get collab data for mentor\r\n    export const getCollabDataForMentorController = async (req: Request, res: Response) => {\r\n      try {\r\n        const mentorId = req.params.id; \r\n        const collabData = await getCollabDataForMentorService(mentorId); \r\n       res.status(200).json({ collabData }); \r\n       return \r\n      } catch (error:any) {\r\n        res.status(500).json({ message: error.message }); \r\n        return \r\n      }\r\n    };"]}