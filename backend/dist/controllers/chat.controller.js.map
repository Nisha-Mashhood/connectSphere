{"version":3,"file":"chat.controller.js","sourceRoot":"","sources":["../../src/controllers/chat.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from \"express\";\r\nimport { getChatMessagesService } from \"../services/chat.service.js\";\r\nimport { saveChatMessage } from \"../repositories/chat.repository.js\";\r\nimport { uploadMedia } from \"../utils/cloudinary.utils.js\";\r\n\r\nexport const getChatMessages = async (req: Request, res: Response) => {\r\n  try {\r\n    const { contactId, groupId, page = \"1\", limit = \"10\" } = req.query;\r\n    const messages = await getChatMessagesService(\r\n      contactId as string | undefined,\r\n      groupId as string | undefined,\r\n      parseInt(page as string),\r\n      parseInt(limit as string)\r\n    );\r\n    res.status(200).json({ status: \"success\", data: messages });\r\n  } catch (error: any) {\r\n    console.error(\"Error fetching chat messages:\", error.message);\r\n    res.status(500).json({ status: \"failure\", message: error.message });\r\n  }\r\n};\r\n\r\nexport const uploadAndSaveMessage = async (req: Request, res: Response) => {\r\n  try {\r\n    const { senderId, targetId, type, collaborationId, userConnectionId, groupId } = req.body;\r\n    if (!req.file || !senderId || !targetId || !type) {\r\n      res.status(400).json({ message: \"Missing required fields\" });\r\n      return;\r\n    }\r\n\r\n    const filePath = req.file.path;\r\n    const folder = type === \"group\" ? \"group_chat_media\" : \"chat_media\";\r\n    const contentType = req.file.mimetype.startsWith(\"image/\")\r\n      ? \"image\"\r\n      : req.file.mimetype.startsWith(\"video/\")\r\n      ? \"video\"\r\n      : \"file\"; \r\n      const { url, thumbnailUrl } = await uploadMedia(filePath, folder, req.file.size, contentType);\r\n\r\n    const message = await saveChatMessage({\r\n      senderId,\r\n      content: url,\r\n      thumbnailUrl,\r\n      contentType,\r\n      ...(type === \"user-mentor\" && { collaborationId }),\r\n      ...(type === \"user-user\" && { userConnectionId }),\r\n      ...(type === \"group\" && { groupId }),\r\n      fileMetadata: { \r\n        fileName: req.file.originalname,\r\n        fileSize: req.file.size,\r\n        mimeType: req.file.mimetype,\r\n      },\r\n      timestamp: new Date(),\r\n    });\r\n\r\n    res.status(200).json({ status: \"success\", data: { url, messageId: message._id } });\r\n  } catch (error: any) {\r\n    console.error(\"Error uploading file and saving message:\", error.message);\r\n    res.status(500).json({ status: \"failure\", message: error.message });\r\n  }\r\n};\r\n"]}