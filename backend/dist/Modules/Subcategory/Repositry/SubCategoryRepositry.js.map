{"version":3,"file":"SubCategoryRepositry.js","sourceRoot":"","sources":["../../../../src/Modules/Subcategory/Repositry/SubCategoryRepositry.ts"],"names":[],"mappings":"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","sourcesContent":["import { BaseRepository } from \"../../../core/Repositries/BaseRepositry.js\";\r\nimport { RepositoryError } from \"../../../core/Utils/ErrorHandler.js\";\r\nimport logger from \"../../../core/Utils/Logger.js\";\r\nimport { SubcategoryInterface as ISubcategory } from \"../../../Interfaces/models/SubcategoryInterface.js\";\r\nimport { Subcategory } from \"../../../models/subcategory.model.js\";\r\n\r\nexport class SubcategoryRepository extends BaseRepository<ISubcategory> {\r\n  constructor() {\r\n    super(Subcategory);\r\n  }\r\n\r\n  async createSubcategory(data: Partial<ISubcategory>): Promise<ISubcategory> {\r\n    try {\r\n      logger.debug(\r\n        `Creating subcategory: ${data.name} for category ${data.categoryId}`\r\n      );\r\n      const subcategory = await this.create(data);\r\n      logger.info(\r\n        `Subcategory created: ${subcategory._id} (${subcategory.name})`\r\n      );\r\n      return subcategory;\r\n    } catch (error) {\r\n      logger.error(`Error creating subcategory: ${error}`);\r\n      throw new RepositoryError(`Failed to create subcategory: ${error}`);\r\n    }\r\n  }\r\n\r\n  async getAllSubcategories(categoryId: string): Promise<ISubcategory[]> {\r\n    try {\r\n      logger.debug(`Fetching subcategories for category: ${categoryId}`);\r\n      const subcategories = await this.model\r\n        .find({ categoryId })\r\n        .populate(\"categoryId\")\r\n        .exec();\r\n      logger.info(\r\n        `Fetched ${subcategories.length} subcategories for category ${categoryId}`\r\n      );\r\n      return subcategories;\r\n    } catch (error) {\r\n      logger.error(\r\n        `Error fetching subcategories for category ${categoryId}: ${error}`\r\n      );\r\n      throw new RepositoryError(`Failed to fetch subcategories: ${error}`);\r\n    }\r\n  }\r\n\r\n  async getSubcategoryById(id: string): Promise<ISubcategory | null> {\r\n    try {\r\n      logger.debug(`Fetching subcategory by ID: ${id}`);\r\n      const subcategory = await this.model\r\n        .findById(id)\r\n        .populate(\"categoryId\")\r\n        .exec();\r\n      if (!subcategory) {\r\n        logger.warn(`Subcategory not found: ${id}`);\r\n      } else {\r\n        logger.info(`Subcategory fetched: ${id} (${subcategory.name})`);\r\n      }\r\n      return subcategory;\r\n    } catch (error) {\r\n      logger.error(`Error fetching subcategory by ID ${id}: ${error}`);\r\n      throw new RepositoryError(`Failed to fetch subcategory: ${error}`);\r\n    }\r\n  }\r\n\r\n  async updateSubcategory(\r\n    id: string,\r\n    data: Partial<ISubcategory>\r\n  ): Promise<ISubcategory | null> {\r\n    try {\r\n      logger.debug(`Updating subcategory: ${id}`);\r\n      const subcategory = await this.findByIdAndUpdate(id, data, { new: true });\r\n      if (!subcategory) {\r\n        logger.warn(`Subcategory not found for update: ${id}`);\r\n      } else {\r\n        logger.info(`Subcategory updated: ${id} (${subcategory.name})`);\r\n      }\r\n      return subcategory;\r\n    } catch (error) {\r\n      logger.error(`Error updating subcategory ${id}: ${error}`);\r\n      throw new RepositoryError(`Failed to update subcategory: ${error}`);\r\n    }\r\n  }\r\n\r\n  async deleteSubcategory(id: string): Promise<ISubcategory | null> {\r\n    try {\r\n      logger.debug(`Deleting subcategory: ${id}`);\r\n      const subcategory = await this.findByIdAndDelete(id);\r\n      if (!subcategory) {\r\n        logger.warn(`Subcategory not found for deletion: ${id}`);\r\n      } else {\r\n        logger.info(`Subcategory deleted: ${id} (${subcategory.name})`);\r\n      }\r\n      return subcategory;\r\n    } catch (error) {\r\n      logger.error(`Error deleting subcategory ${id}: ${error}`);\r\n      throw new RepositoryError(`Failed to delete subcategory: ${error}`);\r\n    }\r\n  }\r\n\r\n  async deleteManySubcategories(\r\n    categoryId: string\r\n  ): Promise<{ deletedCount: number }> {\r\n    try {\r\n      logger.debug(`Deleting subcategories for category: ${categoryId}`);\r\n      const result = await this.model.deleteMany({ categoryId }).exec();\r\n      logger.info(\r\n        `Deleted ${result.deletedCount} subcategories for category ${categoryId}`\r\n      );\r\n      return result;\r\n    } catch (error) {\r\n      logger.error(\r\n        `Error deleting subcategories for category ${categoryId}: ${error}`\r\n      );\r\n      throw new RepositoryError(`Failed to delete subcategories: ${error}`);\r\n    }\r\n  }\r\n}\r\n"]}