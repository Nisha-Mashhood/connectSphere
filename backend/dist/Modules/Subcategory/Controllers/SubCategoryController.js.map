{"version":3,"file":"SubCategoryController.js","sourceRoot":"","sources":["../../../../src/Modules/Subcategory/Controllers/SubCategoryController.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from 'express';\r\nimport { SubcategoryService } from '../Service/SubCategoryService.js';\r\nimport { SubcategoryRepository } from \"../Repositry/SubCategoryRepositry.js\";\r\nimport { SubcategoryInterface as ISubcategory } from \"../../../Interfaces/models/SubcategoryInterface.js\";\r\nimport { BaseController } from '../../../core/Controller/BaseController.js';\r\nimport logger from \"../../../core/Utils/Logger.js\";\r\n\r\n\r\ninterface SubcategoryRequest extends Request {\r\n  body: Partial<ISubcategory>;\r\n  params: { id?: string; categoryId?: string };\r\n}\r\n\r\nexport class SubcategoryController extends BaseController {\r\n  private subcategoryService: SubcategoryService;\r\n  private subcategoryRepo: SubcategoryRepository;\r\n\r\n  constructor() {\r\n    super();\r\n    this.subcategoryService = new SubcategoryService();\r\n    this.subcategoryRepo = new SubcategoryRepository();\r\n  }\r\n\r\n   createSubcategory  = async(req: SubcategoryRequest, res: Response): Promise<void> => {\r\n    try {\r\n      logger.debug(`Creating subcategory: ${req.body.name}`);\r\n      const isDuplicate = await this.subcategoryRepo.findOne({ name: req.body.name, categoryId: req.body.categoryId });\r\n      if (isDuplicate) {\r\n        this.throwError(400, 'Subcategory name already exists in this category');\r\n      }\r\n      const imagePath = req.file?.path;\r\n      const fileSize = req.file?.size;\r\n      const subcategory = await this.subcategoryService.createSubcategory(req.body, imagePath, fileSize);\r\n      this.sendCreated(res, subcategory, 'Subcategory created successfully');\r\n    } catch (error) {\r\n      this.handleError(error, res);\r\n    }\r\n  }\r\n\r\n   getAllSubcategories  = async(req: SubcategoryRequest, res: Response): Promise<void> => {\r\n    try {\r\n      logger.debug(`Fetching subcategories for category: ${req.params.categoryId}`);\r\n      const subcategories = await this.subcategoryService.getAllSubcategories(req.params.categoryId!);\r\n      this.sendSuccess(res, subcategories, 'Subcategories fetched successfully');\r\n    } catch (error) {\r\n      this.handleError(error, res);\r\n    }\r\n  }\r\n\r\n   getSubcategoryById  = async(req: SubcategoryRequest, res: Response): Promise<void> => {\r\n    try {\r\n      logger.debug(`Fetching subcategory: ${req.params.id}`);\r\n      const subcategory = await this.subcategoryService.getSubcategoryById(req.params.id!);\r\n      if (!subcategory) {\r\n        this.throwError(404, 'Subcategory not found');\r\n      }\r\n      this.sendSuccess(res, subcategory, 'Subcategory fetched successfully');\r\n    } catch (error) {\r\n      this.handleError(error, res);\r\n    }\r\n  }\r\n\r\n   updateSubcategory  = async(req: SubcategoryRequest, res: Response): Promise<void> => {\r\n    try {\r\n      logger.debug(`Updating subcategory: ${req.params.id}`);\r\n      const isDuplicate = await this.subcategoryRepo.findOne({\r\n        name: req.body.name,\r\n        categoryId: req.body.categoryId || (await this.subcategoryRepo.getSubcategoryById(req.params.id!))?.categoryId,\r\n        _id: { $ne: req.params.id },\r\n      });\r\n      if (isDuplicate) {\r\n        this.throwError(400, 'Subcategory name already exists in this category');\r\n      }\r\n      const imagePath = req.file?.path;\r\n      const fileSize = req.file?.size;\r\n      const updatedSubcategory = await this.subcategoryService.updateSubcategory(req.params.id!, req.body, imagePath, fileSize);\r\n      if (!updatedSubcategory) {\r\n        this.throwError(404, 'Subcategory not found');\r\n      }\r\n      this.sendSuccess(res, updatedSubcategory, 'Subcategory updated successfully');\r\n    } catch (error) {\r\n      this.handleError(error, res);\r\n    }\r\n  }\r\n\r\n   deleteSubcategory  = async(req: SubcategoryRequest, res: Response): Promise<void> =>{\r\n    try {\r\n      logger.debug(`Deleting subcategory: ${req.params.id}`);\r\n      const deletedSubcategory = await this.subcategoryService.deleteSubcategory(req.params.id!);\r\n      if (!deletedSubcategory) {\r\n        this.throwError(404, 'Subcategory not found');\r\n      }\r\n      this.sendNoContent(res, 'Subcategory deleted successfully');\r\n    } catch (error) {\r\n      this.handleError(error, res);\r\n    }\r\n  }\r\n}"]}