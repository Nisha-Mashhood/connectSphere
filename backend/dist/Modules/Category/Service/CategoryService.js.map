{"version":3,"file":"CategoryService.js","sourceRoot":"","sources":["../../../../src/Modules/Category/Service/CategoryService.ts"],"names":[],"mappings":"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","sourcesContent":["import { CategoryRepository } from '../Repositry/CategoryRepositry.js';\r\nimport { BaseService } from \"../../../core/Services/BaseService.js\";\r\nimport { SkillsRepository } from \"../../Skills/Repositry/SkillsRepositry.js\";\r\nimport { SubcategoryRepository } from \"../../Subcategory/Repositry/SubCategoryRepositry.js\";\r\nimport { CategoryInterface as ICategory } from \"../../../Interfaces/models/CategoryInterface.js\";\r\nimport logger from \"../../../core/Utils/Logger.js\";\r\nimport { uploadMedia } from \"../../../core/Utils/Cloudinary.js\";\r\nimport { ServiceError } from \"../../../core/Utils/ErrorHandler.js\";\r\n\r\nexport class CategoryService extends BaseService {\r\n  private categoryRepo: CategoryRepository;\r\n  private subcategoryRepo: SubcategoryRepository;\r\n  private skillsRepo: SkillsRepository;\r\n\r\n  constructor() {\r\n    super();\r\n    this.categoryRepo = new CategoryRepository();\r\n    this.subcategoryRepo = new SubcategoryRepository();\r\n    this.skillsRepo = new SkillsRepository();\r\n  }\r\n\r\n   isDuplicateCategoryName = async(name?: string, excludeId?: string): Promise<boolean> => {\r\n    try {\r\n      logger.debug(`Checking duplicate category name: ${name}`);\r\n      return await this.categoryRepo.isDuplicateCategoryName(name, excludeId);\r\n    } catch (error) {\r\n      logger.error(`Error checking duplicate category name ${name}: ${error}`);\r\n      throw new ServiceError(`Failed to check duplicate category name: ${error}`);\r\n    }\r\n  }\r\n\r\n   createCategory = async(data: Partial<ICategory>, imagePath?: string, fileSize?: number): Promise<ICategory> => {\r\n    try {\r\n      this.checkData(data);\r\n      logger.debug(`Creating category with name: ${data.name}`);\r\n      let imageUrl: string | null = null;\r\n      if (imagePath) {\r\n        const folder = 'categories';\r\n        const { url } = await uploadMedia(imagePath, folder, fileSize);\r\n        imageUrl = url;\r\n        logger.info(`Uploaded image for category: ${imageUrl}`);\r\n      }\r\n      const category = await this.categoryRepo.createCategory({ ...data, imageUrl });\r\n      logger.info(`Category created: ${category._id} (${category.name})`);\r\n      return category;\r\n    } catch (error) {\r\n      logger.error(`Error creating category: ${error}`);\r\n      throw new ServiceError(`Failed to create category: ${error}`);\r\n    }\r\n  }\r\n\r\n   getAllCategories = async(): Promise<ICategory[]> =>{\r\n    try {\r\n      logger.debug('Fetching all categories');\r\n      const categories = await this.categoryRepo.getAllCategories();\r\n      logger.info(`Fetched ${categories.length} categories`);\r\n      return categories;\r\n    } catch (error) {\r\n      logger.error(`Error fetching categories: ${error}`);\r\n      throw new ServiceError(`Failed to fetch categories: ${error}`);\r\n    }\r\n  }\r\n\r\n   getCategoryById = async(id: string): Promise<ICategory | null> => {\r\n    try {\r\n      logger.debug(`Fetching category: ${id}`);\r\n      const category = await this.categoryRepo.getCategoryById(id);\r\n      if (!category) {\r\n        logger.warn(`Category not found: ${id}`);\r\n      } else {\r\n        logger.info(`Category fetched: ${id} (${category.name})`);\r\n      }\r\n      return category;\r\n    } catch (error) {\r\n      logger.error(`Error fetching category ${id}: ${error}`);\r\n      throw new ServiceError(`Failed to fetch category: ${error}`);\r\n    }\r\n  }\r\n\r\n   updateCategory = async(id: string, data: Partial<ICategory>, imagePath?: string, fileSize?: number): Promise<ICategory | null> => {\r\n    try {\r\n      this.checkData(data);\r\n      logger.debug(`Updating category: ${id}`);\r\n      let imageUrl: string | null = null;\r\n      if (imagePath) {\r\n        const folder = 'categories';\r\n        const { url } = await uploadMedia(imagePath, folder, fileSize);\r\n        imageUrl = url;\r\n        logger.info(`Uploaded image for category: ${imageUrl}`);\r\n      }\r\n      const category = await this.categoryRepo.updateCategory(id, { ...data, ...(imageUrl && { imageUrl }) });\r\n      if (!category) {\r\n        logger.warn(`Category not found for update: ${id}`);\r\n        this.throwError(`Category not found: ${id}`);\r\n      }\r\n      logger.info(`Category updated: ${id} (${category?.name})`);\r\n      return category;\r\n    } catch (error) {\r\n      logger.error(`Error updating category ${id}: ${error}`);\r\n      throw new ServiceError(`Failed to update category: ${error}`);\r\n    }\r\n  }\r\n\r\n   deleteCategory = async(id: string): Promise<ICategory | null> => {\r\n    try {\r\n      logger.debug(`Deleting category: ${id}`);\r\n      await this.subcategoryRepo.deleteManySubcategories(id);\r\n      logger.info(`Deleted subcategories for category: ${id}`);\r\n      await this.skillsRepo.deleteManySkills(id);\r\n      logger.info(`Deleted skills for category: ${id}`);\r\n      const category = await this.categoryRepo.deleteCategory(id);\r\n      if (!category) {\r\n        logger.warn(`Category not found for deletion: ${id}`);\r\n        this.throwError(`Category not found: ${id}`);\r\n      }\r\n      logger.info(`Category deleted: ${id} (${category?.name})`);\r\n      return category;\r\n    } catch (error) {\r\n      logger.error(`Error deleting category ${id}: ${error}`);\r\n      throw new ServiceError(`Failed to delete category and related data: ${error}`);\r\n    }\r\n  }\r\n}"]}