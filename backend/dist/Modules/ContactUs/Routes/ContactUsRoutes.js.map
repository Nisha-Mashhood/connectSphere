{"version":3,"file":"ContactUsRoutes.js","sourceRoot":"","sources":["../../../../src/Modules/ContactUs/Routes/ContactUsRoutes.ts"],"names":[],"mappings":"AAAA,OAAO,OAAO,MAAM,SAAS,CAAC;AAC9B,OAAO,EAAE,wBAAwB,EAAE,MAAM,uCAAuC,CAAC;AACjF,OAAO,EAAE,UAAU,EAAE,MAAM,8CAA8C,CAAC;AAC1E,OAAO,EAAE,cAAc,EAAE,MAAM,yCAAyC,CAAC;AACzE,OAAO,EAAE,cAAc,EAAE,MAAM,iCAAiC,CAAC;AAEjE,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;AAChC,MAAM,wBAAwB,GAAG,IAAI,wBAAwB,EAAE,CAAC;AAChE,MAAM,cAAc,GAAG,IAAI,cAAc,EAAE,CAAC;AAE5C,MAAM,CAAC,IAAI,CACT,cAAc,CAAC,oBAAoB,EACnC,CAAC,UAAU,EAAE,cAAc,CAAC,WAAW,EAAE,cAAc,CAAC,kBAAkB,CAAC,EAC3E,wBAAwB,CAAC,oBAAoB,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAC7E,CAAC;AAEF,MAAM,CAAC,GAAG,CACR,cAAc,CAAC,qBAAqB,EACpC,CAAC,UAAU,EAAE,cAAc,CAAC,WAAW,EAAE,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,EAC3E,wBAAwB,CAAC,qBAAqB,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAC9E,CAAC;AAEF,MAAM,CAAC,IAAI,CACT,cAAc,CAAC,SAAS,EACxB,CAAC,UAAU,EAAE,cAAc,CAAC,WAAW,EAAE,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,EAC3E,wBAAwB,CAAC,SAAS,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAClE,CAAC;AAEF,eAAe,MAAM,CAAC","sourcesContent":["import express from 'express';\r\nimport { ContactMessageController } from '../Controllers/ContactUsController.js';\r\nimport { apiLimiter } from '../../../middlewares/ratelimit.middleware.js';\r\nimport { AuthMiddleware } from '../../../middlewares/auth.middleware.js';\r\nimport { CONTACT_ROUTES } from '../Constant/ContactUs.routes.js';\r\n\r\nconst router = express.Router();\r\nconst contactMessageController = new ContactMessageController();\r\nconst authMiddleware = new AuthMiddleware();\r\n\r\nrouter.post(\r\n  CONTACT_ROUTES.CreateContactMessage,\r\n  [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus],\r\n  contactMessageController.createContactMessage.bind(contactMessageController)\r\n);\r\n\r\nrouter.get(\r\n  CONTACT_ROUTES.GetAllContactMessages,\r\n  [apiLimiter, authMiddleware.verifyToken, authMiddleware.authorize('admin')],\r\n  contactMessageController.getAllContactMessages.bind(contactMessageController)\r\n);\r\n\r\nrouter.post(\r\n  CONTACT_ROUTES.SendReply,\r\n  [apiLimiter, authMiddleware.verifyToken, authMiddleware.authorize('admin')],\r\n  contactMessageController.sendReply.bind(contactMessageController)\r\n);\r\n\r\nexport default router;"]}