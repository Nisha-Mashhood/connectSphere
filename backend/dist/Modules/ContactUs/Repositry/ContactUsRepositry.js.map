{"version":3,"file":"ContactUsRepositry.js","sourceRoot":"","sources":["../../../../src/Modules/ContactUs/Repositry/ContactUsRepositry.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,cAAc,EAAE,MAAM,4CAA4C,CAAC;AAC5E,OAAO,EAAE,eAAe,EAAE,MAAM,qCAAqC,CAAC;AACtE,OAAO,MAAM,MAAM,+BAA+B,CAAC;AACnD,OAAO,cAAc,MAAM,yCAAyC,CAAC;AAGrE,MAAM,OAAO,wBAAyB,SAAQ,cAA+B;IAC3E;QACE,KAAK,CAAC,cAAwC,CAAC,CAAC;IAClD,CAAC;IAED,KAAK,CAAC,oBAAoB,CAAC,IAAsD;QAC/E,IAAI,CAAC;YACH,MAAM,CAAC,KAAK,CAAC,kCAAkC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;YAC7D,OAAO,MAAM,IAAI,CAAC,MAAM,CAAC;gBACvB,GAAG,IAAI;gBACP,UAAU,EAAE,KAAK;gBACjB,SAAS,EAAE,IAAI,IAAI,EAAE;aACtB,CAAC,CAAC;QACL,CAAC;QAAC,OAAO,KAAU,EAAE,CAAC;YACpB,MAAM,CAAC,KAAK,CAAC,mCAAmC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;YACjE,MAAM,IAAI,eAAe,CAAC,mCAAmC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;QAChF,CAAC;IACH,CAAC;IAED,KAAK,CAAC,qBAAqB;QACzB,IAAI,CAAC;YACH,MAAM,CAAC,KAAK,CAAC,+BAA+B,CAAC,CAAC;YAC9C,OAAO,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;QAChE,CAAC;QAAC,OAAO,KAAU,EAAE,CAAC;YACpB,MAAM,CAAC,KAAK,CAAC,oCAAoC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;YAClE,MAAM,IAAI,eAAe,CAAC,qCAAqC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;QAClF,CAAC;IACH,CAAC;IAED,KAAK,CAAC,iBAAiB,CAAC,gBAAwB;QAC9C,IAAI,CAAC;YACH,MAAM,CAAC,KAAK,CAAC,8CAA8C,gBAAgB,EAAE,CAAC,CAAC;YAC/E,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,KAAK;iBAC7B,gBAAgB,CACf,EAAE,gBAAgB,EAAE,EACpB,EAAE,UAAU,EAAE,IAAI,EAAE,EACpB,EAAE,GAAG,EAAE,IAAI,EAAE,CACd;iBACA,IAAI,EAAE,CAAC;YACV,IAAI,CAAC,OAAO,EAAE,CAAC;gBACb,MAAM,CAAC,KAAK,CAAC,8BAA8B,gBAAgB,EAAE,CAAC,CAAC;gBAC/D,MAAM,IAAI,eAAe,CAAC,2BAA2B,CAAC,CAAC;YACzD,CAAC;YACD,OAAO,OAAO,CAAC;QACjB,CAAC;QAAC,OAAO,KAAU,EAAE,CAAC;YACpB,MAAM,CAAC,KAAK,CAAC,gCAAgC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;YAC9D,MAAM,IAAI,eAAe,CAAC,kCAAkC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;QAC/E,CAAC;IACH,CAAC;CACF","sourcesContent":["import { Model } from 'mongoose';\r\nimport { BaseRepository } from '../../../core/Repositries/BaseRepositry.js';\r\nimport { RepositoryError } from '../../../core/Utils/ErrorHandler.js';\r\nimport logger from '../../../core/Utils/Logger.js';\r\nimport ContactMessage from '../../../models/ContactMessage.modal.js';\r\nimport { IContactMessage } from '../../../Interfaces/models/IContactMessage.js';\r\n\r\nexport class ContactMessageRepository extends BaseRepository<IContactMessage> {\r\n  constructor() {\r\n    super(ContactMessage as Model<IContactMessage>);\r\n  }\r\n\r\n  async createContactMessage(data: { name: string; email: string; message: string }): Promise<IContactMessage> {\r\n    try {\r\n      logger.debug(`Creating contact message from: ${data.email}`);\r\n      return await this.create({\r\n        ...data,\r\n        givenReply: false,\r\n        createdAt: new Date(),\r\n      });\r\n    } catch (error: any) {\r\n      logger.error(`Error creating contact message: ${error.message}`);\r\n      throw new RepositoryError(`Failed to save contact message: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async getAllContactMessages(): Promise<IContactMessage[]> {\r\n    try {\r\n      logger.debug('Fetching all contact messages');\r\n      return await this.model.find().sort({ createdAt: -1 }).exec();\r\n    } catch (error: any) {\r\n      logger.error(`Error fetching contact messages: ${error.message}`);\r\n      throw new RepositoryError(`Failed to fetch contact messages: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async updateReplyStatus(contactMessageId: string): Promise<IContactMessage> {\r\n    try {\r\n      logger.debug(`Updating reply status for contact message: ${contactMessageId}`);\r\n      const message = await this.model\r\n        .findOneAndUpdate(\r\n          { contactMessageId },\r\n          { givenReply: true },\r\n          { new: true }\r\n        )\r\n        .exec();\r\n      if (!message) {\r\n        logger.error(`Contact message not found: ${contactMessageId}`);\r\n        throw new RepositoryError('Contact message not found');\r\n      }\r\n      return message;\r\n    } catch (error: any) {\r\n      logger.error(`Error updating reply status: ${error.message}`);\r\n      throw new RepositoryError(`Failed to update reply status: ${error.message}`);\r\n    }\r\n  }\r\n}"]}