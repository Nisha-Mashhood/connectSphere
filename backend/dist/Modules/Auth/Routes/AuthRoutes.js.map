{"version":3,"file":"AuthRoutes.js","sourceRoot":"","sources":["../../../../src/Modules/Auth/Routes/AuthRoutes.ts"],"names":[],"mappings":"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","sourcesContent":["import express from 'express';\r\nimport { AuthController } from '../Controllers/AuthController.js';\r\nimport { AuthMiddleware } from '../../../middlewares/auth.middleware.js';\r\nimport { apiLimiter, authLimiter } from '../../../middlewares/ratelimit.middleware.js';\r\nimport { upload } from '../../../core/Utils/Multer.js';\r\n\r\nconst router = express.Router();\r\nconst authController = new AuthController();\r\nconst authMiddleware = new AuthMiddleware();\r\n\r\n// Public routes\r\nrouter.post('/register/signup', authLimiter, authController.signup.bind(authController));\r\nrouter.post('/login', authLimiter, authController.login.bind(authController));\r\nrouter.post('/register/forgot-password', authLimiter, authController.handleForgotPassword.bind(authController));\r\nrouter.post('/register/verify-otp', authLimiter, authController.handleVerifyOTP.bind(authController));\r\nrouter.post('/register/reset-password', authLimiter, authController.handleResetPassword.bind(authController));\r\nrouter.post('/google-signup', authLimiter, authController.googleSignup.bind(authController));\r\nrouter.post('/google-login', authLimiter, authController.googleLogin.bind(authController));\r\nrouter.post('/github-signup', authLimiter, authController.githubSignup.bind(authController));\r\nrouter.post('/github-login', authLimiter, authController.githubLogin.bind(authController));\r\n\r\n// Protected routes\r\nrouter.post('/verify-admin-passkey', [authLimiter, authMiddleware.verifyToken, authMiddleware.authorize('admin')], authController.verifyPasskey.bind(authController));\r\nrouter.post('/refresh-token', [apiLimiter, authMiddleware.verifyRefreshToken], authController.refreshToken.bind(authController));\r\nrouter.post('/logout', [apiLimiter, authMiddleware.verifyToken], authController.logout.bind(authController));\r\n\r\n// Protected user routes\r\nrouter.get('/check-profile/:id', [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus], authController.checkProfile.bind(authController));\r\nrouter.get('/profiledetails/:id', [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus], authController.getProfileDetails.bind(authController));\r\nrouter.put(\r\n  '/updateUserDetails/:id',\r\n  [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus, upload.fields([{ name: 'profilePic', maxCount: 1 }, { name: 'coverPic', maxCount: 1 }])],\r\n  authController.updateUserDetails.bind(authController)\r\n);\r\nrouter.get('/users', [apiLimiter, authMiddleware.verifyToken], authController.getAllUsers.bind(authController));\r\nrouter.get('/users/:id', [apiLimiter, authMiddleware.verifyToken], authController.getUserById.bind(authController));\r\nrouter.put(\r\n  '/users/:id',\r\n  [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus, upload.fields([{ name: 'profilePhoto', maxCount: 1 }, { name: 'coverPhoto', maxCount: 1 }])],\r\n  authController.updateUserDetails.bind(authController)\r\n);\r\nrouter.put('/users/block/:id', [apiLimiter, authMiddleware.verifyToken, authMiddleware.authorize('admin')], authController.blockUser.bind(authController));\r\nrouter.put('/users/unblock/:id', [apiLimiter, authMiddleware.verifyToken, authMiddleware.authorize('admin')], authController.unblockUser.bind(authController));\r\nrouter.put('/users/role/:id', [apiLimiter, authMiddleware.verifyToken, authMiddleware.authorize('admin')], authController.changeRole.bind(authController));\r\n\r\nexport default router;"]}