{"version":3,"file":"AuthRoutes.js","sourceRoot":"","sources":["../../../../src/Modules/Auth/Routes/AuthRoutes.ts"],"names":[],"mappings":"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","sourcesContent":["import express from 'express';\r\nimport { AuthController } from '../Controllers/AuthController.js';\r\nimport { AuthMiddleware } from '../../../middlewares/auth.middleware.js';\r\nimport { apiLimiter, authLimiter } from '../../../middlewares/ratelimit.middleware.js';\r\nimport { upload } from '../../../core/Utils/Multer.js';\r\nimport { AUTH_ROUTES } from '../Constant/auth.routes.js';\r\n\r\nconst router = express.Router();\r\nconst authController = new AuthController();\r\nconst authMiddleware = new AuthMiddleware();\r\n\r\n// Public routes\r\nrouter.post(AUTH_ROUTES.Register, authLimiter, authController.signup.bind(authController));\r\nrouter.post(AUTH_ROUTES.Login, authLimiter, authController.login.bind(authController));\r\nrouter.post(AUTH_ROUTES.ForgotPassword, authLimiter, authController.handleForgotPassword.bind(authController));\r\nrouter.post(AUTH_ROUTES.VerifyOTP, authLimiter, authController.handleVerifyOTP.bind(authController));\r\nrouter.post(AUTH_ROUTES.ResetPassword, authLimiter, authController.handleResetPassword.bind(authController));\r\nrouter.post(AUTH_ROUTES.GoogleSignup, authLimiter, authController.googleSignup.bind(authController));\r\nrouter.post(AUTH_ROUTES.GoogleLogin, authLimiter, authController.googleLogin.bind(authController));\r\nrouter.post(AUTH_ROUTES.GithubSignup, authLimiter, authController.githubSignup.bind(authController));\r\nrouter.post(AUTH_ROUTES.GithubLogin, authLimiter, authController.githubLogin.bind(authController));\r\n\r\n// Protected routes\r\nrouter.post(AUTH_ROUTES.VerifyAdminPasskey, [authLimiter, authMiddleware.verifyToken, authMiddleware.authorize('admin')], authController.verifyPasskey.bind(authController));\r\nrouter.post(AUTH_ROUTES.RefreshToken, [apiLimiter, authMiddleware.verifyRefreshToken], authController.refreshToken.bind(authController));\r\nrouter.post(AUTH_ROUTES.Logout, [apiLimiter], authController.logout.bind(authController));\r\n\r\n// Protected user routes\r\nrouter.get(AUTH_ROUTES.CheckProfile, [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus], authController.checkProfile.bind(authController));\r\nrouter.get(AUTH_ROUTES.ProfileDetails, [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus], authController.getProfileDetails.bind(authController));\r\nrouter.put(\r\n  AUTH_ROUTES.UpdateUserDetails,\r\n  [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus, upload.fields([{ name: 'profilePic', maxCount: 1 }, { name: 'coverPic', maxCount: 1 }])],\r\n  authController.updateUserDetails.bind(authController)\r\n);\r\nrouter.get(AUTH_ROUTES.GetAllUsers, [apiLimiter, authMiddleware.verifyToken], authController.getAllUsers.bind(authController));\r\nrouter.get(AUTH_ROUTES.GetUser, [apiLimiter, authMiddleware.verifyToken], authController.getUserById.bind(authController));\r\nrouter.put(\r\n  AUTH_ROUTES.UpdateUser,\r\n  [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus, upload.fields([{ name: 'profilePhoto', maxCount: 1 }, { name: 'coverPhoto', maxCount: 1 }])],\r\n  authController.updateUserDetails.bind(authController)\r\n);\r\nrouter.put(AUTH_ROUTES.BlockUser, [apiLimiter, authMiddleware.verifyToken, authMiddleware.authorize('admin')], authController.blockUser.bind(authController));\r\nrouter.put(AUTH_ROUTES.UnblockUser, [apiLimiter, authMiddleware.verifyToken, authMiddleware.authorize('admin')], authController.unblockUser.bind(authController));\r\nrouter.put(AUTH_ROUTES.ChangeRole, [apiLimiter, authMiddleware.verifyToken, authMiddleware.authorize('admin')], authController.changeRole.bind(authController));\r\n\r\nexport default router;"]}