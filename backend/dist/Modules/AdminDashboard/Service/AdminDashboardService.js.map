{"version":3,"file":"AdminDashboardService.js","sourceRoot":"","sources":["../../../../src/Modules/AdminDashboard/Service/AdminDashboardService.ts"],"names":[],"mappings":"AAAA,OAAO,eAAe,MAAM,yCAAyC,CAAC;AAEtE,MAAM,YAAY;IACf,kBAAkB,GAAG,KAAK,IAAG,EAAE;QAC9B,OAAO,MAAM,eAAe,CAAC,kBAAkB,EAAE,CAAC;IACpD,CAAC,CAAA;IAEA,oBAAoB,GAAG,KAAK,IAAG,EAAE;QAChC,OAAO,MAAM,eAAe,CAAC,oBAAoB,EAAE,CAAC;IACtD,CAAC,CAAA;IAEA,eAAe,GAAG,KAAK,IAAG,EAAE;QAC3B,OAAO,MAAM,eAAe,CAAC,eAAe,EAAE,CAAC;IACjD,CAAC,CAAA;IAEA,6BAA6B,GAAG,KAAK,IAAG,EAAE;QACzC,OAAO,MAAM,eAAe,CAAC,6BAA6B,EAAE,CAAC;IAC/D,CAAC,CAAA;IAEA,4BAA4B,GAAG,KAAK,IAAG,EAAE;QACxC,OAAO,MAAM,eAAe,CAAC,4BAA4B,EAAE,CAAC;IAC9D,CAAC,CAAA;IAEA,gBAAgB,GAAG,KAAK,EAAC,UAAkB,EAAE,IAAY,EAAE,EAAE;QAC5D,OAAO,MAAM,eAAe,CAAC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;IAClE,CAAC,CAAA;IAEA,aAAa,GAAG,KAAK,EAAC,UAAkB,EAAE,IAAY,EAAE,EAAE;QACzD,OAAO,MAAM,eAAe,CAAC,aAAa,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;IAC/D,CAAC,CAAA;IAEA,wBAAwB,GAAG,KAAK,EAAC,KAAc,EAAE,EAAE;QAClD,OAAO,MAAM,eAAe,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;IAC/D,CAAC,CAAA;IAEA,aAAa,GAAG,KAAK,EAAC,KAAa,EAAE,EAAE;QACtC,OAAO,MAAM,eAAe,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IACpD,CAAC,CAAA;IAEA,uBAAuB,GAAG,KAAK,EAAC,KAAa,EAAE,EAAE;QAChD,OAAO,MAAM,eAAe,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;IAC9D,CAAC,CAAA;CACF;AAED,eAAe,IAAI,YAAY,EAAE,CAAC","sourcesContent":["import AdminRepository from \"../Repositry/AdminDashboardRepositry.js\";\r\n\r\nclass AdminService {\r\n   getTotalUsersCount = async() => {\r\n    return await AdminRepository.getTotalUsersCount();\r\n  }\r\n\r\n   getTotalMentorsCount = async() => {\r\n    return await AdminRepository.getTotalMentorsCount();\r\n  }\r\n\r\n   getTotalRevenue = async() => {\r\n    return await AdminRepository.getTotalRevenue();\r\n  }\r\n\r\n   getPendingMentorRequestsCount = async() => {\r\n    return await AdminRepository.getPendingMentorRequestsCount();\r\n  }\r\n\r\n   getActiveCollaborationsCount = async() => {\r\n    return await AdminRepository.getActiveCollaborationsCount();\r\n  }\r\n\r\n   getRevenueTrends = async(timeFormat: string, days: number) => {\r\n    return await AdminRepository.getRevenueTrends(timeFormat, days);\r\n  }\r\n\r\n   getUserGrowth = async(timeFormat: string, days: number) => {\r\n    return await AdminRepository.getUserGrowth(timeFormat, days);\r\n  }\r\n\r\n   getPendingMentorRequests = async(limit?: number) => {\r\n    return await AdminRepository.getPendingMentorRequests(limit);\r\n  }\r\n\r\n   getTopMentors = async(limit: number) =>{\r\n    return await AdminRepository.getTopMentors(limit);\r\n  }\r\n\r\n   getRecentCollaborations = async(limit: number) =>{\r\n    return await AdminRepository.getRecentCollaborations(limit);\r\n  }\r\n}\r\n\r\nexport default new AdminService();"]}