{"version":3,"file":"AdminDashboardController.js","sourceRoot":"","sources":["../../../../src/Modules/AdminDashboard/Controllers/AdminDashboardController.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from \"express\";\r\nimport AdminService from \"../Service/AdminDashboardService.js\";\r\n\r\nclass AdminController {\r\n   getTotalUsersCount = async(_req: Request, res: Response) => {\r\n    try {\r\n      const count = await AdminService.getTotalUsersCount();\r\n      res.json({ totalUsers: count });\r\n    } catch (error) {\r\n      res.status(500).json({ error: \"Internal Server Error\" });\r\n    }\r\n  }\r\n\r\n   getTotalMentorsCount = async(_req: Request, res: Response) => {\r\n    try {\r\n      const count = await AdminService.getTotalMentorsCount();\r\n      res.json({ totalMentors: count });\r\n    } catch (error) {\r\n      res.status(500).json({ error: \"Internal Server Error\" });\r\n    }\r\n  }\r\n\r\n   getTotalRevenue = async(_req: Request, res: Response) => {\r\n    try {\r\n      const revenue = await AdminService.getTotalRevenue();\r\n      res.json(revenue);\r\n    } catch (error) {\r\n      res.status(500).json({ error: \"Internal Server Error\" });\r\n    }\r\n  }\r\n\r\n   getPendingMentorRequestsCount = async(_req: Request, res: Response) => {\r\n    try {\r\n      const count = await AdminService.getPendingMentorRequestsCount();\r\n      res.json({ pendingMentorRequests: count });\r\n    } catch (error) {\r\n      res.status(500).json({ error: \"Internal Server Error\" });\r\n    }\r\n  }\r\n\r\n   getActiveCollaborationsCount = async(_req: Request, res: Response) => {\r\n    try {\r\n      const count = await AdminService.getActiveCollaborationsCount();\r\n      res.json({ activeCollaborations: count });\r\n    } catch (error) {\r\n      res.status(500).json({ error: \"Internal Server Error\" });\r\n    }\r\n  }\r\n\r\n   getRevenueTrends = async(req: Request, res: Response) => {\r\n    try {\r\n      const { timeFormat, days } = req.query;\r\n      const trends = await AdminService.getRevenueTrends(timeFormat as string, Number(days));\r\n      res.json(trends);\r\n    } catch (error) {\r\n      res.status(500).json({ error: \"Internal Server Error\" });\r\n    }\r\n  }\r\n\r\n   getUserGrowth = async(req: Request, res: Response) => {\r\n    try {\r\n      const { timeFormat, days } = req.query;\r\n      const growth = await AdminService.getUserGrowth(timeFormat as string, Number(days));\r\n      res.json(growth);\r\n    } catch (error) {\r\n      res.status(500).json({ error: \"Internal Server Error\" });\r\n    }\r\n  }\r\n\r\n   getPendingMentorRequests = async(req: Request, res: Response) => {\r\n    try {\r\n      const { limit } = req.query;\r\n      const requests = await AdminService.getPendingMentorRequests(Number(limit));\r\n      res.json(requests);\r\n    } catch (error) {\r\n      res.status(500).json({ error: \"Internal Server Error\" });\r\n    }\r\n  }\r\n\r\n   getTopMentors = async(req: Request, res: Response) => {\r\n    try {\r\n      const { limit } = req.query;\r\n      const mentors = await AdminService.getTopMentors(Number(limit));\r\n      res.json(mentors);\r\n    } catch (error) {\r\n      res.status(500).json({ error: \"Internal Server Error\" });\r\n    }\r\n  }\r\n\r\n   getRecentCollaborations = async(req: Request, res: Response) => {\r\n    try {\r\n      const { limit } = req.query;\r\n      const collaborations = await AdminService.getRecentCollaborations(Number(limit));\r\n      res.json(collaborations);\r\n    } catch (error) {\r\n      res.status(500).json({ error: \"Internal Server Error\" });\r\n    }\r\n  }\r\n}\r\n\r\nexport default new AdminController();\r\n"]}