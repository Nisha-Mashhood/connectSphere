{"version":3,"file":"TaskRoutes.js","sourceRoot":"","sources":["../../../../src/Modules/Task/Routes/TaskRoutes.ts"],"names":[],"mappings":"AAAA,OAAO,OAAO,MAAM,SAAS,CAAC;AAC9B,OAAO,EAAE,cAAc,EAAE,MAAM,kCAAkC,CAAC;AAClE,OAAO,EAAE,UAAU,EAAE,MAAM,8CAA8C,CAAC;AAC1E,OAAO,EAAE,cAAc,EAAE,MAAM,yCAAyC,CAAC;AACzE,OAAO,EAAE,MAAM,EAAE,MAAM,+BAA+B,CAAC;AAEvD,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;AAChC,MAAM,cAAc,GAAG,IAAI,cAAc,EAAE,CAAC;AAC5C,MAAM,cAAc,GAAG,IAAI,cAAc,EAAE,CAAC;AAE5C,MAAM,CAAC,IAAI,CACT,oBAAoB,EACpB,CAAC,UAAU,EAAE,cAAc,CAAC,WAAW,EAAE,cAAc,CAAC,kBAAkB,EAAE,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EACnG,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,CAC/C,CAAC;AAEF,MAAM,CAAC,GAAG,CACR,0CAA0C,EAC1C,CAAC,UAAU,EAAE,cAAc,CAAC,WAAW,EAAE,cAAc,CAAC,kBAAkB,CAAC,EAC3E,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CACtD,CAAC;AAEF,MAAM,CAAC,KAAK,CACV,yBAAyB,EACzB,CAAC,UAAU,EAAE,cAAc,CAAC,WAAW,EAAE,cAAc,CAAC,kBAAkB,CAAC,EAC3E,cAAc,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,CACvD,CAAC;AAEF,MAAM,CAAC,KAAK,CACV,uBAAuB,EACvB,CAAC,UAAU,EAAE,cAAc,CAAC,WAAW,EAAE,cAAc,CAAC,kBAAkB,CAAC,EAC3E,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAAc,CAAC,CACrD,CAAC;AAEF,MAAM,CAAC,GAAG,CACR,mBAAmB,EACnB,CAAC,UAAU,EAAE,cAAc,CAAC,WAAW,EAAE,cAAc,CAAC,kBAAkB,CAAC,EAC3E,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAC7C,CAAC;AAEF,MAAM,CAAC,MAAM,CACX,iBAAiB,EACjB,CAAC,UAAU,EAAE,cAAc,CAAC,WAAW,EAAE,cAAc,CAAC,kBAAkB,CAAC,EAC3E,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,CAC/C,CAAC;AAEF,eAAe,MAAM,CAAC","sourcesContent":["import express from 'express';\r\nimport { TaskController } from '../Controllers/TaskController.js';\r\nimport { apiLimiter } from '../../../middlewares/ratelimit.middleware.js';\r\nimport { AuthMiddleware } from '../../../middlewares/auth.middleware.js';\r\nimport { upload } from '../../../core/Utils/Multer.js';\r\n\r\nconst router = express.Router();\r\nconst taskController = new TaskController();\r\nconst authMiddleware = new AuthMiddleware();\r\n\r\nrouter.post(\r\n  '/createNewTask/:id',\r\n  [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus, upload.single('image')],\r\n  taskController.createTask.bind(taskController)\r\n);\r\n\r\nrouter.get(\r\n  '/context/:contextType/:contextId/:userId',\r\n  [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus],\r\n  taskController.getTasksByContext.bind(taskController)\r\n);\r\n\r\nrouter.patch(\r\n  '/updatePriority/:taskId',\r\n  [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus],\r\n  taskController.updateTaskPriority.bind(taskController)\r\n);\r\n\r\nrouter.patch(\r\n  '/updateStatus/:taskId',\r\n  [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus],\r\n  taskController.updateTaskStatus.bind(taskController)\r\n);\r\n\r\nrouter.put(\r\n  '/editTask/:taskId',\r\n  [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus],\r\n  taskController.editTask.bind(taskController)\r\n);\r\n\r\nrouter.delete(\r\n  '/delete/:taskId',\r\n  [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus],\r\n  taskController.deleteTask.bind(taskController)\r\n);\r\n\r\nexport default router;"]}