{"version":3,"file":"CollaborationService.js","sourceRoot":"","sources":["../../../../src/Modules/Collaboration/Service/CollaborationService.ts"],"names":[],"mappings":"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","sourcesContent":["import { BaseService } from \"../../../core/Services/BaseService.js\";\r\nimport {CollaborationRepository} from \"../Repositry/CollaborationRepositry.js\";\r\nimport { MentorRepository } from \"../../Mentor/Repositry/MentorRepositry.js\";\r\nimport { ContactRepository } from \"../../Contact/Repositry/ContactRepositry.js\";\r\nimport { sendEmail } from \"../../../core/Utils/Email.js\";\r\nimport stripe from \"../../../core/Utils/Stripe.js\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport logger from \"../../../core/Utils/Logger.js\";\r\nimport { ICollaboration } from \"../../../Interfaces/models/ICollaboration.js\";\r\nimport { IMentorRequest } from \"../../../Interfaces/models/IMentorRequest.js\";\r\nimport { ServiceError } from \"../../../core/Utils/ErrorHandler.js\";\r\nimport { LockedSlot } from \"../Types/types.js\";\r\n\r\nexport class CollaborationService extends BaseService {\r\n  private collabRepo: CollaborationRepository;\r\n  private contactRepo: ContactRepository;\r\n  private mentorRepo: MentorRepository;\r\n\r\n  constructor() {\r\n    super();\r\n    this.collabRepo = new CollaborationRepository();\r\n    this.contactRepo = new ContactRepository();\r\n    this.mentorRepo = new MentorRepository();\r\n  }\r\n\r\n   TemporaryRequestService = async(\r\n    requestData: Partial<IMentorRequest>\r\n  ): Promise<IMentorRequest> => {\r\n    logger.debug(`Creating temporary request`);\r\n    this.checkData(requestData);\r\n    return await this.collabRepo.createTemporaryRequest({\r\n      ...requestData,\r\n      paymentStatus: \"Pending\",\r\n      isAccepted: \"Pending\",\r\n    });\r\n  }\r\n\r\n   getMentorRequests = async(mentorId: string): Promise<IMentorRequest[]> => {\r\n    logger.debug(`Fetching mentor requests for mentor: ${mentorId}`);\r\n    this.checkData(mentorId);\r\n    return await this.collabRepo.getMentorRequestsByMentorId(mentorId);\r\n  }\r\n\r\n   acceptRequest = async(requestId: string): Promise<IMentorRequest | null> => {\r\n    logger.debug(`Accepting mentor request: ${requestId}`);\r\n    this.checkData(requestId);\r\n    return await this.collabRepo.updateMentorRequestStatus(\r\n      requestId,\r\n      \"Accepted\"\r\n    );\r\n  }\r\n\r\n   rejectRequest = async(requestId: string): Promise<IMentorRequest | null> => {\r\n    logger.debug(`Rejecting mentor request: ${requestId}`);\r\n    this.checkData(requestId);\r\n    return await this.collabRepo.updateMentorRequestStatus(\r\n      requestId,\r\n      \"Rejected\"\r\n    );\r\n  }\r\n\r\n   getRequestForUser = async(userId: string): Promise<IMentorRequest[]> =>{\r\n    logger.debug(`Fetching requests for user: ${userId}`);\r\n    this.checkData(userId);\r\n    return await this.collabRepo.getRequestByUserId(userId);\r\n  }\r\n\r\n   processPaymentService = async(\r\n    paymentMethodId: string,\r\n    amount: number,\r\n    requestId: string,\r\n    mentorRequestData: Partial<IMentorRequest>,\r\n    email: string,\r\n    returnUrl: string\r\n  ): Promise<{ paymentIntent: any; contacts?: any[] }> => {\r\n    logger.debug(`Processing payment for request: ${requestId}`);\r\n    this.checkData({ paymentMethodId, amount, requestId, email, returnUrl });\r\n\r\n    if (!mentorRequestData.mentorId || !mentorRequestData.userId) {\r\n      throw new ServiceError(\"Mentor ID and User ID are required\");\r\n    }\r\n\r\n    const idempotencyKey = uuid();\r\n\r\n    let customers = await stripe.customers.list({ email, limit: 1 });\r\n    let customer = customers.data.length > 0 ? customers.data[0] : null;\r\n\r\n    if (!customer) {\r\n      customer = await stripe.customers.create({\r\n        email,\r\n        payment_method: paymentMethodId,\r\n        invoice_settings: { default_payment_method: paymentMethodId },\r\n      });\r\n    }\r\n\r\n    const paymentIntent = await stripe.paymentIntents.create(\r\n      {\r\n        amount,\r\n        currency: \"inr\",\r\n        customer: customer.id,\r\n        payment_method: paymentMethodId,\r\n        confirm: true,\r\n        receipt_email: email,\r\n        description: `Payment for Request ID: ${requestId}`,\r\n        metadata: { requestId },\r\n        return_url: `${returnUrl}?payment_status=success&request_id=${requestId}`,\r\n      },\r\n      { idempotencyKey }\r\n    );\r\n\r\n    if (paymentIntent.status === \"succeeded\") {\r\n      const startDate = new Date();\r\n      const endDate = new Date(startDate);\r\n      const totalSessions = mentorRequestData.timePeriod || 1;\r\n      const sessionDay = mentorRequestData.selectedSlot?.day;\r\n\r\n      if (!sessionDay) {\r\n        throw new ServiceError(\"Selected slot day is required\");\r\n      }\r\n\r\n      let sessionCount = 0;\r\n      while (sessionCount < totalSessions) {\r\n        endDate.setDate(endDate.getDate() + 1);\r\n        if (\r\n          endDate.toLocaleDateString(\"en-US\", { weekday: \"long\" }) ===\r\n          sessionDay\r\n        ) {\r\n          sessionCount++;\r\n        }\r\n      }\r\n\r\n      const collaboration = await this.collabRepo.createCollaboration({\r\n        mentorId: mentorRequestData.mentorId,\r\n        userId: mentorRequestData.userId,\r\n        selectedSlot: mentorRequestData.selectedSlot\r\n          ? [mentorRequestData.selectedSlot]\r\n          : [],\r\n        price: amount / 100,\r\n        payment: true,\r\n        isCancelled: false,\r\n        startDate,\r\n        endDate,\r\n      });\r\n\r\n      const mentor = await this.mentorRepo.getMentorById(\r\n        this.collabRepo[\"toObjectId\"](mentorRequestData.mentorId).toString()\r\n      );\r\n      if (!mentor || !mentor.userId) {\r\n        throw new ServiceError(\"Mentor or mentor’s userId not found\");\r\n      }\r\n\r\n      const [contact1, contact2] = await Promise.all([\r\n        this.contactRepo.createContact({\r\n          userId: this.collabRepo[\"toObjectId\"](\r\n            mentorRequestData.userId\r\n          ).toString(),\r\n          targetUserId: mentor.userId,\r\n          collaborationId: collaboration._id,\r\n          type: \"user-mentor\",\r\n        }),\r\n        this.contactRepo.createContact({\r\n          userId: mentor.userId,\r\n          targetUserId: this.collabRepo[\"toObjectId\"](\r\n            mentorRequestData.userId\r\n          ).toString(),\r\n          collaborationId: collaboration._id,\r\n          type: \"user-mentor\",\r\n        }),\r\n      ]);\r\n\r\n      await this.collabRepo.deleteMentorRequest(requestId);\r\n      return { paymentIntent, contacts: [contact1, contact2] };\r\n    }\r\n\r\n    return { paymentIntent };\r\n  }\r\n\r\n   getCollabDataForUserService = async(userId: string): Promise<ICollaboration[]> => {\r\n    logger.debug(`Fetching collaboration data for user: ${userId}`);\r\n    this.checkData(userId);\r\n    return await this.collabRepo.getCollabDataForUser(userId);\r\n  }\r\n\r\n   getCollabDataForMentorService = async(\r\n    mentorId: string\r\n  ): Promise<ICollaboration[]> => {\r\n    logger.debug(`Fetching collaboration data for mentor: ${mentorId}`);\r\n    this.checkData(mentorId);\r\n    return await this.collabRepo.getCollabDataForMentor(mentorId);\r\n  }\r\n\r\n   removeCollab = async(\r\n    collabId: string,\r\n    reason: string\r\n  ): Promise<ICollaboration | null> => {\r\n    logger.debug(`Removing collaboration: ${collabId}`);\r\n    this.checkData({ collabId, reason });\r\n    const collab = await this.collabRepo.findCollabById(collabId);\r\n    if (!collab) {\r\n      throw new ServiceError(\"Collaboration not found\");\r\n    }\r\n\r\n    const mentorEmail = (collab.mentorId as any).userId?.email;\r\n    const mentorName = (collab.mentorId as any).userId?.name;\r\n    const userName = (collab.userId as any).name;\r\n\r\n    if (!mentorEmail) {\r\n      throw new ServiceError(\"Mentor email not found\");\r\n    }\r\n\r\n    const subject = \"Mentorship Session Cancellation Notice\";\r\n    const text = `Dear ${mentorName},\\n\\nWe regret to inform you that your mentorship session with ${userName} has been cancelled.\\nReason: ${reason}\\n\\nIf you have any questions, please contact support.\\n\\nBest regards,\\nConnectSphere Team`;\r\n    await sendEmail(mentorEmail, subject, text);\r\n    logger.info(`Cancellation email sent to mentor: ${mentorEmail}`);\r\n\r\n    return await this.collabRepo.markCollabAsCancelled(collabId);\r\n  }\r\n\r\n   getMentorRequestsService = async({\r\n    page,\r\n    limit,\r\n    search,\r\n  }: {\r\n    page: number;\r\n    limit: number;\r\n    search: string;\r\n  }): Promise<{\r\n    requests: IMentorRequest[];\r\n    total: number;\r\n    page: number;\r\n    pages: number;\r\n  }> => {\r\n    logger.debug(`Fetching mentor requests for admin`);\r\n    return await this.collabRepo.findMentorRequest({ page, limit, search });\r\n  }\r\n\r\n   getCollabsService = async({\r\n    page,\r\n    limit,\r\n    search,\r\n  }: {\r\n    page: number;\r\n    limit: number;\r\n    search: string;\r\n  }): Promise<{\r\n    collabs: ICollaboration[];\r\n    total: number;\r\n    page: number;\r\n    pages: number;\r\n  }> => {\r\n    logger.debug(`Fetching collaborations for admin`);\r\n    return await this.collabRepo.findCollab({ page, limit, search });\r\n  }\r\n\r\n   fetchCollabById = async(collabId: string): Promise<ICollaboration | null> => {\r\n    logger.debug(`Fetching collaboration by ID: ${collabId}`);\r\n    this.checkData(collabId);\r\n    return await this.collabRepo.findCollabDetails(collabId);\r\n  }\r\n\r\n   fetchRequestById = async(requestId: string): Promise<IMentorRequest | null> => {\r\n    logger.debug(`Fetching request by ID: ${requestId}`);\r\n    this.checkData(requestId);\r\n    return await this.collabRepo.fetchMentorRequestDetails(requestId);\r\n  }\r\n\r\n   markUnavailableDaysService = async(\r\n    collabId: string,\r\n    updateData: {\r\n      datesAndReasons: { date: Date; reason: string }[];\r\n      requestedBy: \"user\" | \"mentor\";\r\n      requesterId: string;\r\n      approvedById: string;\r\n      isApproved: \"pending\" | \"approved\" | \"rejected\";\r\n    }\r\n  ): Promise<ICollaboration | null> => {\r\n    logger.debug(`Marking unavailable days for collaboration: ${collabId}`);\r\n    this.checkData({ collabId, updateData });\r\n    return await this.collabRepo.updateUnavailableDays(collabId, updateData);\r\n  }\r\n\r\n   updateTemporarySlotChangesService = async(\r\n    collabId: string,\r\n    updateData: {\r\n      datesAndNewSlots: { date: Date; newTimeSlots: string[] }[];\r\n      requestedBy: \"user\" | \"mentor\";\r\n      requesterId: string;\r\n      approvedById: string;\r\n      isApproved: \"pending\" | \"approved\" | \"rejected\";\r\n    }\r\n  ): Promise<ICollaboration | null> => {\r\n    logger.debug(\r\n      `Updating temporary slot changes for collaboration: ${collabId}`\r\n    );\r\n    this.checkData({ collabId, updateData });\r\n    return await this.collabRepo.updateTemporarySlotChanges(\r\n      collabId,\r\n      updateData\r\n    );\r\n  }\r\n\r\n   processTimeSlotRequest = async(\r\n    collabId: string,\r\n    requestId: string,\r\n    isApproved: boolean,\r\n    requestType: \"unavailable\" | \"timeSlot\"\r\n  ): Promise<ICollaboration | null> => {\r\n    logger.debug(`Processing time slot request for collaboration: ${collabId}`);\r\n    this.checkData({ collabId, requestId, requestType });\r\n    const status = isApproved ? \"approved\" : \"rejected\";\r\n    const collaboration = await this.collabRepo.findCollabById(collabId);\r\n    if (!collaboration) {\r\n      throw new ServiceError(\"Collaboration not found\");\r\n    }\r\n\r\n    let requestedBy: \"user\" | \"mentor\" | undefined;\r\n    if (requestType === \"unavailable\") {\r\n      const request = collaboration.unavailableDays.find(\r\n        (req) => req._id.toString() === requestId\r\n      );\r\n      if (!request) {\r\n        throw new ServiceError(\"Unavailable days request not found\");\r\n      }\r\n      requestedBy = request.requestedBy;\r\n    } else {\r\n      const request = collaboration.temporarySlotChanges.find(\r\n        (req) => req._id.toString() === requestId\r\n      );\r\n      if (!request) {\r\n        throw new ServiceError(\"Time slot change request not found\");\r\n      }\r\n      requestedBy = request.requestedBy;\r\n    }\r\n\r\n    if (!requestedBy) {\r\n      throw new ServiceError(\"Unable to determine who requested the change\");\r\n    }\r\n\r\n    let newEndDate: Date | undefined;\r\n    if (requestType === \"unavailable\" && status === \"approved\") {\r\n      const request = collaboration.unavailableDays.find(\r\n        (req) => req._id.toString() === requestId\r\n      );\r\n      if (request) {\r\n        const unavailableDates = request.datesAndReasons.map(\r\n          (item) => new Date(item.date)\r\n        );\r\n        const selectedDay = collaboration.selectedSlot[0]?.day;\r\n        if (!selectedDay) {\r\n          throw new ServiceError(\"Selected slot day not found\");\r\n        }\r\n        const currentEndDate = collaboration.endDate || collaboration.startDate;\r\n        newEndDate = this.calculateNewEndDate(\r\n          currentEndDate,\r\n          unavailableDates,\r\n          selectedDay\r\n        );\r\n      }\r\n    }\r\n\r\n    const updatedCollaboration = await this.collabRepo.updateRequestStatus(\r\n      collabId,\r\n      requestId,\r\n      requestType,\r\n      status,\r\n      newEndDate\r\n    );\r\n\r\n    if (status === \"rejected\") {\r\n      const userEmail = (collaboration.userId as any).email;\r\n      const userName = (collaboration.userId as any).name;\r\n      const mentorEmail = (collaboration.mentorId as any).userId.email;\r\n      const mentorName = (collaboration.mentorId as any).userId.name;\r\n\r\n      if (!userEmail || !mentorEmail) {\r\n        throw new ServiceError(\"User or mentor email not found\");\r\n      }\r\n\r\n      const recipientEmail = requestedBy === \"user\" ? mentorEmail : userEmail;\r\n      const recipientName = requestedBy === \"user\" ? mentorName : userName;\r\n      const otherPartyName = requestedBy === \"user\" ? userName : mentorName;\r\n\r\n      const subject = \"Request Rejection Notice\";\r\n      const text = `Dear ${recipientName},\\n\\nWe regret to inform you that the request for ${\r\n        requestType === \"unavailable\"\r\n          ? \"unavailable days\"\r\n          : \"a time slot change\"\r\n      } in your mentorship session with ${otherPartyName} has been rejected.\\n\\nIf you have any questions, please contact support.\\n\\nBest regards,\\nConnectSphere Team`;\r\n      await sendEmail(recipientEmail, subject, text);\r\n      logger.info(\r\n        `Rejection email sent to ${\r\n          requestedBy === \"user\" ? \"mentor\" : \"user\"\r\n        }: ${recipientEmail}`\r\n      );\r\n    }\r\n\r\n    return updatedCollaboration;\r\n  }\r\n\r\n   getMentorLockedSlots = async(mentorId: string): Promise<LockedSlot[]> => {\r\n    logger.debug(`Fetching locked slots for mentor: ${mentorId}`);\r\n    this.checkData(mentorId);\r\n    return await this.collabRepo.getLockedSlotsByMentorId(mentorId);\r\n  }\r\n\r\n  private calculateNewEndDate(\r\n    currentEndDate: Date,\r\n    unavailableDates: Date[],\r\n    selectedDay: string\r\n  ): Date {\r\n    const dayMap: { [key: string]: number } = {\r\n      Sunday: 0,\r\n      Monday: 1,\r\n      Tuesday: 2,\r\n      Wednesday: 3,\r\n      Thursday: 4,\r\n      Friday: 5,\r\n      Saturday: 6,\r\n    };\r\n    const selectedDayOfWeek = dayMap[selectedDay];\r\n    const newEndDate = new Date(currentEndDate);\r\n    const daysToAdd = unavailableDates.length;\r\n\r\n    let currentDate = new Date(newEndDate);\r\n    let sessionsAdded = 0;\r\n\r\n    while (sessionsAdded < daysToAdd) {\r\n      currentDate.setDate(currentDate.getDate() + 1);\r\n      if (currentDate.getDay() === selectedDayOfWeek) {\r\n        sessionsAdded++;\r\n      }\r\n    }\r\n\r\n    return currentDate;\r\n  }\r\n}\r\n"]}