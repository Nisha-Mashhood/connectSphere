{"version":3,"file":"CollaborationRoutes.js","sourceRoot":"","sources":["../../../../src/Modules/Collaboration/Routes/CollaborationRoutes.ts"],"names":[],"mappings":"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","sourcesContent":["import { Router } from 'express';\r\nimport { CollaborationController } from '../Controllers/CollaborationController.js';\r\nimport { apiLimiter } from '../../../middlewares/ratelimit.middleware.js';\r\nimport { AuthMiddleware } from '../../../middlewares/auth.middleware.js';\r\nimport { COLLABORATION_ROUTES } from '../Constant/Collaboration.routes.js';\r\n\r\nconst router = Router();\r\nconst collabController = new CollaborationController();\r\nconst authMiddleware = new AuthMiddleware();\r\n\r\n\r\nrouter.post(COLLABORATION_ROUTES.CreateMentorProfile, [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus], collabController.TemporaryRequestController);\r\nrouter.get(COLLABORATION_ROUTES.GetMentorRequests, [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus], collabController.getMentorRequestsController);\r\nrouter.post(COLLABORATION_ROUTES.AcceptRequest, [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus], collabController.acceptRequestController);\r\nrouter.post(COLLABORATION_ROUTES.RejectRequest, [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus], collabController.rejectRequestController);\r\nrouter.get(COLLABORATION_ROUTES.GetUserRequests, [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus], collabController.getRequestForUserController);\r\nrouter.post(COLLABORATION_ROUTES.ProcessPayment, [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus], collabController.makeStripePaymentController);\r\nrouter.get(COLLABORATION_ROUTES.GetCollabDataUser, [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus], collabController.getCollabDataForUserController);\r\nrouter.get(COLLABORATION_ROUTES.GetCollabDataMentor, [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus], collabController.getCollabDataForMentorController);\r\nrouter.delete(COLLABORATION_ROUTES.CancelCollab, [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus], collabController.deleteCollab);\r\nrouter.get(COLLABORATION_ROUTES.GetCollab, [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus], collabController.getCollabDetailsByCollabId);\r\nrouter.get(COLLABORATION_ROUTES.GetCollabRequest, [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus], collabController.getRequestDetailsByRequestId);\r\nrouter.put(COLLABORATION_ROUTES.MarkUnavailable, [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus], collabController.markUnavailableDays);\r\nrouter.put(COLLABORATION_ROUTES.UpdateTimeslot, [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus], collabController.updateTemporarySlotChanges);\r\nrouter.put(COLLABORATION_ROUTES.ApproveTimeSlot, [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus], collabController.approveTimeSlotRequest);\r\nrouter.get(COLLABORATION_ROUTES.GetLockedSlots, [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus], collabController.getMentorLockedSlotsController);\r\n\r\nrouter.get(COLLABORATION_ROUTES.GetAllMentorRequests, [apiLimiter, authMiddleware.verifyToken, authMiddleware.authorize('admin')], collabController.getAllMentorRequests);\r\nrouter.get(COLLABORATION_ROUTES.GetAllCollabs, [apiLimiter, authMiddleware.verifyToken, authMiddleware.authorize('admin')], collabController.getAllCollabs);\r\n\r\nexport default router;\r\n\r\n\r\n"]}