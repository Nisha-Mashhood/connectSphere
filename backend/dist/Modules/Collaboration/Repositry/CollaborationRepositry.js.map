{"version":3,"file":"CollaborationRepositry.js","sourceRoot":"","sources":["../../../../src/Modules/Collaboration/Repositry/CollaborationRepositry.ts"],"names":[],"mappings":"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","sourcesContent":["import { Types, Model } from 'mongoose';\r\nimport { BaseRepository } from '../../../core/Repositries/BaseRepositry.js';\r\nimport { RepositoryError } from '../../../core/Utils/ErrorHandler.js';\r\nimport logger from '../../../core/Utils/Logger.js';\r\nimport Collaboration from '../../../models/collaboration.js';\r\nimport MentorRequest from '../../../models/mentorRequset.js';\r\nimport Mentor from '../../../models/mentor.model.js';\r\nimport { ICollaboration } from '../../../Interfaces/models/ICollaboration.js';\r\nimport { IMentorRequest } from '../../../Interfaces/models/IMentorRequest.js';\r\nimport { IMentor } from '../../../Interfaces/models/IMentor.js';\r\nimport { UserInterface } from '../../../Interfaces/models/IUser.js';\r\n\r\nexport interface LockedSlot {\r\n  day: string;\r\n  timeSlots: string[];\r\n}\r\n\r\nexport class CollaborationRepository extends BaseRepository<ICollaboration> {\r\n  private mentorRequestModel: Model<IMentorRequest>;\r\n\r\n  constructor() {\r\n    super(Collaboration as Model<ICollaboration>);\r\n    this.mentorRequestModel = MentorRequest;\r\n  }\r\n\r\n  private toObjectId(id?: string | Types.ObjectId | IMentor | UserInterface): Types.ObjectId {\r\n    if (!id) {\r\n      logger.error('Missing ID');\r\n      throw new RepositoryError('Invalid ID: ID is required');\r\n    }\r\n    let idStr: string;\r\n    if (typeof id === 'string') {\r\n      idStr = id;\r\n    } else if (id instanceof Types.ObjectId) {\r\n      idStr = id.toString();\r\n    } else if (typeof id === 'object' && '_id' in id) {\r\n      idStr = (id as UserInterface | IMentor)._id.toString();\r\n    } else {\r\n      logger.error(`Invalid ID type: ${typeof id}`);\r\n      throw new RepositoryError('Invalid ID: must be a string, ObjectId, IMentor, or UserInterface');\r\n    }\r\n    if (!Types.ObjectId.isValid(idStr)) {\r\n      logger.error(`Invalid ID: ${idStr}`);\r\n      throw new RepositoryError('Invalid ID: must be a 24 character hex string');\r\n    }\r\n    return new Types.ObjectId(idStr);\r\n  }\r\n\r\n  async createTemporaryRequest(data: Partial<IMentorRequest>): Promise<IMentorRequest> {\r\n    try {\r\n      logger.debug(`Creating temporary request for user: ${data.userId}`);\r\n      return await this.mentorRequestModel.create({\r\n        ...data,\r\n        mentorId: data.mentorId ? this.toObjectId(data.mentorId) : undefined,\r\n        userId: data.userId ? this.toObjectId(data.userId) : undefined,\r\n        paymentStatus: 'Pending',\r\n        isAccepted: 'Pending',\r\n      });\r\n    } catch (error: any) {\r\n      logger.error(`Error creating temporary request: ${error.message}`);\r\n      throw new RepositoryError(`Error creating temporary request: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async getMentorRequestsByMentorId(mentorId: string): Promise<IMentorRequest[]> {\r\n    try {\r\n      logger.debug(`Fetching mentor requests for mentor: ${mentorId}`);\r\n      return await this.mentorRequestModel\r\n        .find({ mentorId: this.toObjectId(mentorId) })\r\n        .populate('userId', 'name profilePic')\r\n        .exec();\r\n    } catch (error: any) {\r\n      logger.error(`Error fetching mentor requests: ${error.message}`);\r\n      throw new RepositoryError(`Error fetching mentor requests: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async findMentorRequestById(id: string): Promise<IMentorRequest | null> {\r\n    try {\r\n      logger.debug(`Finding mentor request by ID: ${id}`);\r\n      return await this.mentorRequestModel.findById(this.toObjectId(id)).exec();\r\n    } catch (error: any) {\r\n      logger.error(`Error finding mentor request by ID: ${error.message}`);\r\n      throw new RepositoryError(`Error finding mentor request by ID: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async updateMentorRequestStatus(id: string, status: string): Promise<IMentorRequest | null> {\r\n    try {\r\n      logger.debug(`Updating mentor request status for ID: ${id} to ${status}`);\r\n      return await this.mentorRequestModel\r\n        .findByIdAndUpdate(this.toObjectId(id), { isAccepted: status }, { new: true })\r\n        .exec();\r\n    } catch (error: any) {\r\n      logger.error(`Error updating mentor request status: ${error.message}`);\r\n      throw new RepositoryError(`Error updating mentor request status: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async getRequestByUserId(userId: string): Promise<IMentorRequest[]> {\r\n    try {\r\n      logger.debug(`Fetching requests for user: ${userId}`);\r\n      return await this.mentorRequestModel\r\n        .find({ userId: this.toObjectId(userId) })\r\n        .populate({\r\n          path: 'mentorId',\r\n          populate: {\r\n            path: 'userId',\r\n            select: 'name email profilePic',\r\n          },\r\n        })\r\n        .exec();\r\n    } catch (error: any) {\r\n      logger.error(`Error fetching requests by user ID: ${error.message}`);\r\n      throw new RepositoryError(`Error fetching requests by user ID: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async createCollaboration(collaborationData: Partial<ICollaboration>): Promise<ICollaboration> {\r\n    try {\r\n      logger.debug(`Creating collaboration for user: ${collaborationData.userId}`);\r\n      return await this.create({\r\n        ...collaborationData,\r\n        mentorId: collaborationData.mentorId ? this.toObjectId(collaborationData.mentorId) : undefined,\r\n        userId: collaborationData.userId ? this.toObjectId(collaborationData.userId) : undefined,\r\n      });\r\n    } catch (error: any) {\r\n      logger.error(`Error creating collaboration: ${error.message}`);\r\n      throw new RepositoryError(`Error creating collaboration: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async deleteMentorRequest(requestId: string): Promise<void> {\r\n    try {\r\n      logger.debug(`Deleting mentor request: ${requestId}`);\r\n      await this.mentorRequestModel.findByIdAndDelete(this.toObjectId(requestId)).exec();\r\n    } catch (error: any) {\r\n      logger.error(`Error deleting mentor request: ${error.message}`);\r\n      throw new RepositoryError(`Error deleting mentor request: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async findCollabById(collabId: string): Promise<ICollaboration | null> {\r\n    try {\r\n      logger.debug(`Finding collaboration by ID: ${collabId}`);\r\n      return await this.model\r\n        .findById(this.toObjectId(collabId))\r\n        .populate({\r\n          path: 'mentorId',\r\n          model: 'Mentor',\r\n          populate: {\r\n            path: 'userId',\r\n            model: 'User',\r\n          },\r\n        })\r\n        .populate({\r\n          path: 'userId',\r\n          model: 'User',\r\n        })\r\n        .exec();\r\n    } catch (error: any) {\r\n      logger.error(`Error finding collaboration: ${error.message}`);\r\n      throw new RepositoryError(`Error finding collaboration: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async deleteCollabById(collabId: string): Promise<ICollaboration | null> {\r\n    try {\r\n      logger.debug(`Deleting collaboration: ${collabId}`);\r\n      return await this.findByIdAndDelete(this.toObjectId(collabId).toString());\r\n    } catch (error: any) {\r\n      logger.error(`Error deleting collaboration: ${error.message}`);\r\n      throw new RepositoryError(`Error deleting collaboration: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async markCollabAsCancelled(collabId: string): Promise<ICollaboration | null> {\r\n    try {\r\n      logger.debug(`Marking collaboration as cancelled: ${collabId}`);\r\n      return await this.findByIdAndUpdate(\r\n        this.toObjectId(collabId).toString(),\r\n        { isCancelled: true },\r\n        { new: true }\r\n      );\r\n    } catch (error: any) {\r\n      logger.error(`Error marking collaboration as cancelled: ${error.message}`);\r\n      throw new RepositoryError(`Error marking collaboration as cancelled: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async updateCollabFeedback(collabId: string): Promise<ICollaboration | null> {\r\n    try {\r\n      logger.debug(`Updating collaboration feedback for ID: ${collabId}`);\r\n      return await this.findByIdAndUpdate(\r\n        this.toObjectId(collabId).toString(),\r\n        { feedbackGiven: true },\r\n        { new: true }\r\n      );\r\n    } catch (error: any) {\r\n      logger.error(`Error updating collaboration feedback: ${error.message}`);\r\n      throw new RepositoryError(`Error updating collaboration feedback: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async getCollabDataForUser(userId: string): Promise<ICollaboration[]> {\r\n    try {\r\n      logger.debug(`Fetching collaboration data for user: ${userId}`);\r\n      return await this.model\r\n        .find({ userId: this.toObjectId(userId), isCancelled: false })\r\n        .populate({\r\n          path: 'mentorId',\r\n          populate: {\r\n            path: 'userId',\r\n          },\r\n        })\r\n        .populate('userId')\r\n        .exec();\r\n    } catch (error: any) {\r\n      logger.error(`Error fetching collaboration data for user: ${error.message}`);\r\n      throw new RepositoryError(`Error fetching collaboration data for user: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async getCollabDataForMentor(mentorId: string): Promise<ICollaboration[]> {\r\n    try {\r\n      logger.debug(`Fetching collaboration data for mentor: ${mentorId}`);\r\n      const mentor = await Mentor.findById(this.toObjectId(mentorId)).select('userId');\r\n      if (!mentor) {\r\n        throw new RepositoryError('Mentor not found');\r\n      }\r\n      const userId = this.toObjectId(mentor.userId.toString());\r\n      return await this.model\r\n        .find({\r\n          $or: [\r\n            { mentorId: this.toObjectId(mentorId), isCancelled: false },\r\n            { userId, isCancelled: false },\r\n          ],\r\n        })\r\n        .populate({\r\n          path: 'mentorId',\r\n          populate: {\r\n            path: 'userId',\r\n          },\r\n        })\r\n        .populate('userId')\r\n        .exec();\r\n    } catch (error: any) {\r\n      logger.error(`Error fetching collaboration data for mentor: ${error.message}`);\r\n      throw new RepositoryError(`Error fetching collaboration data for mentor: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async findMentorRequest({ page, limit, search }: { page: number; limit: number; search: string }): Promise<{ requests: IMentorRequest[]; total: number; page: number; pages: number }> {\r\n    try {\r\n      logger.debug(`Fetching mentor requests with page: ${page}, limit: ${limit}, search: ${search}`);\r\n      const query = search\r\n        ? {\r\n            $or: [\r\n              { 'userId.name': { $regex: search, $options: 'i' } },\r\n              { 'userId.email': { $regex: search, $options: 'i' } },\r\n              { 'mentorId.userId.name': { $regex: search, $options: 'i' } },\r\n              { 'mentorId.userId.email': { $regex: search, $options: 'i' } },\r\n              { 'mentorId.specialization': { $regex: search, $options: 'i' } },\r\n            ],\r\n          }\r\n        : {};\r\n      const total = await this.mentorRequestModel.countDocuments(query);\r\n      const requests = await this.mentorRequestModel\r\n        .find(query)\r\n        .populate({\r\n          path: 'mentorId',\r\n          model: 'Mentor',\r\n          populate: {\r\n            path: 'userId',\r\n            model: 'User',\r\n          },\r\n        })\r\n        .populate({\r\n          path: 'userId',\r\n          model: 'User',\r\n        })\r\n        .skip((page - 1) * limit)\r\n        .limit(limit)\r\n        .exec();\r\n      return { requests, total, page, pages: Math.ceil(total / limit) };\r\n    } catch (error: any) {\r\n      logger.error(`Error fetching mentor requests: ${error.message}`);\r\n      throw new RepositoryError(`Error fetching mentor requests: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async findCollab({ page, limit, search }: { page: number; limit: number; search: string }): Promise<{ collabs: ICollaboration[]; total: number; page: number; pages: number }> {\r\n    try {\r\n      logger.debug(`Fetching collaborations with page: ${page}, limit: ${limit}, search: ${search}`);\r\n      const query = search\r\n        ? {\r\n            $or: [\r\n              { 'userId.name': { $regex: search, $options: 'i' } },\r\n              { 'userId.email': { $regex: search, $options: 'i' } },\r\n              { 'mentorId.userId.name': { $regex: search, $options: 'i' } },\r\n              { 'mentorId.userId.email': { $regex: search, $options: 'i' } },\r\n              { 'mentorId.specialization': { $regex: search, $options: 'i' } },\r\n            ],\r\n          }\r\n        : {};\r\n      const total = await this.model.countDocuments(query);\r\n      const collabs = await this.model\r\n        .find(query)\r\n        .populate({\r\n          path: 'mentorId',\r\n          model: 'Mentor',\r\n          populate: {\r\n            path: 'userId',\r\n            model: 'User',\r\n          },\r\n        })\r\n        .populate({\r\n          path: 'userId',\r\n          model: 'User',\r\n        })\r\n        .skip((page - 1) * limit)\r\n        .limit(limit)\r\n        .exec();\r\n      return { collabs, total, page, pages: Math.ceil(total / limit) };\r\n    } catch (error: any) {\r\n      logger.error(`Error fetching collaborations: ${error.message}`);\r\n      throw new RepositoryError(`Error fetching collaborations: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async fetchMentorRequestDetails(requestId: string): Promise<IMentorRequest | null> {\r\n    try {\r\n      logger.debug(`Fetching mentor request details for ID: ${requestId}`);\r\n      return await this.mentorRequestModel\r\n        .findById(this.toObjectId(requestId))\r\n        .populate({\r\n          path: 'mentorId',\r\n          model: 'Mentor',\r\n          populate: {\r\n            path: 'userId',\r\n            model: 'User',\r\n          },\r\n        })\r\n        .populate({\r\n          path: 'userId',\r\n          model: 'User',\r\n        })\r\n        .exec();\r\n    } catch (error: any) {\r\n      logger.error(`Error fetching mentor request details: ${error.message}`);\r\n      throw new RepositoryError(`Error fetching mentor request details: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async findCollabDetails(collabId: string): Promise<ICollaboration | null> {\r\n    try {\r\n      logger.debug(`Fetching collaboration details for ID: ${collabId}`);\r\n      return await this.findCollabById(collabId);\r\n    } catch (error: any) {\r\n      logger.error(`Error fetching collaboration details: ${error.message}`);\r\n      throw new RepositoryError(`Error fetching collaboration details: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async updateUnavailableDays(\r\n    collabId: string,\r\n    updateData: {\r\n      datesAndReasons: { date: Date; reason: string }[];\r\n      requestedBy: 'user' | 'mentor';\r\n      requesterId: string;\r\n      approvedById: string;\r\n      isApproved: 'pending' | 'approved' | 'rejected';\r\n    }\r\n  ): Promise<ICollaboration | null> {\r\n    try {\r\n      logger.debug(`Updating unavailable days for collaboration: ${collabId}`);\r\n      return await this.findByIdAndUpdate(\r\n        this.toObjectId(collabId).toString(),\r\n        {\r\n          $push: {\r\n            unavailableDays: {\r\n              datesAndReasons: updateData.datesAndReasons,\r\n              requestedBy: updateData.requestedBy,\r\n              requesterId: this.toObjectId(updateData.requesterId),\r\n              approvedById: this.toObjectId(updateData.approvedById),\r\n              isApproved: updateData.isApproved,\r\n            },\r\n          },\r\n        },\r\n        { new: true }\r\n      );\r\n    } catch (error: any) {\r\n      logger.error(`Error updating unavailable days: ${error.message}`);\r\n      throw new RepositoryError(`Error updating unavailable days: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async updateTemporarySlotChanges(\r\n    collabId: string,\r\n    updateData: {\r\n      datesAndNewSlots: { date: Date; newTimeSlots: string[] }[];\r\n      requestedBy: 'user' | 'mentor';\r\n      requesterId: string;\r\n      approvedById: string;\r\n      isApproved: 'pending' | 'approved' | 'rejected';\r\n    }\r\n  ): Promise<ICollaboration | null> {\r\n    try {\r\n      logger.debug(`Updating temporary slot changes for collaboration: ${collabId}`);\r\n      return await this.findByIdAndUpdate(\r\n        this.toObjectId(collabId).toString(),\r\n        {\r\n          $push: {\r\n            temporarySlotChanges: {\r\n              datesAndNewSlots: updateData.datesAndNewSlots,\r\n              requestedBy: updateData.requestedBy,\r\n              requesterId: this.toObjectId(updateData.requesterId),\r\n              approvedById: this.toObjectId(updateData.approvedById),\r\n              isApproved: updateData.isApproved,\r\n            },\r\n          },\r\n        },\r\n        { new: true }\r\n      );\r\n    } catch (error: any) {\r\n      logger.error(`Error updating temporary slot changes: ${error.message}`);\r\n      throw new RepositoryError(`Error updating temporary slot changes: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async updateRequestStatus(\r\n    collabId: string,\r\n    requestId: string,\r\n    requestType: 'unavailable' | 'timeSlot',\r\n    status: 'approved' | 'rejected',\r\n    newEndDate?: Date\r\n  ): Promise<ICollaboration | null> {\r\n    try {\r\n      logger.debug(`Updating request status for collaboration: ${collabId}, request: ${requestId}`);\r\n      const updateField = requestType === 'unavailable' ? 'unavailableDays' : 'temporarySlotChanges';\r\n      let updateQuery: any = {\r\n        $set: {\r\n          [`${updateField}.$.isApproved`]: status,\r\n        },\r\n      };\r\n      if (newEndDate) {\r\n        updateQuery.$set['endDate'] = newEndDate;\r\n      }\r\n      return await this.model\r\n        .findOneAndUpdate(\r\n          {\r\n            _id: this.toObjectId(collabId),\r\n            [`${updateField}._id`]: this.toObjectId(requestId),\r\n          },\r\n          updateQuery,\r\n          { new: true }\r\n        )\r\n        .populate({\r\n          path: 'mentorId',\r\n          model: 'Mentor',\r\n          populate: {\r\n            path: 'userId',\r\n            model: 'User',\r\n          },\r\n        })\r\n        .populate({\r\n          path: 'userId',\r\n          model: 'User',\r\n        })\r\n        .exec();\r\n    } catch (error: any) {\r\n      logger.error(`Error updating request status: ${error.message}`);\r\n      throw new RepositoryError(`Error updating request status: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async getLockedSlotsByMentorId(mentorId: string): Promise<LockedSlot[]> {\r\n    try {\r\n      logger.debug(`Fetching locked slots for mentor: ${mentorId}`);\r\n      const currentDate = new Date();\r\n      const collaborations = await this.model\r\n        .find({\r\n          mentorId: this.toObjectId(mentorId),\r\n          isCancelled: false,\r\n          $or: [{ endDate: { $gt: currentDate } }, { endDate: null }],\r\n        })\r\n        .select('selectedSlot')\r\n        .exec();\r\n      const mentorRequests = await this.mentorRequestModel\r\n        .find({\r\n          mentorId: this.toObjectId(mentorId),\r\n          isAccepted: 'Accepted',\r\n        })\r\n        .select('selectedSlot')\r\n        .exec();\r\n\r\n      const collabSlots: LockedSlot[] = collaborations.flatMap((collab: any) =>\r\n        collab.selectedSlot.map((slot: any) => ({\r\n          day: slot.day,\r\n          timeSlots: slot.timeSlots,\r\n        }))\r\n      );\r\n      const requestSlots: LockedSlot[] = mentorRequests\r\n        .map((request: any) => {\r\n          const selectedSlot = request.selectedSlot as { day?: string; timeSlots?: string };\r\n          if (!selectedSlot.day || !selectedSlot.timeSlots) {\r\n            logger.warn(`Invalid selectedSlot for mentorRequestId: ${request._id}`);\r\n            return null;\r\n          }\r\n          return {\r\n            day: selectedSlot.day,\r\n            timeSlots: [selectedSlot.timeSlots],\r\n          };\r\n        })\r\n        .filter((slot): slot is LockedSlot => slot !== null);\r\n\r\n      const allSlots: LockedSlot[] = [...collabSlots, ...requestSlots];\r\n      const uniqueSlots: LockedSlot[] = [];\r\n      allSlots.forEach((slot) => {\r\n        const existing = uniqueSlots.find((s) => s.day === slot.day);\r\n        if (existing) {\r\n          existing.timeSlots = Array.from(new Set([...existing.timeSlots, ...slot.timeSlots]));\r\n        } else {\r\n          uniqueSlots.push({ day: slot.day, timeSlots: slot.timeSlots });\r\n        }\r\n      });\r\n\r\n      logger.info(`Fetched ${uniqueSlots.length} locked slots for mentorId: ${mentorId}`);\r\n      return uniqueSlots;\r\n    } catch (error: any) {\r\n      logger.error(`Error fetching locked slots: ${error.message}`);\r\n      throw new RepositoryError(`Error fetching locked slots: ${error.message}`);\r\n    }\r\n  }\r\n}"]}