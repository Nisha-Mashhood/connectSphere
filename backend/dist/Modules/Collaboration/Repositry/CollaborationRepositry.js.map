{"version":3,"file":"CollaborationRepositry.js","sourceRoot":"","sources":["../../../../src/Modules/Collaboration/Repositry/CollaborationRepositry.ts"],"names":[],"mappings":"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","sourcesContent":["import { Types, Model } from \"mongoose\";\r\nimport { BaseRepository } from \"../../../core/Repositries/BaseRepositry.js\";\r\nimport { RepositoryError } from \"../../../core/Utils/ErrorHandler.js\";\r\nimport logger from \"../../../core/Utils/Logger.js\";\r\nimport Collaboration from \"../../../models/collaboration.js\";\r\nimport MentorRequest from \"../../../models/mentorRequset.js\";\r\nimport Mentor from \"../../../models/mentor.model.js\";\r\nimport { ICollaboration } from \"../../../Interfaces/models/ICollaboration.js\";\r\nimport { IMentorRequest } from \"../../../Interfaces/models/IMentorRequest.js\";\r\nimport { IMentor } from \"../../../Interfaces/models/IMentor.js\";\r\nimport { UserInterface } from \"../../../Interfaces/models/IUser.js\";\r\nimport { LockedSlot } from \"../Types/types.js\";\r\n\r\nexport class CollaborationRepository extends BaseRepository<ICollaboration> {\r\n  private mentorRequestModel: Model<IMentorRequest>;\r\n\r\n  constructor() {\r\n    super(Collaboration as Model<ICollaboration>);\r\n    this.mentorRequestModel = MentorRequest;\r\n  }\r\n\r\n  private toObjectId(\r\n    id?: string | Types.ObjectId | IMentor | UserInterface\r\n  ): Types.ObjectId {\r\n    if (!id) {\r\n      logger.error(\"Missing ID\");\r\n      throw new RepositoryError(\"Invalid ID: ID is required\");\r\n    }\r\n    let idStr: string;\r\n    if (typeof id === \"string\") {\r\n      idStr = id;\r\n    } else if (id instanceof Types.ObjectId) {\r\n      idStr = id.toString();\r\n    } else if (typeof id === \"object\" && \"_id\" in id) {\r\n      idStr = (id as UserInterface | IMentor)._id.toString();\r\n    } else {\r\n      logger.error(`Invalid ID type: ${typeof id}`);\r\n      throw new RepositoryError(\r\n        \"Invalid ID: must be a string, ObjectId, IMentor, or UserInterface\"\r\n      );\r\n    }\r\n    if (!Types.ObjectId.isValid(idStr)) {\r\n      logger.error(`Invalid ID: ${idStr}`);\r\n      throw new RepositoryError(\r\n        \"Invalid ID: must be a 24 character hex string\"\r\n      );\r\n    }\r\n    return new Types.ObjectId(idStr);\r\n  }\r\n\r\n  createTemporaryRequest = async (\r\n    data: Partial<IMentorRequest>\r\n  ): Promise<IMentorRequest> => {\r\n    try {\r\n      logger.debug(`Creating temporary request for user: ${data.userId}`);\r\n      return await this.mentorRequestModel.create({\r\n        ...data,\r\n        mentorId: data.mentorId ? this.toObjectId(data.mentorId) : undefined,\r\n        userId: data.userId ? this.toObjectId(data.userId) : undefined,\r\n        paymentStatus: \"Pending\",\r\n        isAccepted: \"Pending\",\r\n      });\r\n    } catch (error: any) {\r\n      logger.error(`Error creating temporary request: ${error.message}`);\r\n      throw new RepositoryError(\r\n        `Error creating temporary request: ${error.message}`\r\n      );\r\n    }\r\n  };\r\n\r\n  getMentorRequestsByMentorId = async (\r\n    mentorId: string\r\n  ): Promise<IMentorRequest[]> => {\r\n    try {\r\n      logger.debug(`Fetching mentor requests for mentor: ${mentorId}`);\r\n      return await this.mentorRequestModel\r\n        .find({ mentorId: this.toObjectId(mentorId) })\r\n        .populate(\"userId\", \"name profilePic\")\r\n        .exec();\r\n    } catch (error: any) {\r\n      logger.error(`Error fetching mentor requests: ${error.message}`);\r\n      throw new RepositoryError(\r\n        `Error fetching mentor requests: ${error.message}`\r\n      );\r\n    }\r\n  };\r\n\r\n  findMentorRequestById = async (\r\n    id: string\r\n  ): Promise<IMentorRequest | null> => {\r\n    try {\r\n      logger.debug(`Finding mentor request by ID: ${id}`);\r\n      return await this.mentorRequestModel.findById(this.toObjectId(id)).exec();\r\n    } catch (error: any) {\r\n      logger.error(`Error finding mentor request by ID: ${error.message}`);\r\n      throw new RepositoryError(\r\n        `Error finding mentor request by ID: ${error.message}`\r\n      );\r\n    }\r\n  };\r\n\r\n  updateMentorRequestStatus = async (\r\n    id: string,\r\n    status: string\r\n  ): Promise<IMentorRequest | null> => {\r\n    try {\r\n      logger.debug(`Updating mentor request status for ID: ${id} to ${status}`);\r\n      return await this.mentorRequestModel\r\n        .findByIdAndUpdate(\r\n          this.toObjectId(id),\r\n          { isAccepted: status },\r\n          { new: true }\r\n        )\r\n        .exec();\r\n    } catch (error: any) {\r\n      logger.error(`Error updating mentor request status: ${error.message}`);\r\n      throw new RepositoryError(\r\n        `Error updating mentor request status: ${error.message}`\r\n      );\r\n    }\r\n  };\r\n\r\n  getRequestByUserId = async (userId: string): Promise<IMentorRequest[]> => {\r\n    try {\r\n      logger.debug(`Fetching requests for user: ${userId}`);\r\n      return await this.mentorRequestModel\r\n        .find({ userId: this.toObjectId(userId) })\r\n        .populate({\r\n          path: \"mentorId\",\r\n          populate: {\r\n            path: \"userId\",\r\n            select: \"name email profilePic\",\r\n          },\r\n        })\r\n        .exec();\r\n    } catch (error: any) {\r\n      logger.error(`Error fetching requests by user ID: ${error.message}`);\r\n      throw new RepositoryError(\r\n        `Error fetching requests by user ID: ${error.message}`\r\n      );\r\n    }\r\n  };\r\n\r\n  createCollaboration = async (\r\n    collaborationData: Partial<ICollaboration>\r\n  ): Promise<ICollaboration> => {\r\n    try {\r\n      logger.debug(\r\n        `Creating collaboration for user: ${collaborationData.userId}`\r\n      );\r\n      return await this.create({\r\n        ...collaborationData,\r\n        mentorId: collaborationData.mentorId\r\n          ? this.toObjectId(collaborationData.mentorId)\r\n          : undefined,\r\n        userId: collaborationData.userId\r\n          ? this.toObjectId(collaborationData.userId)\r\n          : undefined,\r\n      });\r\n    } catch (error: any) {\r\n      logger.error(`Error creating collaboration: ${error.message}`);\r\n      throw new RepositoryError(\r\n        `Error creating collaboration: ${error.message}`\r\n      );\r\n    }\r\n  };\r\n\r\n  deleteMentorRequest = async (requestId: string): Promise<void> => {\r\n    try {\r\n      logger.debug(`Deleting mentor request: ${requestId}`);\r\n      await this.mentorRequestModel\r\n        .findByIdAndDelete(this.toObjectId(requestId))\r\n        .exec();\r\n    } catch (error: any) {\r\n      logger.error(`Error deleting mentor request: ${error.message}`);\r\n      throw new RepositoryError(\r\n        `Error deleting mentor request: ${error.message}`\r\n      );\r\n    }\r\n  };\r\n\r\n  findCollabById = async (collabId: string): Promise<ICollaboration | null> => {\r\n    try {\r\n      logger.debug(`Finding collaboration by ID: ${collabId}`);\r\n      return await this.model\r\n        .findById(this.toObjectId(collabId))\r\n        .populate({\r\n          path: \"mentorId\",\r\n          model: \"Mentor\",\r\n          populate: {\r\n            path: \"userId\",\r\n            model: \"User\",\r\n          },\r\n        })\r\n        .populate({\r\n          path: \"userId\",\r\n          model: \"User\",\r\n        })\r\n        .exec();\r\n    } catch (error: any) {\r\n      logger.error(`Error finding collaboration: ${error.message}`);\r\n      throw new RepositoryError(\r\n        `Error finding collaboration: ${error.message}`\r\n      );\r\n    }\r\n  };\r\n\r\n  deleteCollabById = async (\r\n    collabId: string\r\n  ): Promise<ICollaboration | null> => {\r\n    try {\r\n      logger.debug(`Deleting collaboration: ${collabId}`);\r\n      return await this.findByIdAndDelete(this.toObjectId(collabId).toString());\r\n    } catch (error: any) {\r\n      logger.error(`Error deleting collaboration: ${error.message}`);\r\n      throw new RepositoryError(\r\n        `Error deleting collaboration: ${error.message}`\r\n      );\r\n    }\r\n  };\r\n\r\n  markCollabAsCancelled = async (\r\n    collabId: string\r\n  ): Promise<ICollaboration | null> => {\r\n    try {\r\n      logger.debug(`Marking collaboration as cancelled: ${collabId}`);\r\n      return await this.findByIdAndUpdate(\r\n        this.toObjectId(collabId).toString(),\r\n        { isCancelled: true },\r\n        { new: true }\r\n      );\r\n    } catch (error: any) {\r\n      logger.error(\r\n        `Error marking collaboration as cancelled: ${error.message}`\r\n      );\r\n      throw new RepositoryError(\r\n        `Error marking collaboration as cancelled: ${error.message}`\r\n      );\r\n    }\r\n  };\r\n\r\n  updateCollabFeedback = async (\r\n    collabId: string\r\n  ): Promise<ICollaboration | null> => {\r\n    try {\r\n      logger.debug(`Updating collaboration feedback for ID: ${collabId}`);\r\n      return await this.findByIdAndUpdate(\r\n        this.toObjectId(collabId).toString(),\r\n        { feedbackGiven: true },\r\n        { new: true }\r\n      );\r\n    } catch (error: any) {\r\n      logger.error(`Error updating collaboration feedback: ${error.message}`);\r\n      throw new RepositoryError(\r\n        `Error updating collaboration feedback: ${error.message}`\r\n      );\r\n    }\r\n  };\r\n\r\n  getCollabDataForUser = async (userId: string): Promise<ICollaboration[]> => {\r\n    try {\r\n      logger.debug(`Fetching collaboration data for user: ${userId}`);\r\n      return await this.model\r\n        .find({ userId: this.toObjectId(userId), isCancelled: false })\r\n        .populate({\r\n          path: \"mentorId\",\r\n          populate: {\r\n            path: \"userId\",\r\n          },\r\n        })\r\n        .populate(\"userId\")\r\n        .exec();\r\n    } catch (error: any) {\r\n      logger.error(\r\n        `Error fetching collaboration data for user: ${error.message}`\r\n      );\r\n      throw new RepositoryError(\r\n        `Error fetching collaboration data for user: ${error.message}`\r\n      );\r\n    }\r\n  };\r\n\r\n  getCollabDataForMentor = async (\r\n    mentorId: string\r\n  ): Promise<ICollaboration[]> => {\r\n    try {\r\n      logger.debug(`Fetching collaboration data for mentor: ${mentorId}`);\r\n      const mentor = await Mentor.findById(this.toObjectId(mentorId)).select(\r\n        \"userId\"\r\n      );\r\n      if (!mentor) {\r\n        throw new RepositoryError(\"Mentor not found\");\r\n      }\r\n      const userId = this.toObjectId(mentor.userId.toString());\r\n      return await this.model\r\n        .find({\r\n          $or: [\r\n            { mentorId: this.toObjectId(mentorId), isCancelled: false },\r\n            { userId, isCancelled: false },\r\n          ],\r\n        })\r\n        .populate({\r\n          path: \"mentorId\",\r\n          populate: {\r\n            path: \"userId\",\r\n          },\r\n        })\r\n        .populate(\"userId\")\r\n        .exec();\r\n    } catch (error: any) {\r\n      logger.error(\r\n        `Error fetching collaboration data for mentor: ${error.message}`\r\n      );\r\n      throw new RepositoryError(\r\n        `Error fetching collaboration data for mentor: ${error.message}`\r\n      );\r\n    }\r\n  };\r\n\r\n  findMentorRequest = async ({\r\n    page,\r\n    limit,\r\n    search,\r\n  }: {\r\n    page: number;\r\n    limit: number;\r\n    search: string;\r\n  }) => {\r\n    try {\r\n      logger.debug(\r\n        `Fetching mentor requests with page: ${page}, limit: ${limit}, search: ${search}`\r\n      );\r\n\r\n      const query: any = {};\r\n      if (search) {\r\n        query.$or = [\r\n          { \"userId.name\": { $regex: search, $options: \"i\" } },\r\n          { \"userId.email\": { $regex: search, $options: \"i\" } },\r\n          { \"mentorId.userId.name\": { $regex: search, $options: \"i\" } },\r\n          { \"mentorId.userId.email\": { $regex: search, $options: \"i\" } },\r\n          { \"mentorId.specialization\": { $regex: search, $options: \"i\" } },\r\n        ];\r\n      }\r\n\r\n      // const trimmedSearch = (search || \"\").trim();\r\n      // logger.debug(`Trimmed search term: \"${trimmedSearch}\"`);\r\n\r\n      // const query = trimmedSearch\r\n      //   ? {\r\n      //       $or: [\r\n      //         { \"userId.name\": { $regex: trimmedSearch, $options: \"i\" } },\r\n      //         { \"userId.email\": { $regex: trimmedSearch, $options: \"i\" } },\r\n      //         {\r\n      //           \"mentorId.userId.name\": {\r\n      //             $regex: trimmedSearch,\r\n      //             $options: \"i\",\r\n      //           },\r\n      //         },\r\n      //         {\r\n      //           \"mentorId.userId.email\": {\r\n      //             $regex: trimmedSearch,\r\n      //             $options: \"i\",\r\n      //           },\r\n      //         },\r\n      //         {\r\n      //           \"mentorId.specialization\": {\r\n      //             $regex: trimmedSearch,\r\n      //             $options: \"i\",\r\n      //           },\r\n      //         },\r\n      //       ],\r\n      //     }\r\n      //   : {};\r\n\r\n      logger.debug(\"Search query:\", query);\r\n\r\n      const total = await this.mentorRequestModel.countDocuments(query);\r\n      logger.debug(`Total mentor requests found: ${total}`);\r\n\r\n      const requests = await this.mentorRequestModel\r\n        .find(query)\r\n        .populate({\r\n          path: \"mentorId\",\r\n          model: \"Mentor\",\r\n          populate: {\r\n            path: \"userId\",\r\n            model: \"User\",\r\n          },\r\n        })\r\n        .populate({\r\n          path: \"userId\",\r\n          model: \"User\",\r\n        })\r\n        .skip((page - 1) * limit)\r\n        .limit(limit)\r\n        .lean()\r\n        .exec();\r\n\r\n      logger.debug(\r\n        \"Fetched mentor requests:\",\r\n        JSON.stringify(requests, null, 2)\r\n      );\r\n\r\n      return { requests, total, page, pages: Math.ceil(total / limit) || 1 };\r\n    } catch (error: any) {\r\n      logger.error(`Error fetching mentor requests: ${error.message}`);\r\n      throw new RepositoryError(\r\n        `Error fetching mentor requests: ${error.message}`\r\n      );\r\n    }\r\n  };\r\n\r\n  findCollab = async ({\r\n    page,\r\n    limit,\r\n    search,\r\n  }: {\r\n    page: number;\r\n    limit: number;\r\n    search: string;\r\n  }) => {\r\n    try {\r\n      logger.debug(\r\n        `Fetching collaborations with page: ${page}, limit: ${limit}, search: ${search}`\r\n      );\r\n\r\n      //  const trimmedSearch = (search || '').trim();\r\n      //  logger.debug(`Trimmed search term: \"${trimmedSearch}\"`);\r\n      const query: any = {};\r\n\r\n      if (search) {\r\n        query.$or = [\r\n          { \"userId.name\": { $regex: search, $options: \"i\" } },\r\n          { \"userId.email\": { $regex: search, $options: \"i\" } },\r\n          { \"mentorId.userId.name\": { $regex: search, $options: \"i\" } },\r\n          { \"mentorId.userId.email\": { $regex: search, $options: \"i\" } },\r\n          { \"mentorId.specialization\": { $regex: search, $options: \"i\" } },\r\n        ];\r\n      }\r\n\r\n      // const query = trimmedSearch\r\n      //   ? {\r\n      //       $or: [\r\n      //         { 'userId.name': { $regex: trimmedSearch, $options: 'i' } },\r\n      //         { 'userId.email': { $regex: trimmedSearch, $options: 'i' } },\r\n      //         { 'mentorId.userId.name': { $regex: trimmedSearch, $options: 'i' } },\r\n      //         { 'mentorId.userId.email': { $regex: trimmedSearch, $options: 'i' } },\r\n      //         { 'mentorId.specialization': { $regex: trimmedSearch, $options: 'i' } },\r\n      //       ],\r\n      //     }\r\n      //   : {};\r\n\r\n      logger.debug(\"Search query:\", JSON.stringify(query, null, 2));\r\n\r\n      // Get total count\r\n      const total = await this.model.countDocuments(query);\r\n      logger.debug(`Total collaborations found: ${total}`);\r\n\r\n      const collabs = await this.model\r\n        .find(query)\r\n        .populate({\r\n          path: \"mentorId\",\r\n          model: \"Mentor\",\r\n          populate: {\r\n            path: \"userId\",\r\n            model: \"User\",\r\n          },\r\n        })\r\n        .populate({\r\n          path: \"userId\",\r\n          model: \"User\",\r\n        })\r\n        .skip((page - 1) * limit)\r\n        .limit(limit)\r\n        .lean()\r\n        .exec();\r\n\r\n      logger.debug(\"Fetched collaborations:\", JSON.stringify(collabs, null, 2));\r\n\r\n      return { collabs, total, page, pages: Math.ceil(total / limit) || 1 };\r\n    } catch (error: any) {\r\n      logger.error(`Error fetching collaborations: ${error.message}`);\r\n      throw new RepositoryError(\r\n        `Error fetching collaborations: ${error.message}`\r\n      );\r\n    }\r\n  };\r\n\r\n  fetchMentorRequestDetails = async (\r\n    requestId: string\r\n  ): Promise<IMentorRequest | null> => {\r\n    try {\r\n      logger.debug(`Fetching mentor request details for ID: ${requestId}`);\r\n      return await this.mentorRequestModel\r\n        .findById(this.toObjectId(requestId))\r\n        .populate({\r\n          path: \"mentorId\",\r\n          model: \"Mentor\",\r\n          populate: {\r\n            path: \"userId\",\r\n            model: \"User\",\r\n          },\r\n        })\r\n        .populate({\r\n          path: \"userId\",\r\n          model: \"User\",\r\n        })\r\n        .exec();\r\n    } catch (error: any) {\r\n      logger.error(`Error fetching mentor request details: ${error.message}`);\r\n      throw new RepositoryError(\r\n        `Error fetching mentor request details: ${error.message}`\r\n      );\r\n    }\r\n  };\r\n\r\n  findCollabDetails = async (\r\n    collabId: string\r\n  ): Promise<ICollaboration | null> => {\r\n    try {\r\n      logger.debug(`Fetching collaboration details for ID: ${collabId}`);\r\n      return await this.findCollabById(collabId);\r\n    } catch (error: any) {\r\n      logger.error(`Error fetching collaboration details: ${error.message}`);\r\n      throw new RepositoryError(\r\n        `Error fetching collaboration details: ${error.message}`\r\n      );\r\n    }\r\n  };\r\n\r\n  updateUnavailableDays = async (\r\n    collabId: string,\r\n    updateData: {\r\n      datesAndReasons: { date: Date; reason: string }[];\r\n      requestedBy: \"user\" | \"mentor\";\r\n      requesterId: string;\r\n      approvedById: string;\r\n      isApproved: \"pending\" | \"approved\" | \"rejected\";\r\n    }\r\n  ): Promise<ICollaboration | null> => {\r\n    try {\r\n      logger.debug(`Updating unavailable days for collaboration: ${collabId}`);\r\n      return await this.findByIdAndUpdate(\r\n        this.toObjectId(collabId).toString(),\r\n        {\r\n          $push: {\r\n            unavailableDays: {\r\n              datesAndReasons: updateData.datesAndReasons,\r\n              requestedBy: updateData.requestedBy,\r\n              requesterId: this.toObjectId(updateData.requesterId),\r\n              approvedById: this.toObjectId(updateData.approvedById),\r\n              isApproved: updateData.isApproved,\r\n            },\r\n          },\r\n        },\r\n        { new: true }\r\n      );\r\n    } catch (error: any) {\r\n      logger.error(`Error updating unavailable days: ${error.message}`);\r\n      throw new RepositoryError(\r\n        `Error updating unavailable days: ${error.message}`\r\n      );\r\n    }\r\n  };\r\n\r\n  updateTemporarySlotChanges = async (\r\n    collabId: string,\r\n    updateData: {\r\n      datesAndNewSlots: { date: Date; newTimeSlots: string[] }[];\r\n      requestedBy: \"user\" | \"mentor\";\r\n      requesterId: string;\r\n      approvedById: string;\r\n      isApproved: \"pending\" | \"approved\" | \"rejected\";\r\n    }\r\n  ): Promise<ICollaboration | null> => {\r\n    try {\r\n      logger.debug(\r\n        `Updating temporary slot changes for collaboration: ${collabId}`\r\n      );\r\n      return await this.findByIdAndUpdate(\r\n        this.toObjectId(collabId).toString(),\r\n        {\r\n          $push: {\r\n            temporarySlotChanges: {\r\n              datesAndNewSlots: updateData.datesAndNewSlots,\r\n              requestedBy: updateData.requestedBy,\r\n              requesterId: this.toObjectId(updateData.requesterId),\r\n              approvedById: this.toObjectId(updateData.approvedById),\r\n              isApproved: updateData.isApproved,\r\n            },\r\n          },\r\n        },\r\n        { new: true }\r\n      );\r\n    } catch (error: any) {\r\n      logger.error(`Error updating temporary slot changes: ${error.message}`);\r\n      throw new RepositoryError(\r\n        `Error updating temporary slot changes: ${error.message}`\r\n      );\r\n    }\r\n  };\r\n\r\n  updateRequestStatus = async (\r\n    collabId: string,\r\n    requestId: string,\r\n    requestType: \"unavailable\" | \"timeSlot\",\r\n    status: \"approved\" | \"rejected\",\r\n    newEndDate?: Date\r\n  ): Promise<ICollaboration | null> => {\r\n    try {\r\n      logger.debug(\r\n        `Updating request status for collaboration: ${collabId}, request: ${requestId}`\r\n      );\r\n      const updateField =\r\n        requestType === \"unavailable\"\r\n          ? \"unavailableDays\"\r\n          : \"temporarySlotChanges\";\r\n      let updateQuery: any = {\r\n        $set: {\r\n          [`${updateField}.$.isApproved`]: status,\r\n        },\r\n      };\r\n      if (newEndDate) {\r\n        updateQuery.$set[\"endDate\"] = newEndDate;\r\n      }\r\n      return await this.model\r\n        .findOneAndUpdate(\r\n          {\r\n            _id: this.toObjectId(collabId),\r\n            [`${updateField}._id`]: this.toObjectId(requestId),\r\n          },\r\n          updateQuery,\r\n          { new: true }\r\n        )\r\n        .populate({\r\n          path: \"mentorId\",\r\n          model: \"Mentor\",\r\n          populate: {\r\n            path: \"userId\",\r\n            model: \"User\",\r\n          },\r\n        })\r\n        .populate({\r\n          path: \"userId\",\r\n          model: \"User\",\r\n        })\r\n        .exec();\r\n    } catch (error: any) {\r\n      logger.error(`Error updating request status: ${error.message}`);\r\n      throw new RepositoryError(\r\n        `Error updating request status: ${error.message}`\r\n      );\r\n    }\r\n  };\r\n\r\n  getLockedSlotsByMentorId = async (\r\n    mentorId: string\r\n  ): Promise<LockedSlot[]> => {\r\n    try {\r\n      logger.debug(`Fetching locked slots for mentor: ${mentorId}`);\r\n      const currentDate = new Date();\r\n      const collaborations = await this.model\r\n        .find({\r\n          mentorId: this.toObjectId(mentorId),\r\n          isCancelled: false,\r\n          $or: [{ endDate: { $gt: currentDate } }, { endDate: null }],\r\n        })\r\n        .select(\"selectedSlot\")\r\n        .exec();\r\n      const mentorRequests = await this.mentorRequestModel\r\n        .find({\r\n          mentorId: this.toObjectId(mentorId),\r\n          isAccepted: \"Accepted\",\r\n        })\r\n        .select(\"selectedSlot\")\r\n        .exec();\r\n\r\n      const collabSlots: LockedSlot[] = collaborations.flatMap((collab: any) =>\r\n        collab.selectedSlot.map((slot: any) => ({\r\n          day: slot.day,\r\n          timeSlots: slot.timeSlots,\r\n        }))\r\n      );\r\n      const requestSlots: LockedSlot[] = mentorRequests\r\n        .map((request: any) => {\r\n          const selectedSlot = request.selectedSlot as {\r\n            day?: string;\r\n            timeSlots?: string;\r\n          };\r\n          if (!selectedSlot.day || !selectedSlot.timeSlots) {\r\n            logger.warn(\r\n              `Invalid selectedSlot for mentorRequestId: ${request._id}`\r\n            );\r\n            return null;\r\n          }\r\n          return {\r\n            day: selectedSlot.day,\r\n            timeSlots: [selectedSlot.timeSlots],\r\n          };\r\n        })\r\n        .filter((slot): slot is LockedSlot => slot !== null);\r\n\r\n      const allSlots: LockedSlot[] = [...collabSlots, ...requestSlots];\r\n      const uniqueSlots: LockedSlot[] = [];\r\n      allSlots.forEach((slot) => {\r\n        const existing = uniqueSlots.find((s) => s.day === slot.day);\r\n        if (existing) {\r\n          existing.timeSlots = Array.from(\r\n            new Set([...existing.timeSlots, ...slot.timeSlots])\r\n          );\r\n        } else {\r\n          uniqueSlots.push({ day: slot.day, timeSlots: slot.timeSlots });\r\n        }\r\n      });\r\n\r\n      logger.info(\r\n        `Fetched ${uniqueSlots.length} locked slots for mentorId: ${mentorId}`\r\n      );\r\n      return uniqueSlots;\r\n    } catch (error: any) {\r\n      logger.error(`Error fetching locked slots: ${error.message}`);\r\n      throw new RepositoryError(\r\n        `Error fetching locked slots: ${error.message}`\r\n      );\r\n    }\r\n  };\r\n}\r\n"]}