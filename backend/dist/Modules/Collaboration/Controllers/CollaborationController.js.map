{"version":3,"file":"CollaborationController.js","sourceRoot":"","sources":["../../../../src/Modules/Collaboration/Controllers/CollaborationController.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from 'express';\r\nimport { BaseController } from '../../../core/Controller/BaseController.js';\r\nimport { CollaborationService } from '../Service/CollaborationService.js';\r\nimport MentorRequest from '../../../models/mentorRequset.js';\r\nimport { IMentorRequest } from '../../../Interfaces/models/IMentorRequest.js';\r\n// import logger from '../../../core/utils/Logger.js';\r\n\r\nexport class CollaborationController extends BaseController {\r\n  private collabService: CollaborationService;\r\n\r\n  constructor() {\r\n    super();\r\n    this.collabService = new CollaborationService();\r\n  }\r\n\r\n\r\n  TemporaryRequestController = async (req: Request, res: Response): Promise<void> =>{\r\n    try {\r\n      const { mentorId, userId, selectedSlot, price, timePeriod } = req.body;\r\n      if (!mentorId || !userId || !selectedSlot || !price || !timePeriod) {\r\n        this.throwError(400, 'All fields are required');\r\n      }\r\n      const requestData = { mentorId, userId, selectedSlot, price, timePeriod };\r\n      const newRequest = await this.collabService.TemporaryRequestService(requestData);\r\n      this.sendCreated(res, newRequest, 'Request created successfully');\r\n    } catch (error: any) {\r\n      this.handleError(error, res);\r\n    }\r\n  }\r\n\r\n  getMentorRequestsController =async(req: Request, res: Response): Promise<void> =>{\r\n    try {\r\n      const mentorId = req.query.mentorId as string;\r\n      if (!mentorId) {\r\n        this.throwError(400, 'Mentor ID is required');\r\n      }\r\n      const mentorRequests = await this.collabService.getMentorRequests(mentorId);\r\n      this.sendSuccess(res, { requests: mentorRequests }, 'Mentor requests retrieved successfully');\r\n    } catch (error: any) {\r\n      this.handleError(error, res);\r\n    }\r\n  }\r\n\r\n  acceptRequestController = async(req: Request, res: Response): Promise<void> =>{\r\n    try {\r\n      const { id } = req.params;\r\n      const request = await this.collabService.acceptRequest(id);\r\n      this.sendSuccess(res, { request }, 'Request accepted');\r\n    } catch (error: any) {\r\n      this.handleError(error, res);\r\n    }\r\n  }\r\n\r\n  rejectRequestController = async (req: Request, res: Response): Promise<void> =>{\r\n    try {\r\n      const { id } = req.params;\r\n      const request = await this.collabService.rejectRequest(id);\r\n      this.sendSuccess(res, { request }, 'Request rejected');\r\n    } catch (error: any) {\r\n      this.handleError(error, res);\r\n    }\r\n  }\r\n\r\n  getRequestForUserController = async (req: Request, res: Response): Promise<void> =>{\r\n    try {\r\n      const { id } = req.params;\r\n      const userRequest = await this.collabService.getRequestForUser(id);\r\n      this.sendSuccess(res, { requests: userRequest }, 'Request retrieved successfully');\r\n    } catch (error: any) {\r\n      this.handleError(error, res);\r\n    }\r\n  }\r\n\r\n  makeStripePaymentController = async(req: Request, res: Response): Promise<void> =>{\r\n    try {\r\n      const { paymentMethodId, amount, requestId, email, returnUrl } = req.body;\r\n      if (!returnUrl) {\r\n        this.throwError(400, 'A return URL is required for processing the payment');\r\n      }\r\n      const mentorRequestData = await MentorRequest.findById(requestId);\r\n      if (!mentorRequestData) {\r\n        this.throwError(404, 'Mentor request not found');\r\n      }\r\n      const paymentResult = await this.collabService.processPaymentService(\r\n        paymentMethodId,\r\n        amount,\r\n        requestId,\r\n        mentorRequestData as Partial<IMentorRequest>,\r\n        email,\r\n        returnUrl\r\n      );\r\n      const paymentIntent = 'paymentIntent' in paymentResult ? paymentResult.paymentIntent : paymentResult;\r\n      if (paymentIntent.status === 'requires_action' && paymentIntent.next_action) {\r\n        this.sendSuccess(res, { charge: paymentIntent }, 'Payment requires action', 200);\r\n      } else if (paymentIntent.status === 'succeeded') {\r\n        this.sendSuccess(res, { charge: paymentIntent, contacts: paymentResult.contacts }, 'Payment succeeded');\r\n      } else {\r\n        this.sendSuccess(res, { charge: paymentIntent }, `Payment status: ${paymentIntent.status}`);\r\n      }\r\n    } catch (error: any) {\r\n      this.handleError(error, res);\r\n    }\r\n  }\r\n\r\n  getCollabDataForUserController = async (req: Request, res: Response): Promise<void> =>{\r\n    try {\r\n      const { id } = req.params;\r\n      const collabData = await this.collabService.getCollabDataForUserService(id);\r\n      this.sendSuccess(res, { collabData }, 'Collaboration data retrieved successfully');\r\n    } catch (error: any) {\r\n      this.handleError(error, res);\r\n    }\r\n  }\r\n\r\n  getCollabDataForMentorController = async(req: Request, res: Response): Promise<void> =>{\r\n    try {\r\n      const { id } = req.params;\r\n      const collabData = await this.collabService.getCollabDataForMentorService(id);\r\n      this.sendSuccess(res, { collabData }, 'Collaboration data retrieved successfully');\r\n    } catch (error: any) {\r\n      this.handleError(error, res);\r\n    }\r\n  }\r\n\r\n  deleteCollab = async (req: Request, res: Response): Promise<void> =>{\r\n    try {\r\n      const { collabId } = req.params;\r\n      const { reason } = req.body;\r\n      const response = await this.collabService.removeCollab(collabId, reason);\r\n      this.sendSuccess(res, response, 'Collaboration deleted successfully');\r\n    } catch (error: any) {\r\n      this.handleError(error, res);\r\n    }\r\n  }\r\n\r\n  getAllMentorRequests = async(req: Request, res: Response): Promise<void> =>{\r\n    try {\r\n      const { page = '1', limit = '10', search = '' } = req.query;\r\n      const mentorRequests = await this.collabService.getMentorRequestsService({\r\n        page: parseInt(page as string),\r\n        limit: parseInt(limit as string),\r\n        search: search as string,\r\n      });\r\n      this.sendSuccess(res, mentorRequests, 'Mentor requests retrieved successfully');\r\n    } catch (error: any) {\r\n      this.handleError(error, res);\r\n    }\r\n  }\r\n\r\n  getAllCollabs = async (req: Request, res: Response): Promise<void> =>{\r\n    try {\r\n      const { page = '1', limit = '10', search = '' } = req.query;\r\n      const collaborations = await this.collabService.getCollabsService({\r\n        page: parseInt(page as string),\r\n        limit: parseInt(limit as string),\r\n        search: search as string,\r\n      });\r\n      this.sendSuccess(res, collaborations, 'Collaborations retrieved successfully');\r\n    } catch (error: any) {\r\n      this.handleError(error, res);\r\n    }\r\n  }\r\n\r\n  getCollabDetailsByCollabId = async (req: Request, res: Response): Promise<void> =>{\r\n    try {\r\n      const { collabId } = req.params;\r\n      const collabDetails = await this.collabService.fetchCollabById(collabId);\r\n      this.sendSuccess(res, collabDetails, 'Collaboration details accessed successfully');\r\n    } catch (error: any) {\r\n      this.handleError(error, res);\r\n    }\r\n  }\r\n\r\n  getRequestDetailsByRequestId = async(req: Request, res: Response): Promise<void> =>{\r\n    try {\r\n      const { requestId } = req.params;\r\n      const requestDetails = await this.collabService.fetchRequestById(requestId);\r\n      this.sendSuccess(res, requestDetails, 'Request details accessed successfully');\r\n    } catch (error: any) {\r\n      this.handleError(error, res);\r\n    }\r\n  }\r\n\r\n  markUnavailableDays= async(req: Request, res: Response): Promise<void> =>{\r\n    try {\r\n      const { collabId } = req.params;\r\n      const { datesAndReasons, requestedBy, requesterId, approvedById, isApproved } = req.body;\r\n      const updatedCollaboration = await this.collabService.markUnavailableDaysService(collabId, {\r\n        datesAndReasons,\r\n        requestedBy,\r\n        requesterId,\r\n        approvedById,\r\n        isApproved,\r\n      });\r\n      this.sendSuccess(res, updatedCollaboration, 'Unavailable days updated');\r\n    } catch (error: any) {\r\n      this.handleError(error, res);\r\n    }\r\n  }\r\n\r\n  updateTemporarySlotChanges = async(req: Request, res: Response): Promise<void> =>{\r\n    try {\r\n      const { collabId } = req.params;\r\n      const { datesAndNewSlots, requestedBy, requesterId, approvedById, isApproved } = req.body;\r\n      const updatedCollaboration = await this.collabService.updateTemporarySlotChangesService(collabId, {\r\n        datesAndNewSlots,\r\n        requestedBy,\r\n        requesterId,\r\n        approvedById,\r\n        isApproved,\r\n      });\r\n      this.sendSuccess(res, updatedCollaboration, 'Temporary slot changes updated');\r\n    } catch (error: any) {\r\n      this.handleError(error, res);\r\n    }\r\n  }\r\n\r\n  approveTimeSlotRequest = async(req: Request, res: Response): Promise<void> =>{\r\n    try {\r\n      const { collabId } = req.params;\r\n      const { requestId, isApproved, requestType } = req.body;\r\n      const updatedCollaboration = await this.collabService.processTimeSlotRequest(\r\n        collabId,\r\n        requestId,\r\n        isApproved,\r\n        requestType\r\n      );\r\n      this.sendSuccess(res, updatedCollaboration, 'Time slot request processed successfully');\r\n    } catch (error: any) {\r\n      this.handleError(error, res);\r\n    }\r\n  }\r\n\r\n  getMentorLockedSlotsController = async (req: Request, res: Response): Promise<void> =>{\r\n    try {\r\n      const { mentorId } = req.params;\r\n      if (!mentorId) {\r\n        this.throwError(400, 'Mentor ID is required');\r\n      }\r\n      const lockedSlots = await this.collabService.getMentorLockedSlots(mentorId);\r\n      this.sendSuccess(res, { lockedSlots }, 'Locked slots retrieved successfully');\r\n    } catch (error: any) {\r\n      this.handleError(error, res);\r\n    }\r\n  }\r\n}"]}