{"version":3,"file":"ReviewRoutes.js","sourceRoot":"","sources":["../../../../src/Modules/Review/Routes/ReviewRoutes.ts"],"names":[],"mappings":"AAAA,OAAO,OAAO,MAAM,SAAS,CAAC;AAC9B,OAAO,EAAE,gBAAgB,EAAE,MAAM,oCAAoC,CAAC;AACtE,OAAO,EAAE,UAAU,EAAE,MAAM,8CAA8C,CAAC;AAC1E,OAAO,EAAE,cAAc,EAAE,MAAM,yCAAyC,CAAC;AACzE,OAAO,EAAE,aAAa,EAAE,MAAM,8BAA8B,CAAC;AAE7D,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;AAChC,MAAM,gBAAgB,GAAG,IAAI,gBAAgB,EAAE,CAAC;AAChD,MAAM,cAAc,GAAG,IAAI,cAAc,EAAE,CAAC;AAE5C,0BAA0B;AAC1B,6BAA6B;AAC7B,yBAAyB;AACzB,2BAA2B;AAC3B,yCAAyC;AACzC,uCAAuC;AACvC,qCAAqC;AACrC,yCAAyC;AACzC,2CAA2C;AAC3C,cAAc;AAEd,MAAM,CAAC,IAAI,CACT,aAAa,CAAC,YAAY,EAC1B,CAAC,UAAU,EAAE,cAAc,CAAC,WAAW,EAAE,cAAc,CAAC,kBAAkB,CAAC,EAC3E,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC,CACrD,CAAC;AAEF,MAAM,CAAC,IAAI,CACT,aAAa,CAAC,UAAU,EACxB,CAAC,UAAU,EAAE,cAAc,CAAC,WAAW,EAAE,cAAc,CAAC,kBAAkB,CAAC,EAC3E,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,CACnD,CAAC;AAEF,MAAM,CAAC,GAAG,CACR,aAAa,CAAC,aAAa,EAC3B,CAAC,UAAU,EAAE,cAAc,CAAC,WAAW,EAAE,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,EAC3E,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CACtD,CAAC;AAEF,MAAM,CAAC,KAAK,CACV,aAAa,CAAC,aAAa,EAC3B,CAAC,UAAU,EAAE,cAAc,CAAC,WAAW,EAAE,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,EAC3E,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CACtD,CAAC;AAEF,MAAM,CAAC,KAAK,CACV,aAAa,CAAC,YAAY,EAC1B,CAAC,UAAU,EAAE,cAAc,CAAC,WAAW,EAAE,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,EAC3E,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC,CACrD,CAAC;AAEF,MAAM,CAAC,GAAG,CACR,aAAa,CAAC,kBAAkB,EAChC,CAAC,UAAU,EAAE,cAAc,CAAC,WAAW,EAAE,cAAc,CAAC,kBAAkB,CAAC,EAC3E,gBAAgB,CAAC,kBAAkB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAC3D,CAAC;AAEF,MAAM,CAAC,KAAK,CACV,aAAa,CAAC,cAAc,EAC5B,CAAC,UAAU,EAAE,cAAc,CAAC,WAAW,EAAE,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,EAC3E,gBAAgB,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAgB,CAAC,CACvD,CAAC;AAEF,MAAM,CAAC,KAAK,CACV,aAAa,CAAC,cAAc,EAC5B,CAAC,UAAU,EAAE,cAAc,CAAC,WAAW,EAAE,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,EAC3E,gBAAgB,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAgB,CAAC,CACvD,CAAC;AAEF,eAAe,MAAM,CAAC","sourcesContent":["import express from 'express';\r\nimport { ReviewController } from '../Controllers/ReviewController.js';\r\nimport { apiLimiter } from '../../../middlewares/ratelimit.middleware.js';\r\nimport { AuthMiddleware } from '../../../middlewares/auth.middleware.js';\r\nimport { REVIEW_ROUTES } from '../Constant/Review.routes.js';\r\n\r\nconst router = express.Router();\r\nconst reviewController = new ReviewController();\r\nconst authMiddleware = new AuthMiddleware();\r\n\r\n// const REVIEW_ROUTES = {\r\n//   SubmitReview: '/submit',\r\n//   SkipReview: '/skip',\r\n//   GetAllReviews: '/all',\r\n//   ApproveReview: '/approve/:reviewId',\r\n//   SelectReview: '/select/:reviewId',\r\n//   GetSelectedReviews: '/selected',\r\n//   CancelApproval: '/cancel/:reviewId',\r\n//   DeselectReview: '/deselect/:reviewId',\r\n// } as const;\r\n\r\nrouter.post(\r\n  REVIEW_ROUTES.SubmitReview,\r\n  [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus],\r\n  reviewController.submitReview.bind(reviewController)\r\n);\r\n\r\nrouter.post(\r\n  REVIEW_ROUTES.SkipReview,\r\n  [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus],\r\n  reviewController.skipReview.bind(reviewController)\r\n);\r\n\r\nrouter.get(\r\n  REVIEW_ROUTES.GetAllReviews,\r\n  [apiLimiter, authMiddleware.verifyToken, authMiddleware.authorize('admin')],\r\n  reviewController.getAllReviews.bind(reviewController)\r\n);\r\n\r\nrouter.patch(\r\n  REVIEW_ROUTES.ApproveReview,\r\n  [apiLimiter, authMiddleware.verifyToken, authMiddleware.authorize('admin')],\r\n  reviewController.approveReview.bind(reviewController)\r\n);\r\n\r\nrouter.patch(\r\n  REVIEW_ROUTES.SelectReview,\r\n  [apiLimiter, authMiddleware.verifyToken, authMiddleware.authorize('admin')],\r\n  reviewController.selectReview.bind(reviewController)\r\n);\r\n\r\nrouter.get(\r\n  REVIEW_ROUTES.GetSelectedReviews,\r\n  [apiLimiter, authMiddleware.verifyToken, authMiddleware.checkBlockedStatus],\r\n  reviewController.getSelectedReviews.bind(reviewController)\r\n);\r\n\r\nrouter.patch(\r\n  REVIEW_ROUTES.CancelApproval,\r\n  [apiLimiter, authMiddleware.verifyToken, authMiddleware.authorize('admin')],\r\n  reviewController.cancelApproval.bind(reviewController)\r\n);\r\n\r\nrouter.patch(\r\n  REVIEW_ROUTES.DeselectReview,\r\n  [apiLimiter, authMiddleware.verifyToken, authMiddleware.authorize('admin')],\r\n  reviewController.deselectReview.bind(reviewController)\r\n);\r\n\r\nexport default router;"]}