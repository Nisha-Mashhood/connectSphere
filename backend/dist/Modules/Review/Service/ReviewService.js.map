{"version":3,"file":"ReviewService.js","sourceRoot":"","sources":["../../../../src/Modules/Review/Service/ReviewService.ts"],"names":[],"mappings":"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","sourcesContent":["import { BaseService } from '../../../core/Services/BaseService.js';\r\nimport { ServiceError } from '../../../core/Utils/ErrorHandler.js';\r\nimport logger from '../../../core/Utils/Logger.js';\r\nimport { ReviewRepository } from '../Repositry/ReviewRepositry.js';\r\nimport { UserRepository } from '../../Auth/Repositry/UserRepositry.js';\r\nimport { IReview } from '../../../Interfaces/models/IReview.js';\r\n\r\nexport class ReviewService extends BaseService {\r\n  private reviewRepo: ReviewRepository;\r\n  private userRepo: UserRepository;\r\n\r\n  constructor() {\r\n    super();\r\n    this.reviewRepo = new ReviewRepository();\r\n    this.userRepo = new UserRepository();\r\n  }\r\n\r\n  async submitReview(userId: string, rating: number, comment: string): Promise<IReview> {\r\n    try {\r\n      logger.debug(`Submitting review for user: ${userId}`);\r\n      this.checkData({ userId, rating, comment });\r\n\r\n      const user = await this.userRepo.findById(userId);\r\n      if (!user) {\r\n        logger.error(`User not found: ${userId}`);\r\n        throw new ServiceError('User not found');\r\n      }\r\n      if (user.hasReviewed) {\r\n        logger.error(`User has already submitted a review: ${userId}`);\r\n        throw new ServiceError('User has already submitted a review');\r\n      }\r\n      if (rating < 1 || rating > 5) {\r\n        logger.error(`Invalid rating: ${rating}`);\r\n        throw new ServiceError('Rating must be between 1 and 5');\r\n      }\r\n\r\n      const review = await this.reviewRepo.createReview({ userId, rating, comment });\r\n      await this.userRepo.update(userId, { hasReviewed: true, loginCount: 0 });\r\n      return review;\r\n    } catch (error: any) {\r\n      logger.error(`Error submitting review: ${error.message}`);\r\n      throw new ServiceError(`Error submitting review: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async skipReview(userId: string): Promise<void> {\r\n    try {\r\n      logger.debug(`Skipping review for user: ${userId}`);\r\n      this.checkData(userId);\r\n\r\n      const user = await this.userRepo.findById(userId);\r\n      if (!user) {\r\n        logger.error(`User not found: ${userId}`);\r\n        throw new ServiceError('User not found');\r\n      }\r\n      await this.userRepo.update(userId, { loginCount: 0 });\r\n    } catch (error: any) {\r\n      logger.error(`Error skipping review: ${error.message}`);\r\n      throw new ServiceError(`Error skipping review: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async getAllReviews(): Promise<IReview[]> {\r\n    try {\r\n      logger.debug('Fetching all reviews');\r\n      const reviews = await this.reviewRepo.getAllReviews();\r\n      return reviews || [];\r\n    } catch (error: any) {\r\n      logger.error(`Error fetching all reviews: ${error.message}`);\r\n      throw new ServiceError(`Error fetching all reviews: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async approveReview(reviewId: string): Promise<IReview | null> {\r\n    try {\r\n      logger.debug(`Approving review: ${reviewId}`);\r\n      this.checkData(reviewId);\r\n\r\n      const review = await this.reviewRepo.findById(reviewId);\r\n      if (!review) {\r\n        logger.error(`Review not found: ${reviewId}`);\r\n        throw new ServiceError('Review not found');\r\n      }\r\n      return await this.reviewRepo.updateReview(reviewId, { isApproved: true });\r\n    } catch (error: any) {\r\n      logger.error(`Error approving review: ${error.message}`);\r\n      throw new ServiceError(`Error approving review: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async selectReview(reviewId: string): Promise<IReview | null> {\r\n    try {\r\n      logger.debug(`Selecting review: ${reviewId}`);\r\n      this.checkData(reviewId);\r\n\r\n      const review = await this.reviewRepo.findById(reviewId);\r\n      if (!review) {\r\n        logger.error(`Review not found: ${reviewId}`);\r\n        throw new ServiceError('Review not found');\r\n      }\r\n      if (!review.isApproved) {\r\n        logger.error(`Review not approved: ${reviewId}`);\r\n        throw new ServiceError('Review must be approved before selecting');\r\n      }\r\n      return await this.reviewRepo.updateReview(reviewId, { isSelect: true });\r\n    } catch (error: any) {\r\n      logger.error(`Error selecting review: ${error.message}`);\r\n      throw new ServiceError(`Error selecting review: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async cancelApproval(reviewId: string): Promise<IReview | null> {\r\n    try {\r\n      logger.debug(`Canceling approval for review: ${reviewId}`);\r\n      this.checkData(reviewId);\r\n\r\n      const review = await this.reviewRepo.findById(reviewId);\r\n      if (!review) {\r\n        logger.error(`Review not found: ${reviewId}`);\r\n        throw new ServiceError('Review not found');\r\n      }\r\n      return await this.reviewRepo.updateReview(reviewId, { isApproved: false, isSelect: false });\r\n    } catch (error: any) {\r\n      logger.error(`Error canceling approval: ${error.message}`);\r\n      throw new ServiceError(`Error canceling approval: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async deselectReview(reviewId: string): Promise<IReview | null> {\r\n    try {\r\n      logger.debug(`Deselecting review: ${reviewId}`);\r\n      this.checkData(reviewId);\r\n\r\n      const review = await this.reviewRepo.findById(reviewId);\r\n      if (!review) {\r\n        logger.error(`Review not found: ${reviewId}`);\r\n        throw new ServiceError('Review not found');\r\n      }\r\n      if (!review.isSelect) {\r\n        logger.error(`Review not selected: ${reviewId}`);\r\n        throw new ServiceError('Review not selected');\r\n      }\r\n      return await this.reviewRepo.updateReview(reviewId, { isSelect: false });\r\n    } catch (error: any) {\r\n      logger.error(`Error deselecting review: ${error.message}`);\r\n      throw new ServiceError(`Error deselecting review: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  async getSelectedReviews(): Promise<IReview[]> {\r\n    try {\r\n      logger.debug('Fetching selected reviews');\r\n      const reviews = await this.reviewRepo.getSelectedReviews();\r\n      return reviews || [];\r\n    } catch (error: any) {\r\n      logger.error(`Error fetching selected reviews: ${error.message}`);\r\n      throw new ServiceError(`Error fetching selected reviews: ${error.message}`);\r\n    }\r\n  }\r\n}"]}