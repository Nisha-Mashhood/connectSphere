{"version":3,"file":"FeedBackController.js","sourceRoot":"","sources":["../../../../src/Modules/Feedback/Controllers/FeedBackController.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from 'express';\r\nimport { FeedbackService } from '../Service/Feedbackservice.js';\r\nimport logger from '../../../core/Utils/Logger.js';\r\nimport { IFeedback } from '../../../Interfaces/models/IFeedback.js';\r\n\r\nexport class FeedbackController {\r\n  private feedbackService: FeedbackService;\r\n\r\n  constructor() {\r\n    this.feedbackService = new FeedbackService();\r\n  }\r\n\r\n  async createFeedback(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const feedbackData: Partial<IFeedback> = {\r\n        userId: req.body.userId,\r\n        mentorId: req.body.mentorId,\r\n        collaborationId: req.body.collaborationId,\r\n        rating: req.body.rating,\r\n        communication: req.body.communication,\r\n        expertise: req.body.expertise,\r\n        punctuality: req.body.punctuality,\r\n        comments: req.body.comments,\r\n        wouldRecommend: req.body.wouldRecommend,\r\n        givenBy: req.body.role,\r\n      };\r\n      logger.debug(`Creating feedback for collaboration: ${feedbackData.collaborationId}`);\r\n      if (!feedbackData.userId || !feedbackData.mentorId || !feedbackData.collaborationId || !feedbackData.rating) {\r\n        logger.error('Missing required fields');\r\n        throw new Error('Missing required fields: userId, mentorId, collaborationId, or rating');\r\n      }\r\n      const feedback = await this.feedbackService.createFeedback(feedbackData);\r\n      res.status(201).json({\r\n        success: true,\r\n        message: 'Feedback created successfully',\r\n        data: feedback,\r\n      });\r\n    } catch (error: any) {\r\n      logger.error(`Error creating feedback: ${error.message}`);\r\n      res.status(400).json({\r\n        success: false,\r\n        message: error.message || 'Error creating feedback',\r\n      });\r\n    }\r\n  }\r\n\r\n  async getMentorFeedbacks(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const { mentorId } = req.params;\r\n      logger.debug(`Fetching feedbacks for mentor: ${mentorId}`);\r\n      const feedbackData = await this.feedbackService.getMentorFeedbacks(mentorId);\r\n      res.status(200).json({\r\n        success: true,\r\n        message: 'Mentor feedbacks fetched successfully',\r\n        data: feedbackData,\r\n      });\r\n    } catch (error: any) {\r\n      logger.error(`Error fetching mentor feedbacks: ${error.message}`);\r\n      res.status(400).json({\r\n        success: false,\r\n        message: error.message || 'Error fetching mentor feedbacks',\r\n      });\r\n    }\r\n  }\r\n\r\n  async getUserFeedbacks(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const { userId } = req.params;\r\n      logger.debug(`Fetching feedbacks for user: ${userId}`);\r\n      const feedbacks = await this.feedbackService.getUserFeedbacks(userId);\r\n      res.status(200).json({\r\n        success: true,\r\n        message: 'User feedbacks fetched successfully',\r\n        data: feedbacks,\r\n      });\r\n    } catch (error: any) {\r\n      logger.error(`Error fetching user feedbacks: ${error.message}`);\r\n      res.status(400).json({\r\n        success: false,\r\n        message: error.message || 'Error fetching user feedbacks',\r\n      });\r\n    }\r\n  }\r\n\r\n  async getFeedbackForProfile(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const { profileId, profileType } = req.params;\r\n      logger.debug(`Fetching feedbacks for profile: ${profileId}, type: ${profileType}`);\r\n      if (!['mentor', 'user'].includes(profileType)) {\r\n        logger.error(`Invalid profile type: ${profileType}`);\r\n        throw new Error('Invalid profile type');\r\n      }\r\n      const feedbackData = await this.feedbackService.getFeedbackForProfile(profileId, profileType as 'mentor' | 'user');\r\n      res.status(200).json({\r\n        success: true,\r\n        message: 'Profile feedbacks fetched successfully',\r\n        data: feedbackData,\r\n      });\r\n    } catch (error: any) {\r\n      logger.error(`Error fetching profile feedbacks: ${error.message}`);\r\n      res.status(400).json({\r\n        success: false,\r\n        message: error.message || 'Error fetching profile feedbacks',\r\n      });\r\n    }\r\n  }\r\n\r\n  async getFeedbackByCollaborationId(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const { collabId } = req.params;\r\n      logger.debug(`Fetching feedbacks for collaboration: ${collabId}`);\r\n      const feedbacks = await this.feedbackService.getFeedbackByCollaborationId(collabId);\r\n      res.status(200).json({\r\n        success: true,\r\n        message: 'Collaboration feedbacks fetched successfully',\r\n        data: feedbacks,\r\n      });\r\n    } catch (error: any) {\r\n      logger.error(`Error fetching collaboration feedbacks: ${error.message}`);\r\n      res.status(400).json({\r\n        success: false,\r\n        message: error.message || 'Error fetching collaboration feedbacks',\r\n      });\r\n    }\r\n  }\r\n\r\n  async toggleFeedback(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const { feedbackId } = req.params;\r\n      logger.debug(`Toggling feedback visibility: ${feedbackId}`);\r\n      const feedback = await this.feedbackService.toggleFeedback(feedbackId);\r\n      res.status(200).json({\r\n        success: true,\r\n        message: `Feedback visibility toggled to ${feedback.isHidden ? 'hidden' : 'visible'}`,\r\n        data: feedback,\r\n      });\r\n    } catch (error: any) {\r\n      logger.error(`Error toggling feedback visibility: ${error.message}`);\r\n      res.status(400).json({\r\n        success: false,\r\n        message: error.message || 'Error toggling feedback visibility',\r\n      });\r\n    }\r\n  }\r\n\r\n  async getFeedbackByMentorId(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const { mentorId } = req.params;\r\n      logger.debug(`Fetching feedbacks by mentor ID: ${mentorId}`);\r\n      const feedbacks = await this.feedbackService.getFeedbackByMentorId(mentorId);\r\n      res.status(200).json({\r\n        success: true,\r\n        message: 'Feedbacks fetched successfully',\r\n        data: feedbacks,\r\n      });\r\n    } catch (error: any) {\r\n      logger.error(`Error fetching feedbacks by mentor ID: ${error.message}`);\r\n      res.status(400).json({\r\n        success: false,\r\n        message: error.message || 'Error fetching feedbacks by mentor ID',\r\n      });\r\n    }\r\n  }\r\n}"]}