{"version":3,"file":"Feedbackservice.js","sourceRoot":"","sources":["../../../../src/Modules/Feedback/Service/Feedbackservice.ts"],"names":[],"mappings":"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","sourcesContent":["import { BaseService } from '../../../core/Services/BaseService.js';\r\nimport { ServiceError } from '../../../core/Utils/ErrorHandler.js';\r\nimport logger from '../../../core/Utils/Logger.js';\r\nimport { FeedbackRepository } from '../Repositry/FeedBackRepositry.js';\r\nimport { CollaborationRepository } from '../../Collaboration/Repositry/CollaborationRepositry.js';\r\nimport { IFeedback } from '../../../Interfaces/models/IFeedback.js';\r\n\r\nexport class FeedbackService extends BaseService {\r\n  private feedbackRepo: FeedbackRepository;\r\n  private collabRepo: CollaborationRepository;\r\n\r\n  constructor() {\r\n    super();\r\n    this.feedbackRepo = new FeedbackRepository();\r\n    this.collabRepo = new CollaborationRepository();\r\n  }\r\n\r\n   createFeedback = async(feedbackData: Partial<IFeedback>): Promise<IFeedback> => {\r\n    try {\r\n      logger.debug(`Creating feedback for collaboration: ${feedbackData.collaborationId}`);\r\n      this.checkData(feedbackData);\r\n\r\n      const collabId = feedbackData.collaborationId?.toString();\r\n      if (!collabId) {\r\n        logger.error('Collaboration ID is required');\r\n        throw new ServiceError('Collaboration ID is required');\r\n      }\r\n\r\n      const collabDetails = await this.collabRepo.findById(collabId);\r\n      if (!collabDetails) {\r\n        logger.error(`Collaboration not found: ${collabId}`);\r\n        throw new ServiceError('Collaboration not found');\r\n      }\r\n\r\n      const today = new Date();\r\n      if (collabDetails.endDate && new Date(collabDetails.endDate) <= today) {\r\n        logger.debug(`Updating collaboration feedback status: ${collabId}`);\r\n        await this.collabRepo.updateCollabFeedback(collabId);\r\n      }\r\n\r\n      return await this.feedbackRepo.createFeedback(feedbackData);\r\n    } catch (error: any) {\r\n      logger.error(`Error creating feedback: ${error.message}`);\r\n      throw new ServiceError(`Error creating feedback: ${error.message}`);\r\n    }\r\n  }\r\n\r\n   getMentorFeedbacks = async(mentorId: string): Promise<{ feedbacks: IFeedback[]; averageRating: number; totalFeedbacks: number }> => {\r\n    try {\r\n      logger.debug(`Fetching feedbacks for mentor: ${mentorId}`);\r\n      this.checkData(mentorId);\r\n\r\n      const feedbacks = await this.feedbackRepo.getFeedbacksByMentorId(mentorId);\r\n      const averageRating = await this.feedbackRepo.getMentorAverageRating(mentorId);\r\n\r\n      return {\r\n        feedbacks,\r\n        averageRating,\r\n        totalFeedbacks: feedbacks.length,\r\n      };\r\n    } catch (error: any) {\r\n      logger.error(`Error fetching mentor feedbacks: ${error.message}`);\r\n      throw new ServiceError(`Error fetching mentor feedbacks: ${error.message}`);\r\n    }\r\n  }\r\n\r\n   getUserFeedbacks = async(userId: string): Promise<IFeedback[]> => {\r\n    try {\r\n      logger.debug(`Fetching feedbacks for user: ${userId}`);\r\n      this.checkData(userId);\r\n      return await this.feedbackRepo.getFeedbacksByUserId(userId);\r\n    } catch (error: any) {\r\n      logger.error(`Error fetching user feedbacks: ${error.message}`);\r\n      throw new ServiceError(`Error fetching user feedbacks: ${error.message}`);\r\n    }\r\n  }\r\n\r\n   getFeedbackForProfile = async(profileId: string, profileType: 'mentor' | 'user'): Promise<{ feedbacks: IFeedback[]; totalFeedbacks: number }>=> {\r\n    try {\r\n      logger.debug(`Fetching feedbacks for profile: ${profileId}, type: ${profileType}`);\r\n      this.checkData({ profileId, profileType });\r\n\r\n      if (!['mentor', 'user'].includes(profileType)) {\r\n        logger.error(`Invalid profile type: ${profileType}`);\r\n        throw new ServiceError('Invalid profile type');\r\n      }\r\n\r\n      const feedbacks = await this.feedbackRepo.getFeedbackForProfile(profileId, profileType);\r\n      return {\r\n        feedbacks,\r\n        totalFeedbacks: feedbacks.length,\r\n      };\r\n    } catch (error: any) {\r\n      logger.error(`Error fetching feedbacks for profile: ${error.message}`);\r\n      throw new ServiceError(`Error fetching feedbacks for profile: ${error.message}`);\r\n    }\r\n  }\r\n\r\n   getFeedbackByCollaborationId = async(collabId: string): Promise<IFeedback[]> => {\r\n    try {\r\n      logger.debug(`Fetching feedbacks for collaboration: ${collabId}`);\r\n      this.checkData(collabId);\r\n      return await this.feedbackRepo.getFeedbackByCollaborationId(collabId);\r\n    } catch (error: any) {\r\n      logger.error(`Error fetching feedbacks by collaboration ID: ${error.message}`);\r\n      throw new ServiceError(`Error fetching feedbacks by collaboration ID: ${error.message}`);\r\n    }\r\n  }\r\n\r\n   toggleFeedback = async(feedbackId: string): Promise<IFeedback> => {\r\n    try {\r\n      logger.debug(`Toggling feedback visibility: ${feedbackId}`);\r\n      this.checkData(feedbackId);\r\n      return await this.feedbackRepo.toggleIsHidden(feedbackId);\r\n    } catch (error: any) {\r\n      logger.error(`Error toggling feedback visibility: ${error.message}`);\r\n      throw new ServiceError(`Error toggling feedback visibility: ${error.message}`);\r\n    }\r\n  }\r\n\r\n   getFeedbackByMentorId = async(mentorId: string): Promise<IFeedback[]> => {\r\n    try {\r\n      logger.debug(`Fetching feedbacks by mentor ID: ${mentorId}`);\r\n      this.checkData(mentorId);\r\n      return await this.feedbackRepo.getFeedbacksByMentorId(mentorId);\r\n    } catch (error: any) {\r\n      logger.error(`Error fetching feedbacks by mentor ID: ${error.message}`);\r\n      throw new ServiceError(`Error fetching feedbacks by mentor ID: ${error.message}`);\r\n    }\r\n  }\r\n}"]}