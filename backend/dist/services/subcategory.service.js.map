{"version":3,"file":"subcategory.service.js","sourceRoot":"","sources":["../../src/services/subcategory.service.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,eAAe,MAAM,0CAA0C,CAAC;AAC5E,OAAO,EAAE,+BAA+B,EAAE,MAAM,qCAAqC,CAAC;AACtF,OAAO,EAAE,WAAW,EAAE,MAAM,8BAA8B,CAAC;AAE3D,MAAM,CAAC,MAAM,iBAAiB,GAAG,KAAK,EAAE,IAAmC,EAAE,SAAkB,EAAE,EAAE;IAC/F,IAAI,QAAQ,GAAG,IAAI,CAAC;IACpB,IAAI,SAAS,EAAE,CAAC;QACd,MAAM,MAAM,GAAG,gBAAgB,CAAC;QAChC,QAAQ,GAAG,MAAM,WAAW,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;IAClD,CAAC;IACD,OAAO,MAAM,eAAe,CAAC,iBAAiB,CAAC,EAAE,GAAG,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;AACxE,CAAC,CAAC;AAEJ,MAAM,CAAC,MAAM,mBAAmB,GAAE,KAAK,EAAE,UAAiB,EAAE,EAAE;IAC5D,OAAO,MAAM,eAAe,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;AAC/D,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,kBAAkB,GAAG,eAAe,CAAC,kBAAkB,CAAC;AACrE,MAAM,CAAC,MAAM,iBAAiB,GAAG,KAAK,EAAE,EAAU,EAAE,IAAmC,EAAE,SAAkB,EAAE,EAAE;IAC3G,IAAI,QAAQ,GAAG,IAAI,CAAC;IACpB,IAAI,SAAS,EAAE,CAAC;QACd,MAAM,MAAM,GAAG,gBAAgB,CAAC;QAChC,QAAQ,GAAG,MAAM,WAAW,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;IAClD,CAAC;IACD,OAAO,MAAM,eAAe,CAAC,iBAAiB,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,EAAE,GAAG,CAAC,QAAQ,IAAI,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;AACjG,CAAC,CAAC;AACJ,MAAM,CAAC,MAAM,iBAAiB,GAAG,eAAe,CAAC,iBAAiB,CAAC;AAEnE,MAAM,CAAC,MAAM,cAAc,GAAG,KAAK,EAAE,EAAU,EAAE,EAAE;IACjD,IAAI,CAAC;QACH,wBAAwB;QACxB,MAAM,+BAA+B,CAAC,EAAE,CAAC,CAAC;QAE1C,iCAAiC;QACjC,OAAO,MAAM,eAAe,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;IACrD,CAAC;IAAC,OAAO,KAAU,EAAE,CAAC;QACpB,MAAM,IAAI,KAAK,CACb,6CAA6C,KAAK,CAAC,OAAO,EAAE,CAC7D,CAAC;IACJ,CAAC;AACH,CAAC,CAAC","sourcesContent":["import { SubcategoryInterface } from \"src/models/subcategory.model.js\";\r\nimport * as SubcategoryRepo from \"../repositories/subcategory.repositry.js\";\r\nimport { deleteManySkillsbySubcategoryId } from '../repositories/skills.repositry.js';\r\nimport { uploadImage } from \"../utils/cloudinary.utils.js\";\r\n\r\nexport const createSubcategory = async (data: Partial<SubcategoryInterface>, imagePath?: string) => {\r\n    let imageUrl = null;\r\n    if (imagePath) {\r\n      const folder = \"sub-categories\";\r\n      imageUrl = await uploadImage(imagePath, folder);\r\n    }\r\n    return await SubcategoryRepo.createSubcategory({ ...data, imageUrl });\r\n  };\r\n\r\nexport const getAllSubcategories =async (categoryId:string) => {\r\n  return await SubcategoryRepo.getAllSubcategories(categoryId);\r\n}; \r\n\r\nexport const getSubcategoryById = SubcategoryRepo.getSubcategoryById;\r\nexport const updateSubcategory = async (id: string, data: Partial<SubcategoryInterface>, imagePath?: string) => {\r\n    let imageUrl = null;\r\n    if (imagePath) {\r\n      const folder = \"sub-categories\";\r\n      imageUrl = await uploadImage(imagePath, folder);\r\n    }\r\n    return await SubcategoryRepo.updateSubcategory(id, { ...data, ...(imageUrl && { imageUrl }) });\r\n  };\r\nexport const deleteSubcategory = SubcategoryRepo.deleteSubcategory;\r\n\r\nexport const deleteCategory = async (id: string) => {\r\n  try {\r\n    // Delete related skills\r\n    await deleteManySkillsbySubcategoryId(id);\r\n\r\n    // Now delete the category itself\r\n    return await SubcategoryRepo.deleteSubcategory(id);\r\n  } catch (error: any) {\r\n    throw new Error(\r\n      `Error deleting category and related data: ${error.message}`\r\n    );\r\n  }\r\n};\r\n"]}