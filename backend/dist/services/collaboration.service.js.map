{"version":3,"file":"collaboration.service.js","sourceRoot":"","sources":["../../src/services/collaboration.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { createCollaboration, createTemporaryRequest, deleteMentorRequest, getMentorRequestsByMentorId, getRequestByUserId, updateMentorRequestStatus } from \"../repositories/collaboration.repositry.js\";\r\nimport  stripe  from '../utils/stripe.utils.js'; \r\nimport { v4 as uuid } from 'uuid';\r\n\r\n\r\nexport const TemporaryRequestService = async (requestData: any) => {\r\n    try {\r\n      const newRequest = await createTemporaryRequest({\r\n        ...requestData,\r\n        paymentStatus: \"Pending\",\r\n        isAccepted: \"Pending\",\r\n      });\r\n      return newRequest;\r\n    } catch (error:any) {\r\n      throw new Error(`Error creating temporary request: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  // Fetch all requests for a mentor\r\nexport const getMentorRequests = async (mentorId: string) => {\r\n    try {\r\n      const request = await getMentorRequestsByMentorId(mentorId);\r\n      return request;\r\n    } catch (error: any) {\r\n      throw new Error(`Error fetching mentor requests: ${error.message}`);\r\n    }\r\n  };\r\n  \r\n  // Accept a mentor request\r\n  export const acceptRequest = async (requestId: string) => {\r\n    try {\r\n      return await updateMentorRequestStatus(requestId, \"Accepted\");\r\n    } catch (error: any) {\r\n      throw new Error(`Error accepting mentor request: ${error.message}`);\r\n    }\r\n  };\r\n  \r\n  // Reject a mentor request\r\n  export const rejectRequest = async (requestId: string) => {\r\n    try {\r\n      return await updateMentorRequestStatus(requestId, \"Rejected\");\r\n    } catch (error: any) {\r\n      throw new Error(`Error rejecting mentor request: ${error.message}`);\r\n    }\r\n  };\r\n\r\n    // get requset for the user\r\n    export const getRequsetForUser = async (userId: string) => {\r\n      try {\r\n        return await getRequestByUserId(userId);\r\n      } catch (error: any) {\r\n        throw new Error(`Error in retrieving request: ${error.message}`);\r\n      }\r\n    };\r\n\r\n    //make payemnt using stripe\r\n    export const processPaymentService = async (token: any, amount: number, requestId: string, mentorRequestData: any) => {\r\n      const idempotencyKey = uuid(); \r\n  \r\n      try {\r\n          const customer = await stripe.customers.create({\r\n              email: token.email,\r\n              source: token.id,\r\n          });\r\n  \r\n          const charge = await stripe.charges.create(\r\n              {\r\n                  amount,\r\n                  currency: 'inr',\r\n                  customer: customer.id,\r\n                  receipt_email: token.email,\r\n                  description: `Payment for Request ID: ${requestId}`,\r\n              },\r\n              { idempotencyKey }\r\n          );\r\n  \r\n          if (charge.status === 'succeeded') {\r\n              // Calculate dates\r\n              const startDate = new Date();\r\n              const endDate = new Date(startDate);\r\n              endDate.setDate(startDate.getDate() + 30); // Add 30 days\r\n  \r\n              // Create a collaboration document\r\n              await createCollaboration({\r\n                  mentorId: mentorRequestData.mentorId,\r\n                  userId: mentorRequestData.userId,\r\n                  selectedSlot: mentorRequestData.selectedSlot,\r\n                  price: amount / 100,\r\n                  payment: true,\r\n                  isCancelled: false,\r\n                  startDate,\r\n                  endDate,\r\n              });\r\n  \r\n              // Delete the mentor request document\r\n              await deleteMentorRequest(requestId);\r\n          }\r\n  \r\n          return charge;\r\n      } catch (error:any) {\r\n          throw new Error(error.message);\r\n      }\r\n  };"]}