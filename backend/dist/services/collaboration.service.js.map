{"version":3,"file":"collaboration.service.js","sourceRoot":"","sources":["../../src/services/collaboration.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { sendEmail } from \"../utils/email.utils.js\";\r\nimport {\r\n  createCollaboration,\r\n  createTemporaryRequest,\r\n  deleteMentorRequest,\r\n  fetchMentorRequsetDetails,\r\n  findCollab,\r\n  findCollabById,\r\n  findCollabDetails,\r\n  findMentorRequest,\r\n  getCollabDataForMentor,\r\n  getCollabDataForUser,\r\n  getMentorRequestsByMentorId,\r\n  getRequestByUserId,\r\n  markCollabAsCancelled,\r\n  updateMentorRequestStatus,\r\n  updateRequestStatus,\r\n  updateTemporarySlotChanges,\r\n  updateUnavailableDays,\r\n} from \"../repositories/collaboration.repositry.js\";\r\nimport stripe from \"../utils/stripe.utils.js\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nexport const TemporaryRequestService = async (requestData: any) => {\r\n  try {\r\n    const newRequest = await createTemporaryRequest({\r\n      ...requestData,\r\n      paymentStatus: \"Pending\",\r\n      isAccepted: \"Pending\",\r\n    });\r\n    return newRequest;\r\n  } catch (error: any) {\r\n    throw new Error(`Error creating temporary request: ${error.message}`);\r\n  }\r\n};\r\n\r\n// Fetch all requests for a mentor\r\nexport const getMentorRequests = async (mentorId: string) => {\r\n  try {\r\n    const request = await getMentorRequestsByMentorId(mentorId);\r\n    return request;\r\n  } catch (error: any) {\r\n    throw new Error(`Error fetching mentor requests: ${error.message}`);\r\n  }\r\n};\r\n\r\n// Accept a mentor request\r\nexport const acceptRequest = async (requestId: string) => {\r\n  try {\r\n    return await updateMentorRequestStatus(requestId, \"Accepted\");\r\n  } catch (error: any) {\r\n    throw new Error(`Error accepting mentor request: ${error.message}`);\r\n  }\r\n};\r\n\r\n// Reject a mentor request\r\nexport const rejectRequest = async (requestId: string) => {\r\n  try {\r\n    return await updateMentorRequestStatus(requestId, \"Rejected\");\r\n  } catch (error: any) {\r\n    throw new Error(`Error rejecting mentor request: ${error.message}`);\r\n  }\r\n};\r\n\r\n// get requset for the user\r\nexport const getRequsetForUser = async (userId: string) => {\r\n  try {\r\n    return await getRequestByUserId(userId);\r\n  } catch (error: any) {\r\n    throw new Error(`Error in retrieving request: ${error.message}`);\r\n  }\r\n};\r\n\r\n//make payemnt using stripe\r\nexport const processPaymentService = async (\r\n  paymentMethodId: string,\r\n  amount: number,\r\n  requestId: string,\r\n  mentorRequestData: any,\r\n  email: string,\r\n  returnUrl: string\r\n) => {\r\n  const idempotencyKey = uuid();\r\n\r\n  try {\r\n    // Check if customer already exists, otherwise create one\r\n    let customers = await stripe.customers.list({ email, limit: 1 });\r\n    let customer = customers.data.length > 0 ? customers.data[0] : null;\r\n\r\n    if (!customer) {\r\n      customer = await stripe.customers.create({\r\n        email: email,\r\n        payment_method: paymentMethodId,\r\n        invoice_settings: { default_payment_method: paymentMethodId }, // Attach default payment method\r\n      });\r\n    }\r\n\r\n    // Create a PaymentIntent\r\n    const paymentIntent = await stripe.paymentIntents.create(\r\n      {\r\n        amount,\r\n        currency: \"inr\",\r\n        customer: customer.id,\r\n        payment_method: paymentMethodId,\r\n        confirm: true,\r\n        receipt_email: email,\r\n        description: `Payment for Request ID: ${requestId}`,\r\n        metadata: { requestId },\r\n        return_url: `${returnUrl}?payment_status=success&request_id=${requestId}`,\r\n      },\r\n      { idempotencyKey }\r\n    );\r\n\r\n    // If payment is successful, create a collaboration entry and delete mentor request\r\n    if (paymentIntent.status === \"succeeded\") {\r\n      const startDate = new Date();\r\n      const endDate = new Date(startDate);\r\n\r\n      // Number of sessions user is entitled to\r\n      const totalSessions = mentorRequestData.timePeriod; \r\n      console.log(\"total sessions:\", totalSessions)\r\n      \r\n      // Find the weekly session day \r\n      const sessionDay = mentorRequestData.selectedSlot?.day; // \"Monday\"\r\n\r\n      let sessionCount = 0;\r\n\r\n      // Loop until total sessions\r\n      while (sessionCount < totalSessions) {\r\n      endDate.setDate(endDate.getDate() + 1); // Move to the next day\r\n\r\n        // Check if the current day matches the mentor's available session day\r\n        if (endDate.toLocaleDateString('en-US', { weekday: 'long' }) === sessionDay) {\r\n        sessionCount++; // incremennt the session\r\n        }\r\n      }\r\n\r\n      //problem is with while loop\r\n\r\n      await createCollaboration({\r\n        mentorId: mentorRequestData.mentorId,\r\n        userId: mentorRequestData.userId,\r\n        selectedSlot: mentorRequestData.selectedSlot,\r\n        price: amount / 100,\r\n        payment: true,\r\n        isCancelled: false,\r\n        startDate,\r\n        endDate,\r\n      });\r\n\r\n      await deleteMentorRequest(requestId);\r\n    }\r\n\r\n    return paymentIntent;\r\n  } catch (error: any) {\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n\r\n//Get collab data for user\r\nexport const getCollabDataForUserService = async (userId: string) => {\r\n  try {\r\n    const collabData = await getCollabDataForUser(userId);\r\n    return collabData;\r\n  } catch (error: any) {\r\n    throw new Error(\r\n      `Error getting collaboration data for user: ${error.message}`\r\n    );\r\n  }\r\n};\r\n\r\n//get collab data for mentor\r\nexport const getCollabDataForMentorService = async (mentorId: string) => {\r\n  try {\r\n    const collabData = await getCollabDataForMentor(mentorId);\r\n    return collabData;\r\n  } catch (error: any) {\r\n    throw new Error(\r\n      `Error getting collaboration data for mentor: ${error.message}`\r\n    );\r\n  }\r\n};\r\n\r\n//Delete collab\r\nexport const removecollab = async (collabId: string, reason: string) => {\r\n  // Check if the group exists\r\n  const collab = await findCollabById(collabId);\r\n  if (!collab) {\r\n    throw new Error(\"Collab not found\");\r\n  }\r\n\r\n  // Ensure mentorId is an object, not a string\r\n  if (typeof collab.mentorId === \"string\") {\r\n    throw new Error(\"Mentor details are not populated properly.\");\r\n  }\r\n\r\n  // Ensure userId in mentor is an object\r\n  if (typeof collab.mentorId.userId === \"string\") {\r\n    throw new Error(\"Mentor's user details are not populated properly.\");\r\n  }\r\n\r\n  // Ensure userId is an object, not a string\r\n  if (typeof collab.userId === \"string\") {\r\n    throw new Error(\"User details are not populated properly.\");\r\n  }\r\n\r\n  // Extract mentor details\r\n  const mentorEmail = collab.mentorId?.userId?.email;\r\n  const mentorName = collab.mentorId?.userId?.name;\r\n  const userName = collab.userId?.name;\r\n\r\n  if (!mentorEmail) {\r\n    throw new Error(\"Mentor email not found\");\r\n  }\r\n\r\n  // Send cancellation email\r\n  const subject = \"Mentorship Session Cancellation Notice\";\r\n  const text = `Dear ${mentorName},\r\n\r\n  We regret to inform you that your mentorship session with ${userName} has been cancelled.\r\n  Reason: ${reason}\r\n\r\n  If you have any questions, please contact support.\r\n\r\n  Best regards,\r\n  ConnectSphere Team`;\r\n\r\n  await sendEmail(mentorEmail, subject, text);\r\n\r\n  console.log(`Cancellation email sent to mentor: ${mentorEmail}`);\r\n\r\n  return await markCollabAsCancelled(collabId);\r\n};\r\n\r\n//FOR ADMIN\r\n// Service to get all mentor requests\r\nexport const getMentorRequestsService = async ({ page, limit, search }: { page: number, limit: number, search: string }) => {\r\n  try {\r\n    return await findMentorRequest({ page, limit, search });\r\n  } catch (error: any) {\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n\r\n//For getting all collab details\r\nexport const getCollabsService = async ({ page, limit, search }: { page: number, limit: number, search: string }) => {\r\n  try {\r\n    return await findCollab({ page, limit, search });\r\n  } catch (error: any) {\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n\r\n//get the collab Details by collab Id\r\nexport const fetchCollabById = async (collabId: string) => {\r\n  return await findCollabDetails(collabId);\r\n};\r\n\r\n//get the requset details by requset Id\r\nexport const fetchRequsetById = async (requestId: string) => {\r\n  return await fetchMentorRequsetDetails(requestId);\r\n};\r\n\r\n\r\n  // Service for updating unavailable days\r\nexport const markUnavailableDaysService = async (\r\n  collabId: string,\r\n  updateData: any\r\n) => {\r\n  console.log(\"came to collaboartion service\");\r\n  try {\r\n    const updatedCollaboartion = await updateUnavailableDays(collabId, updateData);\r\n    console.log(\"Updated collaboartion from service file :\",updatedCollaboartion);\r\n    return updatedCollaboartion;\r\n  } catch (error) {\r\n    console.log(\"error in collaboartion service file :\",error);\r\n    throw new Error(`Service Error: ${error}`);\r\n  }\r\n};\r\n\r\n// Service for updating temporary slot changes\r\nexport const updateTemporarySlotChangesService = async (\r\n  collabId: string,\r\n  updateData: any\r\n) => {\r\n  try {\r\n    const updatedCollaboartion = await updateTemporarySlotChanges(collabId, updateData);\r\n    console.log(\"Updated collaboartion from service file :\",updatedCollaboartion);\r\n    return updatedCollaboartion;\r\n  } catch (error) {\r\n    console.log(\"error in collaboartion service file :\",error);\r\n    throw new Error(`Service Error: ${error}`);\r\n  }\r\n}\r\n\r\n//service for updating the status\r\nexport const processTimeSlotRequest = async (\r\n  collabId: string,\r\n  requestId: string,\r\n  isApproved: boolean,\r\n  requestType: \"unavailable\" | \"timeSlot\"\r\n) => {\r\n  try {\r\n    const status = isApproved ? \"approved\" : \"rejected\";\r\n\r\n    // Fetch collaboration details with populated fields\r\n    const collaboration = await findCollabById(collabId);\r\n    if (!collaboration) {\r\n      throw new Error(\"Collaboration not found\");\r\n    }\r\n\r\n    // Determine who requested based on requestType and requestId\r\n    let requestedBy: \"user\" | \"mentor\" | undefined;\r\n    if (requestType === \"unavailable\") {\r\n      const request = collaboration.unavailableDays.find(\r\n        (req) => req._id.toString() === requestId\r\n      );\r\n      if (!request) {\r\n        throw new Error(\"Unavailable days request not found\");\r\n      }\r\n      requestedBy = request.requestedBy;\r\n    } else {\r\n      const request = collaboration.temporarySlotChanges.find(\r\n        (req) => req._id.toString() === requestId\r\n      );\r\n      if (!request) {\r\n        throw new Error(\"Time slot change request not found\");\r\n      }\r\n      requestedBy = request.requestedBy;\r\n    }\r\n\r\n    if (!requestedBy) {\r\n      throw new Error(\"Unable to determine who requested the change\");\r\n    }\r\n\r\n    // Prepare data for update\r\n    let newEndDate: Date | undefined;\r\n    if (requestType === \"unavailable\" && status === \"approved\") {\r\n      const request = collaboration.unavailableDays.find(\r\n        (req) => req._id.toString() === requestId\r\n      );\r\n      if (request) {\r\n        const unavailableDates = request.datesAndReasons.map(\r\n          (item) => new Date(item.date)\r\n        );\r\n        const selectedDay = collaboration.selectedSlot[0].day;\r\n        const currentEndDate = collaboration.endDate || collaboration.startDate;\r\n        newEndDate = calculateNewEndDate(currentEndDate, unavailableDates, selectedDay);\r\n      }\r\n    }\r\n\r\n    // Update the request status in the database\r\n    const updatedCollaboration = await updateRequestStatus(\r\n      collabId,\r\n      requestId,\r\n      requestType,\r\n      status,\r\n      newEndDate\r\n    );\r\n    console.log(\"Updated collaboration from service file:\", updatedCollaboration);\r\n\r\n    // Send email if the request is rejected\r\n    if (status === \"rejected\") {\r\n      // Type guard for userId\r\n      if (typeof collaboration.userId === \"string\") {\r\n        throw new Error(\"User details not populated\");\r\n      }\r\n      const userEmail = collaboration.userId.email;\r\n      const userName = collaboration.userId.name;\r\n\r\n      // Type guard for mentorId\r\n      if (typeof collaboration.mentorId === \"string\") {\r\n        throw new Error(\"Mentor details not populated\");\r\n      }\r\n      const mentorUser = collaboration.mentorId.userId;\r\n      if (typeof mentorUser === \"string\") {\r\n        throw new Error(\"Mentor's user details not populated\");\r\n      }\r\n      const mentorEmail = mentorUser.email;\r\n      const mentorName = mentorUser.name;\r\n\r\n      if (!userEmail || !mentorEmail) {\r\n        throw new Error(\"User or mentor email not found\");\r\n      }\r\n\r\n      // Determine recipient and sender based on who requested\r\n      const recipientEmail = requestedBy === \"user\" ? mentorEmail : userEmail;\r\n      const recipientName = requestedBy === \"user\" ? mentorName : userName;\r\n      const otherPartyName = requestedBy === \"user\" ? userName : mentorName;\r\n\r\n      const subject = \"Request Rejection Notice\";\r\n      const text = `Dear ${recipientName},\r\n\r\nWe regret to inform you that the request for ${\r\n        requestType === \"unavailable\" ? \"unavailable days\" : \"a time slot change\"\r\n      } in your mentorship session with ${otherPartyName} has been rejected.\r\n\r\nIf you have any questions, please contact support.\r\n\r\nBest regards,\r\nConnectSphere Team`;\r\n\r\n      await sendEmail(recipientEmail, subject, text);\r\n      console.log(`Rejection email sent to ${requestedBy === \"user\" ? \"mentor\" : \"user\"}: ${recipientEmail}`);\r\n    }\r\n\r\n    return updatedCollaboration;\r\n  } catch (error: any) {\r\n    console.log(\"Error in service file:\", error);\r\n    throw new Error(`Failed to process time slot request: ${error.message}`);\r\n  }\r\n};\r\n\r\n// Helper function to calculate new end date\r\nconst calculateNewEndDate = (\r\n  currentEndDate: Date,\r\n  unavailableDates: Date[],\r\n  selectedDay: \"Sunday\" | \"Monday\" | \"Tuesday\" | \"Wednesday\" | \"Thursday\" | \"Friday\" | \"Saturday\"\r\n): Date => {\r\n  const dayMap: { [key in typeof selectedDay]: number } = {\r\n    Sunday: 0,\r\n    Monday: 1,\r\n    Tuesday: 2,\r\n    Wednesday: 3,\r\n    Thursday: 4,\r\n    Friday: 5,\r\n    Saturday: 6,\r\n  };\r\n  const selectedDayOfWeek = dayMap[selectedDay];\r\n  const newEndDate = new Date(currentEndDate);\r\n  const daysToAdd = unavailableDates.length;\r\n\r\n  let currentDate = new Date(newEndDate);\r\n  let sessionsAdded = 0;\r\n\r\n  while (sessionsAdded < daysToAdd) {\r\n    currentDate.setDate(currentDate.getDate() + 1);\r\n    if (currentDate.getDay() === selectedDayOfWeek) {\r\n      sessionsAdded++;\r\n    }\r\n  }\r\n\r\n  return currentDate;\r\n};"]}