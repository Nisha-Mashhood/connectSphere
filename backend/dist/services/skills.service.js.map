{"version":3,"file":"skills.service.js","sourceRoot":"","sources":["../../src/services/skills.service.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,SAAS,MAAM,qCAAqC,CAAC;AACjE,OAAO,EAAE,WAAW,EAAE,MAAM,8BAA8B,CAAC;AAE3D,MAAM,CAAC,MAAM,WAAW,GAAG,KAAK,EAAE,IAA6B,EAAE,SAAkB,EAAE,EAAE;IACnF,IAAI,QAAQ,GAAG,IAAI,CAAC;IACpB,IAAI,SAAS,EAAE,CAAC;QACd,MAAM,MAAM,GAAG,OAAO,CAAC;QACvB,QAAQ,GAAG,MAAM,WAAW,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;IAClD,CAAC;IACD,OAAO,MAAM,SAAS,CAAC,WAAW,CAAC,EAAE,GAAG,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;AAC5D,CAAC,CAAC;AAEJ,MAAM,CAAC,MAAM,YAAY,GAAG,KAAK,EAAE,aAAoB,EAAE,EAAE;IACzD,OAAO,MAAM,SAAS,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;AACrD,CAAC,CAAC;AAGF,MAAM,CAAC,MAAM,YAAY,GAAG,SAAS,CAAC,YAAY,CAAC;AAEnD,MAAM,CAAC,MAAM,WAAW,GAAG,KAAK,EAAE,EAAU,EAAE,IAA6B,EAAE,SAAkB,EAAE,EAAE;IAC/F,IAAI,QAAQ,GAAG,IAAI,CAAC;IACpB,IAAI,SAAS,EAAE,CAAC;QACd,MAAM,MAAM,GAAG,OAAO,CAAC;QACvB,QAAQ,GAAG,MAAM,WAAW,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;IAClD,CAAC;IACD,OAAO,MAAM,SAAS,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,EAAE,GAAG,CAAC,QAAQ,IAAI,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;AACrF,CAAC,CAAC;AACJ,MAAM,CAAC,MAAM,WAAW,GAAG,SAAS,CAAC,WAAW,CAAC","sourcesContent":["import { SkillInterface } from \"src/models/skills.model.js\";\r\nimport * as SkillRepo from \"../repositories/skills.repositry.js\";\r\nimport { uploadImage } from \"../utils/cloudinary.utils.js\";\r\n\r\nexport const createSkill = async (data: Partial<SkillInterface>, imagePath?: string) => {\r\n    let imageUrl = null;\r\n    if (imagePath) {\r\n      const folder = \"skill\";\r\n      imageUrl = await uploadImage(imagePath, folder);\r\n    }\r\n    return await SkillRepo.createSkill({ ...data, imageUrl });\r\n  };\r\n\r\nexport const getAllSkills = async (subcategoryId:string) => {\r\n  return await SkillRepo.getAllSkills(subcategoryId);\r\n};\r\n\r\n\r\nexport const getSkillById = SkillRepo.getSkillById;\r\n\r\nexport const updateSkill = async (id: string, data: Partial<SkillInterface>, imagePath?: string) => {\r\n    let imageUrl = null;\r\n    if (imagePath) {\r\n      const folder = \"skill\";\r\n      imageUrl = await uploadImage(imagePath, folder);\r\n    }\r\n    return await SkillRepo.updateSkill(id, { ...data, ...(imageUrl && { imageUrl }) });\r\n  };\r\nexport const deleteSkill = SkillRepo.deleteSkill;\r\n"]}