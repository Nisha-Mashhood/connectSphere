{"version":3,"file":"mentor.service.js","sourceRoot":"","sources":["../../src/services/mentor.service.ts"],"names":[],"mappings":"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","sourcesContent":["import * as MentorRepository from \"../repositories/mentor.repositry.js\";\r\nimport { sendEmail } from \"../utils/email.utils.js\";\r\nimport { IMentor } from \"../models/mentor.model.js\";\r\n\r\n\r\n// Function to submit a mentor request (for admin review)\r\nexport const submitMentorRequest = async (mentorData: {\r\n  userId: string;\r\n  skills: string[];\r\n  specialization: string;\r\n  availableSlots: string[];\r\n  certifications: string[];\r\n}) => {\r\n  try {\r\n    // Save mentor data (pending admin approval)\r\n    const newMentor = await MentorRepository.saveMentorRequest(mentorData);\r\n    return newMentor; \r\n  } catch (error:any) {\r\n    throw new Error(\"Error saving mentor request: \" + error.message);\r\n  }\r\n};\r\n\r\n// Get all mentor requests\r\nexport const getAllMentorRequests = async () => {\r\n  try {\r\n    return await MentorRepository.getAllMentorRequests();\r\n  } catch (error: any) {\r\n    throw new Error(\"Error fetching mentor requests: \" + error.message);\r\n  }\r\n};\r\n\r\n// Approve a mentor request\r\nexport const approveMentorRequest = async (id: string) => {\r\n  try {\r\n    //await MentorRepository.approveMentorRequest(id);\r\n\r\n    // Fetch mentor data to send email\r\n    const mentor = await MentorRepository.getMentorByUserId(id);\r\n\r\n    if (!mentor) {\r\n      throw new Error(\"Mentor not found.\");\r\n    }\r\n\r\n    if (typeof mentor.userId === \"string\") {\r\n      throw new Error(\"User details are not populated.\");\r\n    }\r\n\r\n    if (mentor) {\r\n      const userEmail = mentor.userId.email;\r\n      const userName = mentor.userId.name;\r\n      await sendEmail(\r\n        userEmail,\r\n        \"Mentor Request Approved\",\r\n        `Hello ${userName},\\n\\nCongratulations! Your mentor request has been approved.\\n\\nBest regards,\\nAdmin`\r\n      );\r\n    }\r\n  } catch (error: any) {\r\n    throw new Error(\"Error approving mentor request: \" + error.message);\r\n  }\r\n};\r\n\r\n// Reject a mentor request\r\nexport const rejectMentorRequest = async (id: string, reason: string) => {\r\n  try {\r\n    await MentorRepository.rejectMentorRequest(id);\r\n\r\n    // Fetch mentor data to send email\r\n    const mentor = await MentorRepository.getMentorByUserId(id);\r\n    console.log(mentor)\r\n    console.log(reason);\r\n    // if (mentor) {\r\n    //   const { userId } = mentor;\r\n    //   if (userId?.email) {\r\n    //     await sendEmail(\r\n    //       userId.email,\r\n    //       \"Mentor Request Rejected\",\r\n    //       `Hello ${userId.name},\\n\\nWe regret to inform you that your mentor request has been rejected.\\nReason: ${reason}\\n\\nBest regards,\\nAdmin`\r\n    //     );\r\n    //   }\r\n    // }\r\n  } catch (error: any) {\r\n    throw new Error(\"Error rejecting mentor request: \" + error.message);\r\n  }\r\n};\r\n\r\n// Get mentor details by userId\r\nexport const getMentorByUserId = async (userId: string) => {\r\n  try {\r\n    return await MentorRepository.getMentorByUserId(userId);\r\n  } catch (error: any) {\r\n    throw new Error(\"Error fetching mentor details: \" + error.message);\r\n  }\r\n};\r\n\r\n// Update mentor details by mentorId\r\nexport const updateMentorById = async (mentorId: string, updateData: Partial<IMentor>) => {\r\n  try {\r\n    return await MentorRepository.updateMentorById(mentorId, updateData);\r\n  } catch (error: any) {\r\n    throw new Error(\"Error updating mentor details: \" + error.message);\r\n  }\r\n};\r\n\r\n// Get available skills\r\nexport const getSkills = async () => {\r\n  try {\r\n    return await MentorRepository.getSkills();\r\n  } catch (error: any) {\r\n    throw new Error(\"Error fetching skills: \" + error.message);\r\n  }\r\n};"]}