<<<<<<< HEAD
{"version":3,"file":"contact.service.js","sourceRoot":"","sources":["../../src/services/contact.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { findContactsByUserId, PopulatedContact } from \"../repositories/contacts.repository.js\";\r\n\r\ninterface FormattedContact {\r\n  _id: string;\r\n  contactId: string;\r\n  userId: string;\r\n  targetId: string;\r\n  type: \"user-mentor\" | \"user-user\" | \"group\";\r\n  targetName: string;\r\n  targetProfilePic: string;\r\n  targetJobTitle?: string;\r\n  collaborationId?: string;\r\n  collaborationDetails?: {\r\n    startDate: Date;\r\n    endDate?: Date;\r\n    price: number;\r\n    selectedSlot: { day: string; timeSlots: string[] }[];\r\n    mentorName: string;\r\n    mentorProfilePic: string;\r\n    mentorJobTitle?: string;\r\n    userName: string;\r\n    userProfilePic: string;\r\n    userJobTitle?: string;\r\n  };\r\n  userConnectionId?: string;\r\n  connectionDetails?: {\r\n    requestAcceptedAt?: Date;\r\n    requesterName: string;\r\n    requesterProfilePic: string;\r\n    requesterJobTitle?: string;\r\n    recipientName: string;\r\n    recipientProfilePic: string;\r\n    recipientJobTitle?: string;\r\n  };\r\n  groupId?: string;\r\n  groupDetails?: {\r\n    startDate: Date;\r\n    adminName: string;\r\n    adminProfilePic: string;\r\n    members: { name: string; profilePic: string; joinedAt: Date }[];\r\n  };\r\n}\r\n\r\nexport const getUserContactsService = async (userId: string): Promise<FormattedContact[]> => {\r\n  try {\r\n    const contacts = await findContactsByUserId(userId);\r\n\r\n    const formattedContacts = contacts.map((contact: PopulatedContact) => {\r\n      let targetId = \"\";\r\n      let targetName = \"Unknown\";\r\n      let targetProfilePic = \"\";\r\n      let targetJobTitle: string | undefined;\r\n      let collaborationId: string | undefined;\r\n      let collaborationDetails: FormattedContact[\"collaborationDetails\"];\r\n      let userConnectionId: string | undefined;\r\n      let connectionDetails: FormattedContact[\"connectionDetails\"];\r\n      let groupId: string | undefined;\r\n      let groupDetails: FormattedContact[\"groupDetails\"];\r\n\r\n      const contactUserId = contact.userId._id.toString();\r\n      const contactTargetId = contact.targetUserId?._id.toString();\r\n\r\n      if (contact.type === \"user-mentor\" && contact.collaborationId) {\r\n        if (contactUserId === userId && contactTargetId) {\r\n          // Current user is the userId \r\n          targetId = contactTargetId;\r\n          targetName = contact.targetUserId?.name || \"Unknown\";\r\n          targetProfilePic = contact.targetUserId?.profilePic || \"\";\r\n          targetJobTitle = contact.targetUserId?.jobTitle;\r\n        } else if (contactTargetId === userId && contactUserId) {\r\n          // Current user is the targetUserId \r\n          targetId = contactUserId;\r\n          targetName = contact.userId?.name || \"Unknown\";\r\n          targetProfilePic = contact.userId?.profilePic || \"\";\r\n          targetJobTitle = contact.userId?.jobTitle;\r\n        }\r\n        collaborationId = contact.collaborationId._id.toString();\r\n        collaborationDetails = {\r\n          startDate: contact.collaborationId.startDate,\r\n          endDate: contact.collaborationId.endDate,\r\n          price: contact.collaborationId.price,\r\n          selectedSlot: contact.collaborationId.selectedSlot,\r\n          mentorName: contact.collaborationId.mentorId.userId.name || \"Unknown\",\r\n          mentorProfilePic: contact.collaborationId.mentorId.userId.profilePic || \"\",\r\n          mentorJobTitle: contact.collaborationId.mentorId.userId.jobTitle,\r\n          userName: contact.collaborationId.userId.name || \"Unknown\",\r\n          userProfilePic: contact.collaborationId.userId.profilePic || \"\",\r\n          userJobTitle: contact.collaborationId.userId.jobTitle,\r\n        };\r\n      } else if (contact.type === \"user-user\" && contact.userConnectionId) {\r\n        const connection = contact.userConnectionId;\r\n        const otherUser =\r\n          connection.requester._id.toString() === userId ? connection.recipient : connection.requester;\r\n        targetId = otherUser._id.toString();\r\n        targetName = otherUser.name || \"Unknown\";\r\n        targetProfilePic = otherUser.profilePic || \"\";\r\n        targetJobTitle = otherUser.jobTitle;\r\n        userConnectionId = connection._id.toString();\r\n        connectionDetails = {\r\n          requestAcceptedAt: connection.requestAcceptedAt,\r\n          requesterName: connection.requester.name || \"Unknown\",\r\n          requesterProfilePic: connection.requester.profilePic || \"\",\r\n          requesterJobTitle: connection.requester.jobTitle,\r\n          recipientName: connection.recipient.name || \"Unknown\",\r\n          recipientProfilePic: connection.recipient.profilePic || \"\",\r\n          recipientJobTitle: connection.recipient.jobTitle,\r\n        };\r\n      } else if (contact.type === \"group\" && contact.groupId) {\r\n        const group = contact.groupId;\r\n        targetId = group._id.toString();\r\n        targetName = group.name || \"Unknown\";\r\n        targetProfilePic = group.profilePic || \"\";\r\n        groupId = group._id.toString();\r\n        groupDetails = {\r\n          startDate: group.startDate,\r\n          adminName: group.adminId?.name || \"Unknown\",\r\n          adminProfilePic: group.adminId?.profilePic || \"\",\r\n          members: group.members.map((member) => ({\r\n            name: member.userId.name || \"Unknown\",\r\n            profilePic: member.userId.profilePic || \"\",\r\n            joinedAt: member.joinedAt,\r\n          })),\r\n        };\r\n      }\r\n\r\n      return {\r\n        _id: contact._id.toString(),\r\n        contactId: contact.contactId,\r\n        userId: contactUserId,\r\n        targetId,\r\n        type: contact.type,\r\n        targetName,\r\n        targetProfilePic,\r\n        targetJobTitle,\r\n        collaborationId,\r\n        collaborationDetails,\r\n        userConnectionId,\r\n        connectionDetails,\r\n        groupId,\r\n        groupDetails,\r\n      };\r\n    });\r\n\r\n    const validContacts = formattedContacts.filter(\r\n      (contact) =>\r\n        contact.userId === userId && \r\n        contact.userId !== contact.targetId &&\r\n        contact.targetId !== \"\"\r\n    );\r\n\r\n    console.log(\"Formatted contacts: \", formattedContacts);\r\n    console.log(\"Valid contacts: \", validContacts);\r\n\r\n    return validContacts;\r\n  } catch (error: any) {\r\n    console.log(\"Error in contact service file:\", error);\r\n    throw new Error(`Service error fetching contacts: ${error.message}`);\r\n  }\r\n};"]}
=======
{"version":3,"file":"contact.service.js","sourceRoot":"","sources":["../../src/services/contact.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { findContactsByUserId, PopulatedContact } from \"../repositories/contacts.repository.js\";\r\n\r\ninterface FormattedContact {\r\n  _id: string;\r\n  contactId: string;\r\n  userId: string;\r\n  targetId: string;\r\n  type: \"user-mentor\" | \"user-user\" | \"group\";\r\n  targetName: string;\r\n  targetProfilePic: string;\r\n  collaborationId?: string; // Add for user-mentor\r\n  userConnectionId?: string; // Add for user-user\r\n  groupId?: string; // Add for group\r\n}\r\n\r\nexport const getUserContactsService = async (userId: string): Promise<FormattedContact[]> => {\r\n  try {\r\n    const contacts = await findContactsByUserId(userId);\r\n\r\n    const formattedContacts = contacts.map((contact: PopulatedContact) => {\r\n      let targetId = \"\";\r\n      let targetName = \"Unknown\";\r\n      let targetProfilePic = \"\";\r\n      let collaborationId: string | undefined;\r\n      let userConnectionId: string | undefined;\r\n      let groupId: string | undefined;\r\n\r\n      const contactUserId = contact.userId._id.toString();\r\n      const contactTargetId = contact.targetUserId?._id.toString();\r\n\r\n      if (contact.type === \"user-mentor\" && contact.collaborationId) {\r\n        // Prioritize contacts where the current user is the userId\r\n        if (contactUserId === userId && contactTargetId) {\r\n          targetId = contactTargetId;\r\n          targetName = contact.targetUserId?.name || \"Unknown\";\r\n          targetProfilePic = contact.targetUserId?.profilePic || \"\";\r\n        } \r\n        // Fallback to contacts where the current user is the targetUserId\r\n        else if (contactTargetId === userId && contactUserId) {\r\n          targetId = contactUserId;\r\n          targetName = contact.userId?.name || \"Unknown\";\r\n          targetProfilePic = contact.userId?.profilePic || \"\";\r\n        }\r\n        collaborationId = contact.collaborationId._id.toString();\r\n      } else if (contact.type === \"user-user\" && contact.userConnectionId) {\r\n        const connection = contact.userConnectionId;\r\n        const otherUser =\r\n          connection.requester._id.toString() === userId ? connection.recipient : connection.requester;\r\n        targetId = otherUser._id.toString();\r\n        targetName = otherUser.name || \"Unknown\";\r\n        targetProfilePic = otherUser.profilePic || \"\";\r\n        userConnectionId = connection._id.toString();\r\n      } else if (contact.type === \"group\" && contact.groupId) {\r\n        const group = contact.groupId;\r\n        targetId = group._id.toString();\r\n        targetName = group.name || \"Unknown\";\r\n        targetProfilePic = group.profilePic || \"\";\r\n        groupId = group._id.toString();\r\n      }\r\n\r\n      return {\r\n        _id: contact._id.toString(),\r\n        contactId: contact.contactId,\r\n        userId: contactUserId,\r\n        targetId,\r\n        type: contact.type,\r\n        targetName,\r\n        targetProfilePic,\r\n        collaborationId,\r\n        userConnectionId,\r\n        groupId,\r\n      };\r\n    });\r\n\r\n    const validContacts = formattedContacts.filter(\r\n      contact => \r\n        contact.userId === userId && // Ensure the current user is the userId\r\n        contact.userId !== contact.targetId && \r\n        contact.targetId !== \"\"\r\n    );\r\n\r\n    console.log(\"Formatted contact: \", formattedContacts);\r\n    console.log(\"Valid contacts: \", validContacts);\r\n\r\n    return validContacts;\r\n  } catch (error: any) {\r\n    console.log(\"Error in contact service file:\", error);\r\n    throw new Error(`Service error fetching contacts: ${error.message}`);\r\n  }\r\n};"]}
>>>>>>> 6dc4153e54462faf8ee2145cbaee39113d0c24cd
