<<<<<<< HEAD
{"version":3,"file":"socket.js","sourceRoot":"","sources":["../../src/socket/socket.ts"],"names":[],"mappings":"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","sourcesContent":["import { Server, Socket } from \"socket.io\";\r\nimport { findContactByUsers, findContactsByUserId } from \"../repositories/contacts.repository.js\";\r\nimport { getGroupsByGroupId, isUserInGroup } from \"../repositories/group.repositry.js\";\r\nimport { saveChatMessage } from \"../repositories/chat.repository.js\";\r\nimport mongoose from \"mongoose\";\r\n\r\nconst initializeSocket = (io: Server) => {\r\n  console.log(\"Socket.IO server initialized\");\r\n  io.on(\"connection\", (socket: Socket) => {\r\n    socket.on(\"joinChats\", async (userId: string) => {\r\n      try {\r\n        const contacts = await findContactsByUserId(userId);\r\n        const rooms = Array.from(\r\n          new Set(\r\n            contacts.map((contact) => {\r\n              if (contact.type === \"group\" && contact.groupId) {\r\n                return `group_${contact.groupId._id.toString()}`;\r\n              } else if (contact.userId && contact.targetUserId) {\r\n                const ids = [contact.userId._id.toString(), contact.targetUserId._id.toString()].sort();\r\n                return `chat_${ids[0]}_${ids[1]}`;\r\n              }\r\n              return null;\r\n            }).filter(Boolean)\r\n          )\r\n        ) as string[];\r\n\r\n        socket.join(rooms);\r\n        console.log(`User ${userId} joined rooms:`, rooms);\r\n      } catch (error: any) {\r\n        console.error(`Error joining chats for user ${userId}:`, error.message);\r\n      }\r\n    });\r\n\r\n    socket.on(\"sendMessage\", async (message: {\r\n      senderId: string;\r\n      targetId: string;\r\n      type: string;\r\n      content: string;\r\n      contentType?: string;\r\n      collaborationId?: string;\r\n      userConnectionId?: string;\r\n      groupId?: string;\r\n      _id?: string;\r\n      thumbnailUrl?: string;\r\n      fileMetadata?: { fileName: string; fileSize: number; mimeType: string };\r\n    }) => {\r\n      try {\r\n        console.log(\"Received sendMessage event:\", message);\r\n        const { senderId, targetId, type, content, contentType = \"text\", collaborationId, userConnectionId, groupId, _id } = message;\r\n\r\n        if (!senderId || !targetId || !type || !content) {\r\n          console.error(\"Missing required fields in message:\", message);\r\n          socket.emit(\"error\", { message: \"Missing required fields\" });\r\n          return;\r\n        }\r\n\r\n        const timestamp = new Date();\r\n        const timestampString = timestamp.toISOString();\r\n        let room: string;\r\n        let savedMessage;\r\n\r\n        const senderObjectId = new mongoose.Types.ObjectId(senderId);\r\n\r\n        if (contentType === \"text\") { // Only save text messages \r\n          if (type === \"group\") {\r\n            const group = await getGroupsByGroupId(targetId);\r\n            if (!group) {\r\n              console.error(\"Invalid group ID:\", targetId);\r\n              socket.emit(\"error\", { message: \"Invalid group ID\" });\r\n              return;\r\n            }\r\n            const isMember = await isUserInGroup(targetId, senderId);\r\n            if (!isMember) {\r\n              console.error(\"Sender not in group:\", senderId, targetId);\r\n              socket.emit(\"error\", { message: \"Sender not in group\" });\r\n              return;\r\n            }\r\n            room = `group_${targetId}`;\r\n            savedMessage = await saveChatMessage({\r\n              senderId: senderObjectId,\r\n              groupId: new mongoose.Types.ObjectId(groupId || targetId),\r\n              content,\r\n              contentType,\r\n              timestamp,\r\n            });\r\n          } else {\r\n            const contact = await findContactByUsers(senderId, targetId);\r\n            if (!contact || !contact._id) {\r\n              console.error(\"Invalid contact for sender:\", senderId, \"target:\", targetId);\r\n              socket.emit(\"error\", { message: \"Invalid contact\" });\r\n              return;\r\n            }\r\n            const ids = [contact.userId.toString(), contact.targetUserId?.toString()].sort();\r\n            room = `chat_${ids[0]}_${ids[1]}`;\r\n            savedMessage = await saveChatMessage({\r\n              senderId: senderObjectId,\r\n              ...(type === \"user-mentor\" && { collaborationId: new mongoose.Types.ObjectId(collaborationId || contact.collaborationId?.toString()) }),\r\n              ...(type === \"user-user\" && { userConnectionId: new mongoose.Types.ObjectId(userConnectionId || contact.userConnectionId?.toString()) }),\r\n              content,\r\n              contentType,\r\n              timestamp,\r\n            });\r\n          }\r\n        } else {\r\n          // For media, use the existing message from upload\r\n          savedMessage = { _id: _id || new mongoose.Types.ObjectId(), ...message, timestamp };\r\n          if (type === \"group\") {\r\n            room = `group_${targetId}`;\r\n          } else {\r\n            const contact = await findContactByUsers(senderId, targetId);\r\n            const ids = [contact?.userId.toString(), contact?.targetUserId?.toString()].sort();\r\n            room = `chat_${ids[0]}_${ids[1]}`;\r\n          }\r\n        }\r\n\r\n        if (!savedMessage) {\r\n          console.error(\"Failed to save message:\", message);\r\n          socket.emit(\"error\", { message: \"Failed to save message\" });\r\n          return;\r\n        }\r\n\r\n        const messageData = {\r\n          senderId,\r\n          targetId,\r\n          type,\r\n          content,\r\n          contentType,\r\n          thumbnailUrl: savedMessage.thumbnailUrl,\r\n          fileMetadata: savedMessage.fileMetadata,\r\n          ...(type === \"group\" && { groupId: groupId || targetId }),\r\n          ...(type === \"user-mentor\" && { collaborationId: collaborationId || savedMessage?.collaborationId?.toString() }),\r\n          ...(type === \"user-user\" && { userConnectionId: userConnectionId || savedMessage?.userConnectionId?.toString() }),\r\n          timestamp: timestampString,\r\n          _id: savedMessage._id,\r\n        };\r\n\r\n        socket.broadcast.to(room).emit(\"receiveMessage\", messageData);\r\n        socket.emit(\"messageSaved\", messageData);\r\n        console.log(`Message broadcasted to room ${room}:`, messageData);\r\n      } catch (error: any) {\r\n        console.error(\"Error sending message:\", error.message);\r\n        socket.emit(\"error\", { message: \"Failed to send message\" });\r\n      }\r\n    });\r\n\r\n    socket.on(\"disconnect\", () => {\r\n      console.log(`User disconnected: ${socket.id}`);\r\n    });\r\n  });\r\n};\r\n\r\nexport default initializeSocket;"]}
=======
{"version":3,"file":"socket.js","sourceRoot":"","sources":["../../src/socket/socket.ts"],"names":[],"mappings":"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","sourcesContent":["import { Server, Socket } from \"socket.io\";\r\nimport { findContactByUsers, findContactsByUserId } from \"../repositories/contacts.repository.js\";\r\nimport { getGroupsByGroupId, isUserInGroup } from \"../repositories/group.repositry.js\";\r\nimport { saveChatMessage } from \"../repositories/chat.repository.js\";\r\nimport mongoose from \"mongoose\";\r\n\r\nconst initializeSocket = (io: Server) => {\r\n  console.log(\"Socket.IO server initialized\");\r\n  io.on(\"connection\", (socket: Socket) => {\r\n    socket.on(\"joinChats\", async (userId: string) => {\r\n      try {\r\n        const contacts = await findContactsByUserId(userId);\r\n        const rooms = Array.from(\r\n          new Set(\r\n            contacts.map((contact) => {\r\n              if (contact.type === \"group\" && contact.groupId) {\r\n                return `group_${contact.groupId._id.toString()}`;\r\n              } else if (contact.userId && contact.targetUserId) {\r\n                const ids = [contact.userId._id.toString(), contact.targetUserId._id.toString()].sort();\r\n                return `chat_${ids[0]}_${ids[1]}`;\r\n              }\r\n              return null;\r\n            }).filter(Boolean)\r\n          )\r\n        ) as string[];\r\n\r\n        socket.join(rooms);\r\n        console.log(`User ${userId} joined rooms:`, rooms);\r\n      } catch (error: any) {\r\n        console.error(`Error joining chats for user ${userId}:`, error.message);\r\n      }\r\n    });\r\n\r\n    socket.on(\"sendMessage\", async (message: { \r\n      senderId: string; \r\n      targetId: string; \r\n      type: string; \r\n      content: string; \r\n      contentType?: string; \r\n      collaborationId?: string; \r\n      userConnectionId?: string; \r\n      groupId?: string ;\r\n      _id?: string;\r\n    }) => {\r\n      try {\r\n        console.log(\"Received sendMessage event:\", message);\r\n        const { senderId, targetId, type, content, contentType = \"text\", collaborationId, userConnectionId, groupId, _id } = message;\r\n\r\n        if (!senderId || !targetId || !type || !content) {\r\n          console.error(\"Missing required fields in message:\", message);\r\n          socket.emit(\"error\", { message: \"Missing required fields\" });\r\n          return;\r\n        }\r\n\r\n        const timestamp = new Date();\r\n        const timestampString = timestamp.toISOString();\r\n        let room: string;\r\n        let savedMessage;\r\n\r\n        const senderObjectId = new mongoose.Types.ObjectId(senderId);\r\n        const validContentType = contentType === \"image\" || contentType === \"file\" ? contentType : \"text\";\r\n\r\n        if (type === \"group\") {\r\n          const group = await getGroupsByGroupId(targetId);\r\n          console.log(\"Group fetched:\", group);\r\n          if (!group) {\r\n            console.error(\"Invalid group ID:\", targetId);\r\n            socket.emit(\"error\", { message: \"Invalid group ID\" });\r\n            return;\r\n          }\r\n          const isMember = await isUserInGroup(targetId, senderId);\r\n          if (!isMember) {\r\n            console.error(\"Sender not in group:\", senderId, targetId);\r\n            socket.emit(\"error\", { message: \"Sender not in group\" });\r\n            return;\r\n          }\r\n          room = `group_${targetId}`;\r\n          if (validContentType === \"text\") { // Save only text messages\r\n            savedMessage = await saveChatMessage({\r\n              senderId: senderObjectId,\r\n              groupId: new mongoose.Types.ObjectId(groupId || targetId),\r\n              content,\r\n              contentType: validContentType as \"text\" | \"image\" | \"file\",\r\n              timestamp,\r\n            });\r\n          } else {\r\n            savedMessage = { _id: _id || new mongoose.Types.ObjectId(), ...message, timestamp }; // Use existing _id for media\r\n          }\r\n        } else {\r\n          const contact = await findContactByUsers(senderId, targetId);\r\n          console.log(\"Contact fetched:\", contact);\r\n          if (!contact || !contact._id) {\r\n            console.error(\"Invalid contact for sender:\", senderId, \"target:\", targetId);\r\n            socket.emit(\"error\", { message: \"Invalid contact\" });\r\n            return;\r\n          }\r\n          const ids = [contact.userId.toString(), contact.targetUserId?.toString()].sort();\r\n          room = `chat_${ids[0]}_${ids[1]}`;\r\n          if (validContentType === \"text\") { // Save only text messages\r\n            savedMessage = await saveChatMessage({\r\n              senderId: senderObjectId,\r\n              ...(type === \"user-mentor\" && { collaborationId: new mongoose.Types.ObjectId(collaborationId || contact.collaborationId?.toString()) }),\r\n              ...(type === \"user-user\" && { userConnectionId: new mongoose.Types.ObjectId(userConnectionId || contact.userConnectionId?.toString()) }),\r\n              content,\r\n              contentType: validContentType as \"text\" | \"image\" | \"file\",\r\n              timestamp,\r\n            });\r\n          } else {\r\n            savedMessage = { _id: _id || new mongoose.Types.ObjectId(), ...message, timestamp }; // Use existing _id for media\r\n          }\r\n        }\r\n\r\n        if (!savedMessage) {\r\n          console.error(\"Failed to save message:\", message);\r\n          socket.emit(\"error\", { message: \"Failed to save message\" });\r\n          return;\r\n        }\r\n\r\n        const messageData = {\r\n          senderId,\r\n          targetId,\r\n          type,\r\n          content,\r\n          contentType: validContentType,\r\n          ...(type === \"group\" && { groupId: groupId || targetId }),\r\n          ...(type === \"user-mentor\" && { collaborationId: collaborationId || savedMessage?.collaborationId?.toString() }),\r\n          ...(type === \"user-user\" && { userConnectionId: userConnectionId || savedMessage?.userConnectionId?.toString() }),\r\n          timestamp: timestampString,\r\n          _id: savedMessage?._id,\r\n        };\r\n\r\n        socket.broadcast.to(room).emit(\"receiveMessage\", messageData);\r\n        socket.emit(\"messageSaved\", messageData);\r\n        console.log(`Message broadcasted to room ${room}:`, messageData);\r\n      } catch (error: any) {\r\n        console.error(\"Error sending message:\", error.message);\r\n        socket.emit(\"error\", { message: \"Failed to send message\" });\r\n      }\r\n    });\r\n\r\n    socket.on(\"disconnect\", () => {\r\n      console.log(`User disconnected: ${socket.id}`);\r\n    });\r\n  });\r\n};\r\n\r\nexport default initializeSocket;"]}
>>>>>>> 6dc4153e54462faf8ee2145cbaee39113d0c24cd
