{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import express from \"express\";\r\nimport dotenv from \"dotenv\";\r\nimport connectDB from \"./config/db.config.js\";\r\nimport config from \"./config/env.config.js\";\r\nimport authRoutes from \"./routes/auth.routes.js\";\r\nimport categoryRoutes from \"./routes/category.routes.js\";\r\nimport subCategoryRoutes from \"./routes/sucategory.routes.js\";\r\nimport skillsRoutes from \"./routes/skills.routes.js\";\r\nimport userRoutes from \"./routes/user.routes.js\";\r\nimport mentorRoutes from \"./routes/mentor.routes.js\";\r\nimport collaborationRoutes from \"./routes/collaboration.routes.js\";\r\nimport groupRoutes from \"./routes/group.routes.js\";\r\nimport feedbackRoutes from './routes/feedback.routes.js';\r\nimport user_userCollabRoutes from './routes/userCollaboration.routes.js';\r\nimport taskRoutes from './routes/tasks.routes.js';\r\nimport helmet from \"helmet\";\r\nimport cors from \"cors\";\r\nimport cookieParser from \"cookie-parser\";\r\n\r\ndotenv.config();\r\n\r\nconst app = express();\r\n\r\n// Connect to DB\r\nconnectDB();\r\n\r\n// Middleware\r\napp.use(express.json());\r\napp.use(cookieParser());\r\napp.use(helmet());\r\napp.use(cors({\r\n  origin: process.env.FRONTEND_URL || \"http://localhost:5173\",\r\n  credentials:true\r\n}))\r\n\r\n\r\n// Routes\r\napp.use(\"/api/auth\", authRoutes);\r\n\r\napp.use(\"/api/category\", categoryRoutes);\r\napp.use(\"/api/subcategory\", subCategoryRoutes);\r\napp.use(\"/api/skills\", skillsRoutes);\r\napp.use(\"/api/users\", userRoutes);\r\napp.use(\"/api/mentors\", mentorRoutes);\r\napp.use(\"/api/collaboration\",collaborationRoutes);\r\napp.use(\"/api/group\", groupRoutes);\r\napp.use(\"/api/feedback\", feedbackRoutes);\r\napp.use(\"/api/user-userCollab\",user_userCollabRoutes);\r\napp.use(\"/api/task\", taskRoutes)\r\n\r\n// Placeholder route\r\napp.get(\"/\", (_req, res) => {\r\n  res.send(\"Connect Sphere Backend is running!\");\r\n});\r\n\r\n// Error Handling Middleware (for unhandled errors)\r\napp.use((err: any, _req: any, res: any, _next: any) => {\r\n  console.error(err.stack);\r\n  res.status(500).send({ error: \"Something went wrong!\" });\r\n});\r\n\r\n// Start server\r\napp.listen(config.port, () => {\r\n  console.log(`Server is running on http://localhost:${config.port}`);\r\n});\r\n"]}