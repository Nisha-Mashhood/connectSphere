{"version":3,"file":"multer.utils.js","sourceRoot":"","sources":["../../src/utils/multer.utils.ts"],"names":[],"mappings":"AAAA,+BAA+B;AAC/B,2BAA2B;;AAE3B,+BAA+B;AAC/B,uCAAuC;AACvC,wCAAwC;AACxC,wDAAwD;AACxD,OAAO;AACP,oCAAoC;AACpC,uFAAuF;AACvF,OAAO;AACP,MAAM;AAEN,0BAA0B;AAC1B,0DAA0D;AAC1D,+BAA+B;AAC/B,oBAAoB;AACpB,mBAAmB;AACnB,mBAAmB;AACnB,mBAAmB;AACnB,yBAAyB;AACzB,oCAAoC;AACpC,yFAAyF;AACzF,OAAO;AAEP,+DAA+D;AAC/D,mDAAmD;AACnD,iFAAiF;AACjF,OAAO;AAEP,+BAA+B;AAC/B,sBAAsB;AACtB,aAAa;AACb,qGAAqG;AACrG,MAAM;AACN,KAAK;AAEL,0BAA0B;AAC1B,iCAAiC;AACjC,aAAa;AACb,gBAAgB;AAChB,4CAA4C;AAC5C,MAAM","sourcesContent":["// import multer from \"multer\";\r\n// import path from \"path\";\r\n\r\n// // Define storage for multer\r\n// const storage = multer.diskStorage({\r\n//   destination: (_req, _file, cb) => {\r\n//     cb(null, \"uploads/\"); // Temporary storage folder\r\n//   },\r\n//   filename: (_req, file, cb) => {\r\n//     cb(null, `${Date.now()}-${file.originalname}`); // Append timestamp to file name\r\n//   },\r\n// });\r\n\r\n// // File type validation\r\n// const fileFilter = (_req: any, file: any, cb: any) => {\r\n//   const allowedFileTypes = [\r\n//     \"image/jpeg\",\r\n//     \"image/jpg\",\r\n//     \"image/png\",\r\n//     \"video/mp4\",\r\n//     \"application/pdf\",\r\n//     \"application/msword\", // .doc\r\n//     \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\", // DOCX\r\n//   ];\r\n\r\n//   const mimetype = allowedFileTypes.includes(file.mimetype);\r\n//   const extname = allowedFileTypes.some(type => \r\n//     path.extname(file.originalname).toLowerCase() === `.${type.split(\"/\")[1]}`\r\n//   );\r\n\r\n//   if (mimetype && extname) {\r\n//     cb(null, true);\r\n//   } else {\r\n//     cb(new Error(\"Invalid file type. Only JPEG, JPG, PNG, MP4, PDF, DOC, and DOCX are allowed.\"));\r\n//   }\r\n// };\r\n\r\n// // Multer configuration\r\n// export const upload = multer({\r\n//   storage,\r\n//   fileFilter,\r\n//   limits: { fileSize: 50 * 1024 * 1024 },\r\n// });\r\n"]}