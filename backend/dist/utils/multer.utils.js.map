{"version":3,"file":"multer.utils.js","sourceRoot":"","sources":["../../src/utils/multer.utils.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,QAAQ,CAAC;AAC5B,OAAO,IAAI,MAAM,MAAM,CAAC;AAExB,4BAA4B;AAC5B,MAAM,OAAO,GAAG,MAAM,CAAC,WAAW,CAAC;IACjC,WAAW,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE;QAC/B,EAAE,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC,2BAA2B;IACnD,CAAC;IACD,QAAQ,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE;QAC3B,EAAE,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,gCAAgC;IAClF,CAAC;CACF,CAAC,CAAC;AAEH,uBAAuB;AACvB,MAAM,UAAU,GAAG,CAAC,IAAS,EAAE,IAAS,EAAE,EAAO,EAAE,EAAE;IACnD,MAAM,gBAAgB,GAAG;QACvB,YAAY;QACZ,WAAW;QACX,WAAW;QACX,WAAW;QACX,iBAAiB;QACjB,oBAAoB,EAAE,OAAO;QAC7B,yEAAyE,EAAE,OAAO;KACnF,CAAC;IAEF,MAAM,QAAQ,GAAG,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC1D,MAAM,OAAO,GAAG,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAC3C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,WAAW,EAAE,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAC3E,CAAC;IAEF,IAAI,QAAQ,IAAI,OAAO,EAAE,CAAC;QACxB,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACjB,CAAC;SAAM,CAAC;QACN,EAAE,CAAC,IAAI,KAAK,CAAC,8EAA8E,CAAC,CAAC,CAAC;IAChG,CAAC;AACH,CAAC,CAAC;AAEF,uBAAuB;AACvB,MAAM,CAAC,MAAM,MAAM,GAAG,MAAM,CAAC;IAC3B,OAAO;IACP,UAAU;IACV,MAAM,EAAE,EAAE,QAAQ,EAAE,EAAE,GAAG,IAAI,GAAG,IAAI,EAAE;CACvC,CAAC,CAAC","sourcesContent":["import multer from \"multer\";\r\nimport path from \"path\";\r\n\r\n// Define storage for multer\r\nconst storage = multer.diskStorage({\r\n  destination: (_req, _file, cb) => {\r\n    cb(null, \"uploads/\"); // Temporary storage folder\r\n  },\r\n  filename: (_req, file, cb) => {\r\n    cb(null, `${Date.now()}-${file.originalname}`); // Append timestamp to file name\r\n  },\r\n});\r\n\r\n// File type validation\r\nconst fileFilter = (_req: any, file: any, cb: any) => {\r\n  const allowedFileTypes = [\r\n    \"image/jpeg\",\r\n    \"image/jpg\",\r\n    \"image/png\",\r\n    \"video/mp4\",\r\n    \"application/pdf\",\r\n    \"application/msword\", // .doc\r\n    \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\", // DOCX\r\n  ];\r\n\r\n  const mimetype = allowedFileTypes.includes(file.mimetype);\r\n  const extname = allowedFileTypes.some(type => \r\n    path.extname(file.originalname).toLowerCase() === `.${type.split(\"/\")[1]}`\r\n  );\r\n\r\n  if (mimetype && extname) {\r\n    cb(null, true);\r\n  } else {\r\n    cb(new Error(\"Invalid file type. Only JPEG, JPG, PNG, MP4, PDF, DOC, and DOCX are allowed.\"));\r\n  }\r\n};\r\n\r\n// Multer configuration\r\nexport const upload = multer({\r\n  storage,\r\n  fileFilter,\r\n  limits: { fileSize: 50 * 1024 * 1024 },\r\n});\r\n"]}