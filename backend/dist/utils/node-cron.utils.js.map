{"version":3,"file":"node-cron.utils.js","sourceRoot":"","sources":["../../src/utils/node-cron.utils.ts"],"names":[],"mappings":"AAAA,gCAAgC;AAChC,6EAA6E;;AAE7E,0CAA0C;AAC1C,8EAA8E;AAC9E,6CAA6C;AAC7C,kEAAkE;AAClE,YAAY;AACZ,0CAA0C;AAC1C,2CAA2C;AAC3C,+DAA+D;AAE/D,6CAA6C;AAC7C,qGAAqG;AACrG,4FAA4F;AAE5F,8CAA8C;AAC9C,uGAAuG;AACvG,8FAA8F;AAE9F,kEAAkE;AAClE,6BAA6B;AAC7B,oEAAoE;AACpE,QAAQ;AACR,QAAQ;AAER,mDAAmD;AACnD,IAAI","sourcesContent":["// import cron from \"node-cron\";\r\n// import * as CleanupRepository from \"../repositories/cleanUp.repositry.js\";\r\n\r\n// export const scheduleNodeCorn = () => {\r\n//   // Cleanup old GroupRequest and MentorRequest documents daily at midnight\r\n//   cron.schedule(\"0 0 * * *\", async () => {\r\n//     console.log(\"Running daily cleanup task for old requests\");\r\n//     try {\r\n//       // Calculate the date 15 days ago\r\n//       const fifteenDaysAgo = new Date();\r\n//       fifteenDaysAgo.setDate(fifteenDaysAgo.getDate() - 15);\r\n\r\n//       // Delete old GroupRequest documents\r\n//       const deletedGroupRequests = await CleanupRepository.deleteOldGroupRequests(fifteenDaysAgo);\r\n//       console.log(`Cleanup: Deleted ${deletedGroupRequests} old GroupRequest documents`);\r\n\r\n//       // Delete old MentorRequest documents\r\n//       const deletedMentorRequests = await CleanupRepository.deleteOldMentorRequests(fifteenDaysAgo);\r\n//       console.log(`Cleanup: Deleted ${deletedMentorRequests} old MentorRequest documents`);\r\n\r\n//       console.log(\"Daily cleanup task completed successfully\");\r\n//     } catch (error: any) {\r\n//       console.log(`Daily cleanup task failed: ${error.message}`);\r\n//     }\r\n//   });\r\n\r\n//   console.log(\"âœ… Node-cron scheduler started.\");\r\n// }"]}