{"version":3,"file":"jwt.utils.js","sourceRoot":"","sources":["../../src/utils/jwt.utils.ts"],"names":[],"mappings":"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","sourcesContent":["import jwt from \"jsonwebtoken\";\r\nimport config from \"../config/env.config.js\";\r\nimport {\r\n  findUserByEmail,\r\n  removeRefreshToken as removeRefreshTokenRepositry,\r\n} from \"../repositories/user.repositry.js\";\r\nimport { Response } from \"express\";\r\nimport { findAdminByEmail, removeRefreshToken as removeRefreshTokenRepositryAdmin } from \"../repositories/Admin/admin.repositry.js\"\r\n\r\ninterface JwtPayload {\r\n  [key: string]: any;\r\n}\r\n\r\n// Generate JWT Access token (short-lived, 1 hour)\r\nexport const generateAccessToken = (\r\n  payload: JwtPayload,\r\n  expiresIn: string = \"1h\"\r\n) => {\r\n  if (!config.jwtSecret) {\r\n    throw new Error(\"JWT secret is not defined!\");\r\n  }\r\n  // Ensure payload is an object\r\n  if (typeof payload !== \"object\" || payload === null) {\r\n    throw new Error(\"Payload must be a plain object\");\r\n  }\r\n  return jwt.sign(payload, config.jwtSecret, { expiresIn });\r\n};\r\n\r\n// Verify JWT Access token\r\nexport const verifyAccessToken = (token: string): JwtPayload => {\r\n  if (!config.jwtSecret) {\r\n    throw new Error(\"JWT secret is not defined!\");\r\n  }\r\n\r\n  try {\r\n    return jwt.verify(token, config.jwtSecret) as JwtPayload;\r\n  } catch (error) {\r\n    throw new Error(\"Invalid or expired token.\");\r\n  }\r\n};\r\n\r\n// Generate Refresh Token (long-lived, 7 days)\r\nexport const generateRefreshToken = (payload: JwtPayload) => {\r\n  if (!config.jwtSecret) {\r\n    throw new Error(\"JWT secret is not defined!\");\r\n  }\r\n\r\n  if (typeof payload !== \"object\" || payload === null) {\r\n    throw new Error(\"Payload must be a plain object\");\r\n  }\r\n  return jwt.sign(payload, config.jwtSecret, { expiresIn: \"7d\" });\r\n};\r\n\r\n// Verify JWT Refresh Token\r\nexport const verifyRefreshToken = (token: string): JwtPayload => {\r\n  if (!config.jwtSecret) {\r\n    throw new Error(\"JWT secret is not defined!\");\r\n  }\r\n  try {\r\n    return jwt.verify(token, config.jwtSecret) as JwtPayload;\r\n  } catch (error) {\r\n    throw new Error(\"Invalid or expired refresh token.\");\r\n  }\r\n};\r\n\r\n// Set Tokens in Cookies\r\nexport const setTokensInCookies = (\r\n  res: Response,\r\n  accessToken: string,\r\n  refreshToken: string\r\n) => {\r\n  const isProduction = config.node_env === \"production\";\r\n  res.cookie(\"accessToken\", accessToken, {\r\n    httpOnly: true, // Prevent XSS\r\n    secure: isProduction, // Send only over HTTPS in production\r\n    sameSite: \"strict\", // Prevent CSRF\r\n    maxAge: 60 * 60 * 1000, // 1 hour\r\n  });\r\n  res.cookie(\"refreshToken\", refreshToken, {\r\n    httpOnly: true,\r\n    secure: isProduction,\r\n    sameSite: \"strict\",\r\n    maxAge: 7 * 24 * 60 * 60 * 1000, // 7 days\r\n  });\r\n};\r\n\r\n// Clear Cookies\r\nexport const clearCookies = (res: Response) => {\r\n  res.clearCookie(\"accessToken\", { httpOnly: true, sameSite: \"strict\" });\r\n  res.clearCookie(\"refreshToken\", { httpOnly: true, sameSite: \"strict\" });\r\n};\r\n\r\n// Function to handle token removal during logout\r\nexport const removeRefreshToken = async (useremail: string) => {\r\n  try {\r\n    // Find the user by their ID\r\n    const user = await findUserByEmail(useremail);\r\n    if (!user) {\r\n      throw new Error(\"User not found\");\r\n    }\r\n    await removeRefreshTokenRepositry(useremail);\r\n    return { message: \"Refresh token removed successfully\" };\r\n  } catch (error: any) {\r\n    throw new Error(\"Error removing refresh token: \" + error.message);\r\n  }\r\n};\r\n\r\n// Function to handle token removal for Admin model during logout\r\nexport const removeRefreshTokenForAdmin = async (Adminemail: string) => {\r\n  try {\r\n    // Find the user by their ID\r\n    const user = await findAdminByEmail(Adminemail);\r\n    if (!user) {\r\n      throw new Error(\"User not found\");\r\n    }\r\n    await removeRefreshTokenRepositryAdmin(Adminemail);\r\n    return { message: \"Refresh token removed successfully\" };\r\n  } catch (error: any) {\r\n    throw new Error(\"Error removing refresh token: \" + error.message);\r\n  }\r\n};\r\n"]}