{"version":3,"file":"email.utils.js","sourceRoot":"","sources":["../../src/utils/email.utils.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,gDAAgD;;AAEhD,mDAAmD;AACnD,kCAAkC;AAClC,YAAY;AACZ,+BAA+B;AAC/B,mCAAmC;AACnC,OAAO;AACP,MAAM;AAEN,kFAAkF;AAClF,UAAU;AACV,mCAAmC;AACnC,+BAA+B;AAC/B,YAAY;AACZ,iBAAiB;AACjB,cAAc;AACd,UAAU;AACV,sBAAsB;AACtB,gDAAgD;AAChD,MAAM;AACN,KAAK","sourcesContent":["// import nodemailer from 'nodemailer';\r\n// import config from '../config/env.config.js';\r\n\r\n// const transporter = nodemailer.createTransport({\r\n//   service: config.emailService,\r\n//   auth: {\r\n//     user: config.emailUser ,\r\n//     pass: config.emailPassword, \r\n//   },\r\n// });\r\n\r\n// export const sendEmail = async (to: string, subject: string, text: string) => {\r\n//   try {\r\n//     await transporter.sendMail({\r\n//       from:config.emailUser,\r\n//       to,\r\n//       subject,\r\n//       text,\r\n//     });\r\n//   } catch (error) {\r\n//     throw new Error('Failed to send email.');\r\n//   }\r\n// };\r\n\r\n"]}