{"version":3,"file":"email.utils.js","sourceRoot":"","sources":["../../src/utils/email.utils.ts"],"names":[],"mappings":"AAAA,OAAO,UAAU,MAAM,YAAY,CAAC;AACpC,OAAO,MAAM,MAAM,yBAAyB,CAAC;AAE7C,MAAM,WAAW,GAAG,UAAU,CAAC,eAAe,CAAC;IAC7C,OAAO,EAAE,MAAM,CAAC,YAAY;IAC5B,IAAI,EAAE;QACJ,IAAI,EAAE,MAAM,CAAC,SAAS;QACtB,IAAI,EAAE,MAAM,CAAC,aAAa;KAC3B;CACF,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,SAAS,GAAG,KAAK,EAAE,EAAU,EAAE,OAAe,EAAE,IAAY,EAAE,EAAE;IAC3E,IAAI,CAAC;QACH,MAAM,WAAW,CAAC,QAAQ,CAAC;YACzB,IAAI,EAAC,MAAM,CAAC,SAAS;YACrB,EAAE;YACF,OAAO;YACP,IAAI;SACL,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;IAC3C,CAAC;AACH,CAAC,CAAC","sourcesContent":["import nodemailer from 'nodemailer';\r\nimport config from '../config/env.config.js';\r\n\r\nconst transporter = nodemailer.createTransport({\r\n  service: config.emailService,\r\n  auth: {\r\n    user: config.emailUser ,\r\n    pass: config.emailPassword, \r\n  },\r\n});\r\n\r\nexport const sendEmail = async (to: string, subject: string, text: string) => {\r\n  try {\r\n    await transporter.sendMail({\r\n      from:config.emailUser,\r\n      to,\r\n      subject,\r\n      text,\r\n    });\r\n  } catch (error) {\r\n    throw new Error('Failed to send email.');\r\n  }\r\n};\r\n"]}