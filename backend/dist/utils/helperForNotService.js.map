{"version":3,"file":"helperForNotService.js","sourceRoot":"","sources":["../../src/utils/helperForNotService.ts"],"names":[],"mappings":"AAAA,yGAAyG;AACzG,qEAAqE;AACrE,oBAAoB;AACpB,gEAAgE;AAChE,qBAAqB;AACrB,QAAQ;;AAER,sCAAsC;AACtC,0CAA0C;AAC1C,6CAA6C;AAE7C,wDAAwD;AACxD,sDAAsD;AAEtD,iCAAiC;AACjC,OAAO;AAEP,yEAAyE;AACzE,8BAA8B;AAC9B,2CAA2C;AAC3C,wDAAwD;AACxD,6DAA6D;AAC7D,8EAA8E;AAE9E,2BAA2B;AAC3B,uDAAuD;AACvD,gCAAgC;AAChC,6DAA6D;AAC7D,eAAe;AACf,gEAAgE;AAChE,QAAQ;AACR,OAAO","sourcesContent":["// export const convertTo24HourFormat = (time12h: string): { hours: number; minutes: number } | null => {\r\n//     const match = time12h.match(/^(\\d{1,2}):(\\d{2})\\s?(AM|PM)$/i);\r\n//     if (!match) {\r\n//       console.log(`[DEBUG] Invalid time format: ${time12h}`);\r\n//       return null;\r\n//     }\r\n\r\n//     let hours = parseInt(match[1]);\r\n//     const minutes = parseInt(match[2]);\r\n//     const period = match[3].toUpperCase();\r\n\r\n//     if (period === \"PM\" && hours !== 12) hours += 12;\r\n//     if (period === \"AM\" && hours === 12) hours = 0;\r\n\r\n//     return { hours, minutes };\r\n//   };\r\n\r\n//   export const formatTimeDifference = (createdAt: string): string => {\r\n//     const now = new Date();\r\n//     const created = new Date(createdAt);\r\n//     const diffMs = now.getTime() - created.getTime();\r\n//     const diffHrs = Math.floor(diffMs / (1000 * 60 * 60));\r\n//     const diffMins = Math.floor((diffMs % (1000 * 60 * 60)) / (1000 * 60));\r\n\r\n//     if (diffHrs >= 24) {\r\n//       return `${Math.floor(diffHrs / 24)} days ago`;\r\n//     } else if (diffHrs > 0) {\r\n//       return `${diffHrs} hr${diffHrs > 1 ? \"s\" : \"\"} ago`;\r\n//     } else {\r\n//       return `${diffMins} min${diffMins > 1 ? \"s\" : \"\"} ago`;\r\n//     }\r\n//   };"]}