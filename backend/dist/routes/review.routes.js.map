{"version":3,"file":"review.routes.js","sourceRoot":"","sources":["../../src/routes/review.routes.ts"],"names":[],"mappings":"AAAA,OAAO,OAAO,MAAM,SAAS,CAAC;AAC9B,OAAO,KAAK,gBAAgB,MAAM,qCAAqC,CAAC;AACxE,OAAO,EAAE,UAAU,EAAE,MAAM,wCAAwC,CAAC;AACpE,OAAO,EAAE,SAAS,EAAE,kBAAkB,EAAE,WAAW,EAAE,MAAM,mCAAmC,CAAC;AAE/F,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;AAEhC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAC,CAAC,UAAU,EAAE,WAAW,EAAC,kBAAkB,CAAC,EAAG,gBAAgB,CAAC,YAAY,CAAC,CAAC;AACpG,MAAM,CAAC,IAAI,CAAC,OAAO,EAAC,CAAC,UAAU,EAAE,WAAW,EAAC,kBAAkB,CAAC,EAAG,gBAAgB,CAAC,UAAU,CAAC,CAAC;AAChG,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,UAAU,EAAE,WAAW,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,EAAG,gBAAgB,CAAC,aAAa,CAAC,CAAC;AACnG,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAC,CAAC,UAAU,EAAE,WAAW,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,EAAG,gBAAgB,CAAC,aAAa,CAAC,CAAC;AAClH,MAAM,CAAC,KAAK,CAAC,mBAAmB,EAAC,CAAC,UAAU,EAAE,WAAW,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,EAAG,gBAAgB,CAAC,YAAY,CAAC,CAAC;AAChH,MAAM,CAAC,GAAG,CAAC,WAAW,EAAC,CAAC,UAAU,EAAE,WAAW,EAAC,kBAAkB,CAAC,EAAE,gBAAgB,CAAC,kBAAkB,CAAC,CAAC;AAC1G,MAAM,CAAC,KAAK,CAAC,mBAAmB,EAAC,CAAC,UAAU,EAAE,WAAW,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,EAAG,gBAAgB,CAAC,cAAc,CAAC,CAAC;AAClH,MAAM,CAAC,KAAK,CAAC,qBAAqB,EAAC,CAAC,UAAU,EAAE,WAAW,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,EAAG,gBAAgB,CAAC,cAAc,CAAC,CAAC;AAEpH,eAAe,MAAM,CAAC","sourcesContent":["import express from 'express';\r\nimport * as ReviewController from '../controllers/review.controller.js';\r\nimport { apiLimiter } from '../middlewares/ratelimit.middleware.js';\r\nimport { authorize, checkBlockedStatus, verifyToken } from '../middlewares/auth.middleware.js';\r\n\r\nconst router = express.Router();\r\n\r\nrouter.post('/submit',[apiLimiter, verifyToken,checkBlockedStatus],  ReviewController.submitReview);\r\nrouter.post('/skip',[apiLimiter, verifyToken,checkBlockedStatus],  ReviewController.skipReview);\r\nrouter.get('/all', [apiLimiter, verifyToken, authorize('admin')],  ReviewController.getAllReviews);\r\nrouter.patch('/approve/:reviewId',[apiLimiter, verifyToken, authorize('admin')],  ReviewController.approveReview);\r\nrouter.patch('/select/:reviewId',[apiLimiter, verifyToken, authorize('admin')],  ReviewController.selectReview);\r\nrouter.get('/selected',[apiLimiter, verifyToken,checkBlockedStatus], ReviewController.getSelectedReviews);\r\nrouter.patch('/cancel/:reviewId',[apiLimiter, verifyToken, authorize('admin')],  ReviewController.cancelApproval);\r\nrouter.patch('/deselect/:reviewId',[apiLimiter, verifyToken, authorize('admin')],  ReviewController.deselectReview);\r\n\r\nexport default router;"]}