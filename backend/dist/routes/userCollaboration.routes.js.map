{"version":3,"file":"userCollaboration.routes.js","sourceRoot":"","sources":["../../src/routes/userCollaboration.routes.ts"],"names":[],"mappings":"AAAA,OAAO,OAAO,MAAM,SAAS,CAAC;AAC9B,OAAO,EAAE,UAAU,EAAE,MAAM,wCAAwC,CAAC;AACpE,OAAO,EACL,SAAS,EACT,kBAAkB,EAClB,WAAW,GACZ,MAAM,mCAAmC,CAAC;AAC3C,OAAO,EACL,8BAA8B,EAC9B,+BAA+B,EAC/B,+BAA+B,EAC/B,4BAA4B,EAC5B,yBAAyB,EACzB,0BAA0B,EAC1B,qBAAqB,GACtB,MAAM,8CAA8C,CAAC;AAEtD,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;AAEhC,oBAAoB;AACpB,MAAM,CAAC,IAAI,CAAC,oBAAoB,EAAC,CAAC,UAAU,EAAE,WAAW,EAAE,kBAAkB,CAAC,EAAC,qBAAqB,CAAC,CAAC;AACtG,MAAM,CAAC,GAAG,CAAC,wBAAwB,EAAC,CAAC,UAAU,EAAE,WAAW,EAAE,kBAAkB,CAAC,EAAC,0BAA0B,CAAC,CAAC;AAC9G,MAAM,CAAC,GAAG,CAAC,2BAA2B,EAAC,CAAC,UAAU,EAAE,WAAW,EAAE,kBAAkB,CAAC,EAAC,8BAA8B,CAAC,CAAC;AACrH,MAAM,CAAC,GAAG,CAAC,sBAAsB,EAAC,CAAC,UAAU,EAAE,WAAW,EAAE,kBAAkB,CAAC,EAAC,4BAA4B,CAAC,CAAC;AAC9G,MAAM,CAAC,GAAG,CAAC,+BAA+B,EAAC,CAAC,UAAU,EAAE,WAAW,EAAE,kBAAkB,CAAC,EAAC,yBAAyB,CAAC,CAAC;AACpH,MAAM,CAAC,GAAG,CAAC,8BAA8B,EAAC,CAAC,UAAU,EAAE,WAAW,EAAE,kBAAkB,CAAC,EAAE,+BAA+B,CAAC,CAAC;AAE1H,WAAW;AACX,MAAM,CAAC,GAAG,CAAC,mBAAmB,EAAE,CAAC,UAAU,EAAE,WAAW,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC,EAAE,+BAA+B,CAAC,CAAC;AAEhH,eAAe,MAAM,CAAC","sourcesContent":["import express from \"express\";\r\nimport { apiLimiter } from \"../middlewares/ratelimit.middleware.js\";\r\nimport {\r\n  authorize,\r\n  checkBlockedStatus,\r\n  verifyToken,\r\n} from \"../middlewares/auth.middleware.js\";\r\nimport {\r\n  disconnectConnectionController,\r\n  getAllUserConnectionsController,\r\n  getUserConnectionByIdController,\r\n  getUserConnectionsController,\r\n  getUserRequestsController,\r\n  respondToRequestController,\r\n  sendRequestController,\r\n} from \"../controllers/user-userCollab.controller.js\";\r\n\r\nconst router = express.Router();\r\n\r\n//User - User Routes\r\nrouter.post(\"/sendUser-User/:id\",[apiLimiter, verifyToken, checkBlockedStatus],sendRequestController);\r\nrouter.put(\"/respond/:connectionId\",[apiLimiter, verifyToken, checkBlockedStatus],respondToRequestController);\r\nrouter.put(\"/disconnect/:connectionId\",[apiLimiter, verifyToken, checkBlockedStatus],disconnectConnectionController);\r\nrouter.get(\"/connections/:userId\",[apiLimiter, verifyToken, checkBlockedStatus],getUserConnectionsController);\r\nrouter.get(\"/connections/:userId/requests\",[apiLimiter, verifyToken, checkBlockedStatus],getUserRequestsController);\r\nrouter.get(\"/getConnection/:connectionId\",[apiLimiter, verifyToken, checkBlockedStatus], getUserConnectionByIdController);\r\n\r\n//FOR ADMIN\r\nrouter.get(\"/getAllconnection\", [apiLimiter, verifyToken, authorize('admin')], getAllUserConnectionsController);\r\n\r\nexport default router;\r\n\r\n"]}