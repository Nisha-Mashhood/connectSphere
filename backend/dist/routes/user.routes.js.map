{"version":3,"file":"user.routes.js","sourceRoot":"","sources":["../../src/routes/user.routes.ts"],"names":[],"mappings":"AAAA,OAAO,OAAO,MAAM,SAAS,CAAC;AAC9B,OAAO,KAAK,cAAc,MAAM,mCAAmC,CAAC;AACpE,OAAO,EAAE,UAAU,EAAE,MAAM,wCAAwC,CAAA;AACnE,OAAO,EAAE,MAAM,EAAE,MAAM,yBAAyB,CAAC;AACjD,OAAO,EAAE,cAAc,EAAE,MAAM,mCAAmC,CAAC;AACnE,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;AAChC,MAAM,cAAc,GAAG,IAAI,cAAc,EAAE,CAAC;AAE5C,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,UAAU,EAAE,cAAc,CAAC,WAAW,CAAC,EAAE,cAAc,CAAC,WAAW,CAAC,CAAC;AACjG,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,UAAU,EAAE,cAAc,CAAC,WAAW,CAAC,EAAE,cAAc,CAAC,WAAW,CAAC,CAAC;AACjG,MAAM,CAAC,GAAG,CACR,gBAAgB,EAChB,CAAE,UAAU;IACV,cAAc,CAAC,WAAW;IAC1B,cAAc,CAAC,kBAAkB;IACnC,MAAM,CAAC,MAAM,CAAC;QACZ,EAAE,IAAI,EAAE,cAAc,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,oBAAoB;QAC3D,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,kBAAkB;KACxD,CAAC;CACH,EACC,cAAc,CAAC,iBAAiB,CACjC,CAAC;AACF,MAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC,UAAU,EAAE,cAAc,CAAC,WAAW,EAAE,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,EAAE,cAAc,CAAC,SAAS,CAAC,CAAC;AACpI,MAAM,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC,UAAU,EAAE,cAAc,CAAC,WAAW,EAAE,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,EAAE,cAAc,CAAC,WAAW,CAAC,CAAC;AACxI,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC,UAAU,EAAE,cAAc,CAAC,WAAW,EAAE,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,EAAE,cAAc,CAAC,UAAU,CAAC,CAAC;AAEtI,eAAe,MAAM,CAAC","sourcesContent":["import express from \"express\";\r\nimport * as UserController from \"../controllers/user.controller.js\";\r\nimport { apiLimiter } from '../middlewares/ratelimit.middleware.js'\r\nimport { upload } from \"../core/Utils/Multer.js\";\r\nimport { AuthMiddleware } from \"../middlewares/auth.middleware.js\";\r\nconst router = express.Router();\r\nconst authMiddleware = new AuthMiddleware();\r\n\r\nrouter.get(\"/getallusers\", [apiLimiter, authMiddleware.verifyToken], UserController.getAllUsers);\r\nrouter.get(\"/getuser/:id\", [apiLimiter, authMiddleware.verifyToken], UserController.getUserById);\r\nrouter.put(\r\n  \"updateuser/:id\",\r\n  [ apiLimiter,\r\n    authMiddleware.verifyToken,\r\n    authMiddleware.checkBlockedStatus,\r\n  upload.fields([\r\n    { name: \"profilePhoto\", maxCount: 1 }, // For profile photo\r\n    { name: \"coverPhoto\", maxCount: 1 }, // For cover photo\r\n  ]),\r\n],\r\n  UserController.updateUserProfile\r\n);\r\nrouter.put(\"/blockuser/:id\", [apiLimiter, authMiddleware.verifyToken, authMiddleware.authorize('admin')], UserController.blockUser);\r\nrouter.put(\"/unblockuser/:id\", [apiLimiter, authMiddleware.verifyToken, authMiddleware.authorize('admin')], UserController.unblockUser);\r\nrouter.put(\"/changerole/:id\", [apiLimiter, authMiddleware.verifyToken, authMiddleware.authorize('admin')], UserController.changeRole);\r\n\r\nexport default router;\r\n\r\n"]}