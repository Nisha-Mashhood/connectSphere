{"version":3,"file":"BaseService.js","sourceRoot":"","sources":["../../../src/core/Services/BaseService.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,oBAAoB,CAAC;AACxC,OAAO,EAAE,YAAY,EAAE,MAAM,0BAA0B,CAAC;AAGxD,MAAM,OAAgB,WAAW;IAC/B,4BAA4B;IAC5B,SAAS,CAAC,IAAS;QACjB,IAAI,CAAC,IAAI,EAAE,CAAC;YACV,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;YACjC,MAAM,IAAI,YAAY,CAAC,kBAAkB,CAAC,CAAC;QAC7C,CAAC;QACD,MAAM,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;IAC5C,CAAC;IAED,UAAU,CAAC,OAAe;QACxB,MAAM,CAAC,KAAK,CAAC,kBAAkB,OAAO,EAAE,CAAC,CAAC;QAC1C,MAAM,IAAI,YAAY,CAAC,OAAO,CAAC,CAAC;IAClC,CAAC;CAEF","sourcesContent":["import logger from '../Utils/Logger.js';\r\nimport { ServiceError } from '../Utils/ErrorHandler.js';\r\nimport { IBaseService } from '../Interfaces/IBaseService.js';\r\n\r\nexport abstract class BaseService implements IBaseService {\r\n  // Check if data is provided\r\n  checkData(data: any): void {\r\n    if (!data) {\r\n      logger.error('No data provided');\r\n      throw new ServiceError('No data provided');\r\n    }\r\n    logger.debug('Data checked successfully');\r\n  }\r\n\r\n  throwError(message: string): never {\r\n    logger.error(`Service error: ${message}`);\r\n    throw new ServiceError(message);\r\n  }\r\n  \r\n}\r\n\r\n"]}