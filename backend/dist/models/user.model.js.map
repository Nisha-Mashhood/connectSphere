{"version":3,"file":"user.model.js","sourceRoot":"","sources":["../../src/models/user.model.ts"],"names":[],"mappings":"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","sourcesContent":["import mongoose, { Schema, Model } from \"mongoose\";\r\nimport config from \"../config/env.config.js\";\r\nimport { generateCustomId } from \"../core/Utils/IdGenerator.js\";\r\nimport { UserInterface } from \"../Interfaces/models/IUser.js\";\r\nimport logger from \"../core/Utils/Logger.js\";\r\n\r\nconst userSchema: Schema<UserInterface> = new mongoose.Schema(\r\n  {\r\n    userId: {\r\n      type: String,\r\n      unique: true,\r\n    },\r\n    name: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    email: {\r\n      type: String,\r\n      required: true,\r\n      unique: true,\r\n    },\r\n    phone: {\r\n      type: String,\r\n    },\r\n    dateOfBirth: {\r\n      type: Date,\r\n    },\r\n    password: {\r\n      type: String,\r\n      default: null,\r\n    },\r\n    jobTitle: {\r\n      type: String,\r\n      default: null,\r\n    },\r\n    industry: {\r\n      type: String,\r\n      default: null,\r\n    },\r\n    reasonForJoining: {\r\n      type: String,\r\n      default: null,\r\n    },\r\n    role: {\r\n      type: String,\r\n      enum: [\"user\", \"mentor\", \"admin\"],\r\n      default: \"user\",\r\n    },\r\n    isBlocked: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    provider: {\r\n      type: String,\r\n      enum: [\"google\", \"facebook\", \"github\"],\r\n      default: null,\r\n    },\r\n    providerId: {\r\n      type: String,\r\n      default: null,\r\n    },\r\n    profilePic: {\r\n      type: String,\r\n      default: config.defaultprofilepic,\r\n    },\r\n    coverPic: {\r\n      type: String,\r\n      default: config.defaultcoverpic,\r\n    },\r\n    accessToken: {\r\n      type: String,\r\n      default: null,\r\n      required: false,\r\n    },\r\n    refreshToken: {\r\n      type: String,\r\n      default: null,\r\n      required: false,\r\n    },\r\n    loginCount: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n    hasReviewed: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\n// Pre-save hook to generate userId\r\nuserSchema.pre(\"save\", async function (next) {\r\n  if (!this.userId) {\r\n    try {\r\n      this.userId = await generateCustomId(\"user\", \"USR\");\r\n      logger.debug(`Generated userId: ${this.userId} for email: ${this.email}`);\r\n    } catch (error) {\r\n      logger.error(\r\n        `Error generating userId for email: ${this.email}: ${error}`\r\n      );\r\n      return next(error as Error);\r\n    }\r\n  }\r\n  next();\r\n});\r\n\r\nconst User: Model<UserInterface> = mongoose.model<UserInterface>(\r\n  \"User\",\r\n  userSchema\r\n);\r\n\r\nexport default User;\r\n"]}