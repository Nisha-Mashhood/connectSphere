{"version":3,"file":"user.model.js","sourceRoot":"","sources":["../../src/models/user.model.ts"],"names":[],"mappings":"AAAA,OAAO,QAAqC,MAAM,UAAU,CAAC;AAC7D,OAAO,MAAM,MAAM,yBAAyB,CAAA;AAwB5C,MAAM,UAAU,GAA0B,IAAI,QAAQ,CAAC,MAAM,CAC3D;IACE,IAAI,EAAE;QACF,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;KACjB;IACD,KAAK,EAAE;QACH,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,MAAM,EAAE,IAAI;KACf;IACD,KAAK,EAAE;QACH,IAAI,EAAE,MAAM;KACf;IACD,WAAW,EAAE;QACT,IAAI,EAAE,IAAI;KACb;IACD,QAAQ,EAAE;QACN,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAC,IAAI;KAChB;IACD,QAAQ,EAAE;QACN,IAAI,EAAE,MAAM;QACZ,OAAO,EAAC,IAAI;KACf;IACD,QAAQ,EAAE;QACN,IAAI,EAAE,MAAM;QACZ,OAAO,EAAC,IAAI;KACf;IACD,gBAAgB,EAAE;QACd,IAAI,EAAE,MAAM;QACZ,OAAO,EAAC,IAAI;KACf;IACD,IAAI,EAAE;QACF,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC;QACxB,OAAO,EAAC,IAAI;KACf;IACD,SAAS,EAAE;QACP,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,KAAK;KACjB;IACD,QAAQ,EAAE;QACN,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,CAAC,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC;QACtC,OAAO,EAAE,IAAI;KAChB;IACD,UAAU,EAAE;QACR,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,IAAI;KAChB;IACD,UAAU,EAAE;QACR,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,MAAM,CAAC,iBAAiB;KACpC;IACD,QAAQ,EAAE;QACN,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,MAAM,CAAC,eAAe;KAClC;IACD,WAAW,EAAE;QACT,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,IAAI;QACb,QAAQ,EAAE,KAAK;KAClB;IACD,YAAY,EAAE;QACV,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,IAAI;QACb,QAAQ,EAAE,KAAK;KAClB;CACF,EACD,EAAE,UAAU,EAAE,IAAI,EAAE,CACrB,CAAC;AAEF,MAAM,IAAI,GAAyB,QAAQ,CAAC,KAAK,CAAgB,MAAM,EAAC,UAAU,CAAC,CAAC;AAEpF,eAAe,IAAI,CAAC","sourcesContent":["import mongoose, { Schema, Document, Model } from \"mongoose\";\r\nimport config from '../config/env.config.js'\r\n\r\nexport interface UserInterface extends Document {\r\n  name: string;\r\n  email: string;\r\n  phone?:string;\r\n  dateOfBirth?: Date;\r\n  password: string;\r\n  jobTitle?: string;\r\n  industry?: string;\r\n  reasonForJoining?: string;\r\n  role?: \"user\" | \"mentor\";\r\n  isBlocked: boolean;\r\n  provider?: string;\r\n  providerId?: string;\r\n  profilePic?: string;\r\n  coverPic?: string;\r\n  accessToken?: string;\r\n  refreshToken?:string | null;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n  _id: mongoose.Types.ObjectId;\r\n}\r\n\r\nconst userSchema: Schema<UserInterface> = new mongoose.Schema(\r\n  {\r\n    name: { \r\n        type: String, \r\n        required: true \r\n    },\r\n    email: { \r\n        type: String, \r\n        required: true, \r\n        unique: true \r\n    },\r\n    phone: { \r\n        type: String, \r\n    },\r\n    dateOfBirth: { \r\n        type: Date, \r\n    },\r\n    password: { \r\n        type: String,\r\n        required:true\r\n    },\r\n    jobTitle: { \r\n        type: String,\r\n        default:null\r\n    },\r\n    industry: { \r\n        type: String,\r\n        default:null\r\n    },\r\n    reasonForJoining: { \r\n        type: String,\r\n        default:null \r\n    },\r\n    role: { \r\n        type: String, \r\n        enum: [\"user\", \"mentor\"], \r\n        default:null \r\n    },\r\n    isBlocked: { \r\n        type: Boolean, \r\n        default: false \r\n    },\r\n    provider: { \r\n        type: String, \r\n        enum: [\"google\", \"facebook\", \"github\"],\r\n        default: null \r\n    },\r\n    providerId: { \r\n        type: String, \r\n        default: null \r\n    },\r\n    profilePic: { \r\n        type: String,\r\n        default: config.defaultprofilepic,\r\n    },\r\n    coverPic: { \r\n        type: String,\r\n        default: config.defaultcoverpic,\r\n    },\r\n    accessToken: {\r\n        type: String,\r\n        default: null,  \r\n        required: false\r\n    },\r\n    refreshToken: {\r\n        type: String,\r\n        default: null,  \r\n        required: false\r\n    },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\nconst User: Model<UserInterface> = mongoose.model<UserInterface>(\"User\",userSchema);\r\n\r\nexport default User;\r\n"]}