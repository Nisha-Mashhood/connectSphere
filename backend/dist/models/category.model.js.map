{"version":3,"file":"category.model.js","sourceRoot":"","sources":["../../src/models/category.model.ts"],"names":[],"mappings":"AAAA,OAAO,QAA2B,MAAM,UAAU,CAAC;AACnD,OAAO,EAAE,gBAAgB,EAAE,MAAM,8BAA8B,CAAC;AAEhE,OAAO,MAAM,MAAM,yBAAyB,CAAC;AAE7C,kBAAkB;AAClB,MAAM,cAAc,GAA8B,IAAI,QAAQ,CAAC,MAAM,CACnE;IACE,UAAU,EAAE;QACV,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE,IAAI;KACb;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,MAAM,EAAE,IAAI;KACb;IACD,WAAW,EAAE;QACX,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,IAAI;KACd;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,IAAI;KACd;CACF,EACD,EAAE,UAAU,EAAE,IAAI,EAAE,CACrB,CAAC;AAEF,uCAAuC;AACvC,cAAc,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,WAAW,IAAI;IAC7C,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;QACrB,IAAI,CAAC;YACH,IAAI,CAAC,UAAU,GAAG,MAAM,gBAAgB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;YAC5D,MAAM,CAAC,KAAK,CACV,yBAAyB,IAAI,CAAC,UAAU,aAAa,IAAI,CAAC,IAAI,EAAE,CACjE,CAAC;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,CAAC,KAAK,CACV,gCAAgC,IAAI,CAAC,UAAU,aAAa,IAAI,CAAC,IAAI,MAAM,KAAK,EAAE,CACnF,CAAC;YACF,OAAO,IAAI,CAAC,KAAc,CAAC,CAAC;QAC9B,CAAC;IACH,CAAC;IACD,IAAI,EAAE,CAAC;AACT,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,QAAQ,GACnB,QAAQ,CAAC,KAAK,CAAoB,UAAU,EAAE,cAAc,CAAC,CAAC","sourcesContent":["import mongoose, { Schema, Model } from \"mongoose\";\r\nimport { generateCustomId } from \"../core/Utils/IdGenerator.js\";\r\nimport { CategoryInterface } from \"../Interfaces/models/CategoryInterface.js\";\r\nimport logger from \"../core/Utils/Logger.js\";\r\n\r\n// Category Schema\r\nconst categorySchema: Schema<CategoryInterface> = new mongoose.Schema(\r\n  {\r\n    categoryId: {\r\n      type: String,\r\n      unique: true,\r\n    },\r\n    name: {\r\n      type: String,\r\n      required: true,\r\n      unique: true,\r\n    },\r\n    description: {\r\n      type: String,\r\n      default: null,\r\n    },\r\n    imageUrl: {\r\n      type: String,\r\n      default: null,\r\n    },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\n// Pre-save hook to generate categoryId\r\ncategorySchema.pre(\"save\", async function (next) {\r\n  if (!this.categoryId) {\r\n    try {\r\n      this.categoryId = await generateCustomId(\"category\", \"CAT\");\r\n      logger.debug(\r\n        `Generated categoryId: ${this.categoryId} for name ${this.name}`\r\n      );\r\n    } catch (error) {\r\n      logger.error(\r\n        `Error generating categoryId: ${this.categoryId} for name ${this.name} : ${error}`\r\n      );\r\n      return next(error as Error);\r\n    }\r\n  }\r\n  next();\r\n});\r\n\r\nexport const Category: Model<CategoryInterface> =\r\n  mongoose.model<CategoryInterface>(\"Category\", categorySchema);\r\n"]}