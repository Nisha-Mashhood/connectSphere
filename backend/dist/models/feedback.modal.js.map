{"version":3,"file":"feedback.modal.js","sourceRoot":"","sources":["../../src/models/feedback.modal.ts"],"names":[],"mappings":"AAAA,OAAO,QAAQ,EAAE,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAC5C,OAAO,EAAE,gBAAgB,EAAE,MAAM,8BAA8B,CAAC;AAEhE,OAAO,MAAM,MAAM,yBAAyB,CAAC;AAE7C,MAAM,cAAc,GAAsB,IAAI,MAAM,CAClD;IACE,UAAU,EAAE;QACV,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE,IAAI;KACb;IACD,MAAM,EAAE;QACN,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QACpC,GAAG,EAAE,MAAM;QACX,QAAQ,EAAE,IAAI;KACf;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QACpC,GAAG,EAAE,QAAQ;QACb,QAAQ,EAAE,IAAI;KACf;IACD,eAAe,EAAE;QACf,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QACpC,GAAG,EAAE,eAAe;QACpB,QAAQ,EAAE,IAAI;KACf;IACD,OAAO,EAAE;QACP,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC;QACxB,QAAQ,EAAE,IAAI;KACf;IACD,MAAM,EAAE;QACN,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,GAAG,EAAE,CAAC;QACN,GAAG,EAAE,CAAC;KACP;IACD,aAAa,EAAE;QACb,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,GAAG,EAAE,CAAC;QACN,GAAG,EAAE,CAAC;KACP;IACD,SAAS,EAAE;QACT,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,GAAG,EAAE,CAAC;QACN,GAAG,EAAE,CAAC;KACP;IACD,WAAW,EAAE;QACX,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,GAAG,EAAE,CAAC;QACN,GAAG,EAAE,CAAC;KACP;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,SAAS,EAAE,CAAC;QACZ,SAAS,EAAE,GAAG;KACf;IACD,cAAc,EAAE;QACd,IAAI,EAAE,OAAO;QACb,QAAQ,EAAE,IAAI;KACf;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,KAAK;KACf;CACF,EACD,EAAE,UAAU,EAAE,IAAI,EAAE,CACrB,CAAC;AAEF,uCAAuC;AACvC,cAAc,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,WAAW,IAAI;IAC7C,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;QACrB,IAAI,CAAC;YACH,IAAI,CAAC,UAAU,GAAG,MAAM,gBAAgB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;YAC5D,MAAM,CAAC,KAAK,CACV,yBAAyB,IAAI,CAAC,UAAU,eAAe,IAAI,CAAC,MAAM,EAAE,CACrE,CAAC;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,CAAC,KAAK,CACV,gCAAgC,IAAI,CAAC,UAAU,eAAe,IAAI,CAAC,MAAM,MAAM,KAAK,EAAE,CACvF,CAAC;YACF,OAAO,IAAI,CAAC,KAAc,CAAC,CAAC;QAC9B,CAAC;IACH,CAAC;IACD,IAAI,EAAE,CAAC;AACT,CAAC,CAAC,CAAC;AAEH,eAAe,QAAQ,CAAC,KAAK,CAAY,UAAU,EAAE,cAAc,CAAC,CAAC","sourcesContent":["import mongoose, { Schema } from \"mongoose\";\r\nimport { generateCustomId } from \"../core/Utils/IdGenerator.js\";\r\nimport { IFeedback } from \"../Interfaces/models/IFeedback.js\";\r\nimport logger from \"../core/Utils/Logger.js\";\r\n\r\nconst FeedbackSchema: Schema<IFeedback> = new Schema(\r\n  {\r\n    feedbackId: {\r\n      type: String,\r\n      unique: true,\r\n    },\r\n    userId: {\r\n      type: mongoose.Schema.Types.ObjectId,\r\n      ref: \"User\",\r\n      required: true,\r\n    },\r\n    mentorId: {\r\n      type: mongoose.Schema.Types.ObjectId,\r\n      ref: \"Mentor\",\r\n      required: true,\r\n    },\r\n    collaborationId: {\r\n      type: mongoose.Schema.Types.ObjectId,\r\n      ref: \"Collaboration\",\r\n      required: true,\r\n    },\r\n    givenBy: {\r\n      type: String,\r\n      enum: [\"user\", \"mentor\"],\r\n      required: true,\r\n    },\r\n    rating: {\r\n      type: Number,\r\n      required: true,\r\n      min: 1,\r\n      max: 5,\r\n    },\r\n    communication: {\r\n      type: Number,\r\n      required: true,\r\n      min: 1,\r\n      max: 5,\r\n    },\r\n    expertise: {\r\n      type: Number,\r\n      required: true,\r\n      min: 1,\r\n      max: 5,\r\n    },\r\n    punctuality: {\r\n      type: Number,\r\n      required: true,\r\n      min: 1,\r\n      max: 5,\r\n    },\r\n    comments: {\r\n      type: String,\r\n      required: true,\r\n      minlength: 5,\r\n      maxlength: 500,\r\n    },\r\n    wouldRecommend: {\r\n      type: Boolean,\r\n      required: true,\r\n    },\r\n    isHidden: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\n// Pre-save hook to generate feedbackId\r\nFeedbackSchema.pre(\"save\", async function (next) {\r\n  if (!this.feedbackId) {\r\n    try {\r\n      this.feedbackId = await generateCustomId(\"feedback\", \"FDB\");\r\n      logger.debug(\r\n        `Generated feedbackId: ${this.feedbackId} for userId ${this.userId}`\r\n      );\r\n    } catch (error) {\r\n      logger.error(\r\n        `Error generating feedbackId: ${this.feedbackId} for userId ${this.userId} : ${error}`\r\n      );\r\n      return next(error as Error);\r\n    }\r\n  }\r\n  next();\r\n});\r\n\r\nexport default mongoose.model<IFeedback>(\"Feedback\", FeedbackSchema);\r\n"]}