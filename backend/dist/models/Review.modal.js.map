{"version":3,"file":"Review.modal.js","sourceRoot":"","sources":["../../src/models/Review.modal.ts"],"names":[],"mappings":"AAAA,OAAO,QAAQ,EAAE,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAC5C,OAAO,EAAE,gBAAgB,EAAE,MAAM,8BAA8B,CAAC;AAEhE,OAAO,MAAM,MAAM,yBAAyB,CAAC;AAE7C,MAAM,YAAY,GAAoB,IAAI,MAAM,CAAC;IAC/C,QAAQ,EAAE;QACR,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE,IAAI;KACb;IACD,MAAM,EAAE;QACN,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,MAAM;QACX,QAAQ,EAAE,IAAI;KACf;IACD,MAAM,EAAE;QACN,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,GAAG,EAAE,CAAC;QACN,GAAG,EAAE,CAAC;KACP;IACD,OAAO,EAAE;QACP,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;KACf;IACD,UAAU,EAAE;QACV,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,KAAK;KACf;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,KAAK;KACf;IACD,SAAS,EAAE;QACT,IAAI,EAAE,IAAI;QACV,OAAO,EAAE,IAAI,CAAC,GAAG;KAClB;CACF,CAAC,CAAC;AAEH,qCAAqC;AACrC,YAAY,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,WAAW,IAAI;IAC3C,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QACnB,IAAI,CAAC;YACH,IAAI,CAAC,QAAQ,GAAG,MAAM,gBAAgB,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;YACxD,MAAM,CAAC,KAAK,CACV,uBAAuB,IAAI,CAAC,QAAQ,eAAe,IAAI,CAAC,MAAM,EAAE,CACjE,CAAC;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,CAAC,KAAK,CACV,8BAA8B,IAAI,CAAC,QAAQ,eAAe,IAAI,CAAC,MAAM,MAAM,KAAK,EAAE,CACnF,CAAC;YACF,OAAO,IAAI,CAAC,KAAc,CAAC,CAAC;QAC9B,CAAC;IACH,CAAC;IACD,IAAI,EAAE,CAAC;AACT,CAAC,CAAC,CAAC;AAEH,eAAe,QAAQ,CAAC,KAAK,CAAU,QAAQ,EAAE,YAAY,CAAC,CAAC","sourcesContent":["import mongoose, { Schema } from \"mongoose\";\r\nimport { generateCustomId } from \"../core/Utils/IdGenerator.js\";\r\nimport { IReview } from \"../Interfaces/models/IReview.js\";\r\nimport logger from \"../core/Utils/Logger.js\";\r\n\r\nconst ReviewSchema: Schema<IReview> = new Schema({\r\n  reviewId: {\r\n    type: String,\r\n    unique: true,\r\n  },\r\n  userId: {\r\n    type: Schema.Types.ObjectId,\r\n    ref: \"User\",\r\n    required: true,\r\n  },\r\n  rating: {\r\n    type: Number,\r\n    required: true,\r\n    min: 1,\r\n    max: 5,\r\n  },\r\n  comment: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  isApproved: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  isSelect: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  createdAt: {\r\n    type: Date,\r\n    default: Date.now,\r\n  },\r\n});\r\n\r\n// Pre-save hook to generate reviewId\r\nReviewSchema.pre(\"save\", async function (next) {\r\n  if (!this.reviewId) {\r\n    try {\r\n      this.reviewId = await generateCustomId(\"review\", \"RVW\");\r\n      logger.debug(\r\n        `Generated reviewId: ${this.reviewId} for userId ${this.userId}`\r\n      );\r\n    } catch (error) {\r\n      logger.error(\r\n        `Error generating reviewId: ${this.reviewId} for userId ${this.userId} : ${error}`\r\n      );\r\n      return next(error as Error);\r\n    }\r\n  }\r\n  next();\r\n});\r\n\r\nexport default mongoose.model<IReview>(\"Review\", ReviewSchema);\r\n"]}