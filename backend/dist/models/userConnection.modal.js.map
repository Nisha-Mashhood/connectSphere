{"version":3,"file":"userConnection.modal.js","sourceRoot":"","sources":["../../src/models/userConnection.modal.ts"],"names":[],"mappings":"AAAA,OAAO,QAAQ,EAAE,EAAE,MAAM,EAAY,MAAM,UAAU,CAAC;AAEtD,OAAO,EAAE,gBAAgB,EAAE,MAAM,+BAA+B,CAAC;AAgBjE,MAAM,oBAAoB,GAAW,IAAI,MAAM,CAC7C;IACE,YAAY,EAAC;QACX,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE,IAAI;KACb;IACD,SAAS,EAAE;QACT,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,MAAM;QACX,QAAQ,EAAE,IAAI;KACf;IACD,SAAS,EAAE;QACT,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,MAAM;QACX,QAAQ,EAAE,IAAI;KACf;IACD,aAAa,EAAE;QACb,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;QACzC,OAAO,EAAE,SAAS;KACnB;IACD,gBAAgB,EAAE;QAChB,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,CAAC,WAAW,EAAE,cAAc,CAAC;QACnC,OAAO,EAAE,cAAc;KACxB;IACD,aAAa,EAAE;QACb,IAAI,EAAE,IAAI;QACV,OAAO,EAAE,IAAI,CAAC,GAAG;KAClB;IACD,iBAAiB,EAAE;QACjB,IAAI,EAAE,IAAI;KACX;IACD,cAAc,EAAE;QACd,IAAI,EAAE,IAAI;KACX;IACD,mBAAmB,EAAE;QACnB,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,IAAI;KACd;CACF,EACD,EAAE,UAAU,EAAE,IAAI,EAAE,CACrB,CAAC;AAEF,yCAAyC;AACzC,oBAAoB,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,WAAU,IAAI;IAChD,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;QACvB,IAAI,CAAC,YAAY,GAAG,MAAM,gBAAgB,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;IACtE,CAAC;IACD,IAAI,EAAE,CAAC;AACT,CAAC,CAAC,CAAC;AAGL,eAAe,QAAQ,CAAC,KAAK,CAAkB,gBAAgB,EAAE,oBAAoB,CAAC,CAAC","sourcesContent":["import mongoose, { Schema, Document } from \"mongoose\";\r\nimport { UserInterface } from \"./user.model.js\";\r\nimport { generateCustomId } from \"../utils/idGenerator.utils.js\";\r\n\r\nexport interface IUserConnection extends Document {\r\n  connectionId:string;\r\n  requester: string | UserInterface;\r\n  recipient: string | UserInterface;\r\n  requestStatus: \"Pending\" | \"Accepted\" | \"Rejected\";\r\n  connectionStatus: \"Connected\" | \"Disconnected\";\r\n  requestSentAt: Date;\r\n  requestAcceptedAt?: Date;\r\n  disconnectedAt?: Date;\r\n  disconnectionReason?: string;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\nconst UserConnectionSchema: Schema = new Schema(\r\n  {\r\n    connectionId:{\r\n      type: String,\r\n      unique: true,\r\n    },\r\n    requester: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: \"User\",\r\n      required: true,\r\n    },\r\n    recipient: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: \"User\",\r\n      required: true,\r\n    },\r\n    requestStatus: {\r\n      type: String,\r\n      enum: [\"Pending\", \"Accepted\", \"Rejected\"],\r\n      default: \"Pending\",\r\n    },\r\n    connectionStatus: {\r\n      type: String,\r\n      enum: [\"Connected\", \"Disconnected\"],\r\n      default: \"Disconnected\",\r\n    },\r\n    requestSentAt: {\r\n      type: Date,\r\n      default: Date.now,\r\n    },\r\n    requestAcceptedAt: {\r\n      type: Date,\r\n    },\r\n    disconnectedAt: {\r\n      type: Date,\r\n    },\r\n    disconnectionReason: {\r\n      type: String,\r\n      default: null,\r\n    },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\n// Pre-save hook to generate connectionId\r\nUserConnectionSchema.pre(\"save\", async function(next) {\r\n    if (!this.connectionId) {\r\n      this.connectionId = await generateCustomId(\"userConnection\", \"UCN\");\r\n    }\r\n    next();\r\n  });\r\n\r\n\r\nexport default mongoose.model<IUserConnection>(\"UserConnection\", UserConnectionSchema);\r\n"]}