{"version":3,"file":"ContactMessage.modal.js","sourceRoot":"","sources":["../../src/models/ContactMessage.modal.ts"],"names":[],"mappings":"AAAA,OAAO,QAAQ,EAAE,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAC5C,OAAO,EAAE,gBAAgB,EAAE,MAAM,8BAA8B,CAAC;AAEhE,OAAO,MAAM,MAAM,yBAAyB,CAAC;AAE7C,MAAM,oBAAoB,GAA4B,IAAI,MAAM,CAC9D;IACE,gBAAgB,EAAE;QAChB,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE,IAAI;KACb;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;KACf;IACD,KAAK,EAAE;QACL,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;KACf;IACD,OAAO,EAAE;QACP,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;KACf;IACD,SAAS,EAAE;QACT,IAAI,EAAE,IAAI;QACV,OAAO,EAAE,IAAI,CAAC,GAAG;KAClB;IACD,UAAU,EAAE;QACV,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,KAAK;KACf;CACF,EACD,EAAE,UAAU,EAAE,IAAI,EAAE,CACrB,CAAC;AAEF,8CAA8C;AAC9C,oBAAoB,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,WAAW,IAAI;IACnD,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC3B,IAAI,CAAC;YACH,IAAI,CAAC,gBAAgB,GAAG,MAAM,gBAAgB,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;YACxE,MAAM,CAAC,KAAK,CACV,+BAA+B,IAAI,CAAC,gBAAgB,aAAa,IAAI,CAAC,IAAI,EAAE,CAC7E,CAAC;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,CAAC,KAAK,CACV,sCAAsC,IAAI,CAAC,gBAAgB,aAAa,IAAI,CAAC,IAAI,MAAM,KAAK,EAAE,CAC/F,CAAC;YACF,OAAO,IAAI,CAAC,KAAc,CAAC,CAAC;QAC9B,CAAC;IACH,CAAC;IACD,IAAI,EAAE,CAAC;AACT,CAAC,CAAC,CAAC;AAEH,eAAe,QAAQ,CAAC,KAAK,CAC3B,gBAAgB,EAChB,oBAAoB,CACrB,CAAC","sourcesContent":["import mongoose, { Schema } from \"mongoose\";\r\nimport { generateCustomId } from \"../core/Utils/IdGenerator.js\";\r\nimport { IContactMessage } from \"../Interfaces/models/IContactMessage.js\";\r\nimport logger from \"../core/Utils/Logger.js\";\r\n\r\nconst ContactMessageSchema: Schema<IContactMessage> = new Schema(\r\n  {\r\n    contactMessageId: {\r\n      type: String,\r\n      unique: true,\r\n    },\r\n    name: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    email: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    message: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    createdAt: {\r\n      type: Date,\r\n      default: Date.now,\r\n    },\r\n    givenReply: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\n// Pre-save hook to generate contact messageId\r\nContactMessageSchema.pre(\"save\", async function (next) {\r\n  if (!this.contactMessageId) {\r\n    try {\r\n      this.contactMessageId = await generateCustomId(\"contactMessage\", \"CNM\");\r\n      logger.debug(\r\n        `Generated contactMessageId: ${this.contactMessageId} for name ${this.name}`\r\n      );\r\n    } catch (error) {\r\n      logger.error(\r\n        `Error generating contactMessageId: ${this.contactMessageId} for name ${this.name} : ${error}`\r\n      );\r\n      return next(error as Error);\r\n    }\r\n  }\r\n  next();\r\n});\r\n\r\nexport default mongoose.model<IContactMessage>(\r\n  \"ContactMessage\",\r\n  ContactMessageSchema\r\n);\r\n"]}