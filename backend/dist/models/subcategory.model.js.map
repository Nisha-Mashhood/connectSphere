{"version":3,"file":"subcategory.model.js","sourceRoot":"","sources":["../../src/models/subcategory.model.ts"],"names":[],"mappings":"AAAA,OAAO,QAAQ,EAAE,EAAE,MAAM,EAAS,MAAM,UAAU,CAAC;AACnD,OAAO,EAAE,gBAAgB,EAAE,MAAM,8BAA8B,CAAC;AAEhE,OAAO,MAAM,MAAM,yBAAyB,CAAC;AAE7C,kBAAkB;AAClB,MAAM,iBAAiB,GAAiC,IAAI,QAAQ,CAAC,MAAM,CACzE;IACE,aAAa,EAAE;QACb,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE,IAAI;KACb;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,MAAM,EAAE,IAAI;KACb;IACD,UAAU,EAAE;QACV,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,UAAU;QACf,QAAQ,EAAE,IAAI;KACf;IACD,WAAW,EAAE;QACX,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,IAAI;KACd;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,IAAI;KACd;CACF,EACD,EAAE,UAAU,EAAE,IAAI,EAAE,CACrB,CAAC;AAEF,0CAA0C;AAC1C,iBAAiB,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,WAAW,IAAI;IAChD,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;QACxB,IAAI,CAAC;YACH,IAAI,CAAC,aAAa,GAAG,MAAM,gBAAgB,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;YAClE,MAAM,CAAC,KAAK,CACV,4BAA4B,IAAI,CAAC,aAAa,aAAa,IAAI,CAAC,IAAI,oBAAoB,IAAI,CAAC,UAAU,EAAE,CAC1G,CAAC;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,CAAC,KAAK,CACV,mCAAmC,IAAI,CAAC,aAAa,aAAa,IAAI,CAAC,IAAI,oBAAoB,IAAI,CAAC,UAAU,KAAK,KAAK,EAAE,CAC3H,CAAC;YACF,OAAO,IAAI,CAAC,KAAc,CAAC,CAAC;QAC9B,CAAC;IACH,CAAC;IACD,IAAI,EAAE,CAAC;AACT,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,WAAW,GACtB,QAAQ,CAAC,KAAK,CAAuB,aAAa,EAAE,iBAAiB,CAAC,CAAC","sourcesContent":["import mongoose, { Schema, Model } from \"mongoose\";\r\nimport { generateCustomId } from \"../core/Utils/IdGenerator.js\";\r\nimport { SubcategoryInterface } from \"../Interfaces/models/SubcategoryInterface.js\";\r\nimport logger from \"../core/Utils/Logger.js\";\r\n\r\n// Category Schema\r\nconst SubcategorySchema: Schema<SubcategoryInterface> = new mongoose.Schema(\r\n  {\r\n    subcategoryId: {\r\n      type: String,\r\n      unique: true,\r\n    },\r\n    name: {\r\n      type: String,\r\n      required: true,\r\n      unique: true,\r\n    },\r\n    categoryId: {\r\n      type: Schema.Types.ObjectId,\r\n      ref: \"Category\",\r\n      required: true,\r\n    },\r\n    description: {\r\n      type: String,\r\n      default: null,\r\n    },\r\n    imageUrl: {\r\n      type: String,\r\n      default: null,\r\n    },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\n// Pre-save hook to generate subcategoryId\r\nSubcategorySchema.pre(\"save\", async function (next) {\r\n  if (!this.subcategoryId) {\r\n    try {\r\n      this.subcategoryId = await generateCustomId(\"subcategory\", \"SUB\");\r\n      logger.debug(\r\n        `Generated subcategoryId: ${this.subcategoryId} for name ${this.name} and categoryId: ${this.categoryId}`\r\n      );\r\n    } catch (error) {\r\n      logger.error(\r\n        `Error generating subcategoryId: ${this.subcategoryId} for name ${this.name} and categoryId: ${this.categoryId}: ${error}`\r\n      );\r\n      return next(error as Error);\r\n    }\r\n  }\r\n  next();\r\n});\r\n\r\nexport const Subcategory: Model<SubcategoryInterface> =\r\n  mongoose.model<SubcategoryInterface>(\"Subcategory\", SubcategorySchema);\r\n"]}