{"version":3,"file":"notification.modal.js","sourceRoot":"","sources":["../../src/models/notification.modal.ts"],"names":[],"mappings":"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","sourcesContent":["import mongoose from \"mongoose\";\r\nimport { Schema, model } from \"mongoose\";\r\nimport { generateCustomId } from \"../core/Utils/IdGenerator.js\";\r\nimport { AppNotification } from \"../Interfaces/models/AppNotification.js\";\r\nimport logger from \"../core/Utils/Logger.js\";\r\n\r\nconst AppNotificationSchema = new Schema<AppNotification>({\r\n  AppNotificationId: {\r\n    type: String,\r\n    unique: true,\r\n  },\r\n  userId: {\r\n    type: mongoose.Schema.Types.ObjectId,\r\n    ref: \"User\",\r\n    required: true,\r\n    index: true,\r\n  },\r\n  type: {\r\n    type: String,\r\n    enum: [\"message\", \"incoming_call\", \"missed_call\", \"task_reminder\"],\r\n    required: true,\r\n  },\r\n  content: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  relatedId: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  senderId: {\r\n    type: mongoose.Schema.Types.ObjectId,\r\n    ref: \"User\",\r\n    required: true,\r\n  },\r\n  status: {\r\n    type: String,\r\n    enum: [\"unread\", \"read\"],\r\n    default: \"unread\",\r\n  },\r\n  callId: {\r\n    type: String,\r\n    required: false,\r\n  }, // Unique identifier for calls\r\n  notificationDate: {\r\n    type: Date,\r\n    required: false,\r\n  },\r\n  notificationTime: {\r\n    type: String,\r\n    required: false,\r\n  },\r\n  createdAt: {\r\n    type: Date,\r\n    default: Date.now,\r\n  },\r\n  updatedAt: {\r\n    type: Date,\r\n    default: Date.now,\r\n  },\r\n  taskContext: {\r\n    contextType: {\r\n      type: String,\r\n      enum: [\"profile\", \"group\", \"collaboration\", \"userconnection\"],\r\n      required: false,\r\n    },\r\n    contextId: {\r\n      type: String,\r\n      required: false,\r\n    },\r\n  },\r\n});\r\n\r\nAppNotificationSchema.index({ userId: 1, createdAt: -1 });\r\n\r\n// Pre-save hook to generate AppNotificationId\r\nAppNotificationSchema.pre(\"save\", async function (next) {\r\n  if (!this.AppNotificationId) {\r\n    try {\r\n      this.AppNotificationId = await generateCustomId(\"appNotification\", \"ANF\");\r\n      logger.debug(\r\n        `Generated AppNotificationId: ${this.AppNotificationId} for userId ${this.userId}`\r\n      );\r\n    } catch (error) {\r\n      logger.error(\r\n        `Error generating AppNotificationId: ${this.AppNotificationId} for userId ${this.userId} : ${error}`\r\n      );\r\n      return next(error as Error);\r\n    }\r\n  }\r\n  next();\r\n});\r\n\r\nexport const AppNotificationModel = model<AppNotification>(\r\n  \"AppNotification\",\r\n  AppNotificationSchema\r\n);\r\n"]}