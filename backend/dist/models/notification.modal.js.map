{"version":3,"file":"notification.modal.js","sourceRoot":"","sources":["../../src/models/notification.modal.ts"],"names":[],"mappings":"AAAA,OAAO,QAAQ,MAAM,UAAU,CAAC;AAEhC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,UAAU,CAAC;AAgBzC,MAAM,qBAAqB,GAAG,IAAI,MAAM,CAAkB;IACxD,MAAM,EAAE;QACN,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QACpC,GAAG,EAAE,MAAM;QACX,QAAQ,EAAE,IAAI;QACd,KAAK,EAAE,IAAI;KACd;IACC,IAAI,EAAE;QACJ,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,CAAC,SAAS,EAAE,eAAe,EAAE,aAAa,EAAE,eAAe,CAAC;QAClE,QAAQ,EAAE,IAAI;KACf;IACD,OAAO,EAAE;QACP,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;KACjB;IACC,SAAS,EAAE;QACT,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;KACjB;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;QACpC,GAAG,EAAE,MAAM;QACX,QAAQ,EAAE,IAAI;KACf;IACC,MAAM,EAAE;QACN,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,CAAC,QAAQ,EAAE,MAAM,CAAC;QACxB,OAAO,EAAE,QAAQ;KACpB;IACD,MAAM,EAAE;QACN,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,KAAK;KAChB,EAAE,8BAA8B;IAC/B,SAAS,EAAE;QACT,IAAI,EAAE,IAAI;QACV,OAAO,EAAE,IAAI,CAAC,GAAG;KACpB;IACC,SAAS,EAAE;QACT,IAAI,EAAE,IAAI;QACV,OAAO,EAAE,IAAI,CAAC,GAAG;KACpB;CACA,CAAC,CAAC;AAEH,qBAAqB,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AAE1D,MAAM,CAAC,MAAM,oBAAoB,GAAG,KAAK,CAAkB,iBAAiB,EAAE,qBAAqB,CAAC,CAAC","sourcesContent":["import mongoose from 'mongoose';\r\nimport { ObjectId } from 'mongoose';\r\nimport { Schema, model } from 'mongoose';\r\n\r\nexport interface AppNotification {\r\n    _id: string;\r\n    userId: string | ObjectId;\r\n    type: 'message' | 'incoming_call' | 'missed_call' | 'task_reminder';\r\n    content: string;\r\n    relatedId: string; // chatKey for messages/calls, taskId for tasks\r\n    senderId: string | ObjectId;\r\n    status: 'unread' | 'read';\r\n    callId?: string;\r\n    createdAt: Date;\r\n    updatedAt: Date;\r\n  }\r\n\r\n\r\nconst AppNotificationSchema = new Schema<AppNotification>({\r\n  userId: { \r\n    type: mongoose.Schema.Types.ObjectId,\r\n    ref: \"User\",\r\n    required: true, \r\n    index: true \r\n},\r\n  type: {\r\n    type: String,\r\n    enum: ['message', 'incoming_call', 'missed_call', 'task_reminder'],\r\n    required: true,\r\n  },\r\n  content: { \r\n    type: String, \r\n    required: true \r\n},\r\n  relatedId: { \r\n    type: String, \r\n    required: true \r\n},\r\nsenderId: { \r\n  type: mongoose.Schema.Types.ObjectId, \r\n  ref: \"User\", \r\n  required: true \r\n},\r\n  status: { \r\n    type: String, \r\n    enum: ['unread', 'read'], \r\n    default: 'unread' \r\n},\r\ncallId: { \r\n  type: String, \r\n  required: false \r\n}, // Unique identifier for calls\r\n  createdAt: { \r\n    type: Date, \r\n    default: Date.now \r\n},\r\n  updatedAt: { \r\n    type: Date, \r\n    default: Date.now \r\n},\r\n});\r\n\r\nAppNotificationSchema.index({ userId: 1, createdAt: -1 });\r\n\r\nexport const AppNotificationModel = model<AppNotification>('AppNotification', AppNotificationSchema);"]}