{"version":3,"file":"collaboration.js","sourceRoot":"","sources":["../../src/models/collaboration.ts"],"names":[],"mappings":"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","sourcesContent":["import mongoose, { Schema, Document } from \"mongoose\";\r\nimport { IMentor } from \"./mentor.model.js\";\r\nimport { UserInterface } from \"./user.model.js\";\r\nimport { generateCustomId } from \"../utils/idGenerator.utils.js\";\r\n\r\nexport interface ICollaboration extends Document {\r\n  collaborationId:string;\r\n  mentorId: IMentor | string;\r\n  userId: UserInterface | string;\r\n  selectedSlot: {\r\n    day: | \"Sunday\"| \"Monday\" | \"Tuesday\" | \"Wednesday\" | \"Thursday\" | \"Friday\" | \"Saturday\";\r\n    timeSlots: string[];\r\n  }[];\r\n  unavailableDays: {\r\n    _id: mongoose.Types.ObjectId;\r\n    datesAndReasons: { date: Date; reason: string }[];\r\n    requestedBy: \"user\" | \"mentor\";\r\n    requesterId: mongoose.Types.ObjectId;\r\n    isApproved: \"pending\" | \"approved\" | \"rejected\";\r\n    approvedById: mongoose.Types.ObjectId;\r\n  }[];\r\n  temporarySlotChanges: {\r\n    _id: mongoose.Types.ObjectId;\r\n    datesAndNewSlots: { date: Date; newTimeSlots: string[] }[];\r\n    requestedBy: \"user\" | \"mentor\";\r\n    requesterId: mongoose.Types.ObjectId;\r\n    isApproved: \"pending\" | \"approved\" | \"rejected\";\r\n    approvedById: mongoose.Types.ObjectId;\r\n  }[];\r\n  price: number;\r\n  payment: boolean;\r\n  isCancelled: boolean;\r\n  startDate: Date;\r\n  endDate?: Date;\r\n  feedbackGiven: boolean;\r\n  createdAt: Date;\r\n}\r\n\r\n// Schema remains the same, just ensure it matches the interface\r\nconst CollaborationSchema: Schema = new Schema(\r\n  {\r\n    collaborationId: {\r\n      type: String, \r\n      unique: true, \r\n    },\r\n    mentorId: { \r\n      type: Schema.Types.ObjectId, \r\n      ref: \"Mentor\", \r\n      required: true \r\n    },\r\n    userId: { \r\n      type: Schema.Types.ObjectId, \r\n      ref: \"User\", \r\n      required: true \r\n    },\r\n    selectedSlot: [\r\n      {\r\n        day: {\r\n          type: String,\r\n          enum: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\",],\r\n        },\r\n        timeSlots: [{ type: String }],\r\n      },\r\n    ],\r\n    unavailableDays: [\r\n      {\r\n        datesAndReasons: [\r\n          {\r\n            date: { type: Date },\r\n            reason: { type: String },\r\n          },\r\n        ],\r\n        requestedBy: { \r\n          type: String, \r\n          enum: [\"user\", \"mentor\"] \r\n        },\r\n        requesterId: { \r\n          type: Schema.Types.ObjectId \r\n        },\r\n        isApproved: {\r\n          type: String,\r\n          enum: [\"pending\", \"approved\", \"rejected\"],\r\n          default: \"pending\",\r\n        },\r\n        approvedById: { type: Schema.Types.ObjectId },\r\n      },\r\n    ],\r\n    temporarySlotChanges: [\r\n      {\r\n        datesAndNewSlots: [\r\n          {\r\n            date: { type: Date },\r\n            newTimeSlots: [{ type: String }],\r\n          },\r\n        ],\r\n        requestedBy: { \r\n          type: String, \r\n          enum: [\"user\", \"mentor\"] \r\n        },\r\n        requesterId: { \r\n          type: Schema.Types.ObjectId \r\n        },\r\n        isApproved: {\r\n          type: String,\r\n          enum: [\"pending\", \"approved\", \"rejected\"],\r\n          default: \"pending\",\r\n        },\r\n        approvedById: { type: Schema.Types.ObjectId },\r\n      },\r\n    ],\r\n    payment: { \r\n      type: Boolean, \r\n      default: false \r\n    },\r\n    isCancelled: { \r\n      type: Boolean, \r\n      default: false \r\n    },\r\n    price: { \r\n      type: Number, \r\n      required: true \r\n    },\r\n    startDate: { \r\n      type: Date, \r\n      required: true, \r\n      default: Date.now \r\n    },\r\n    endDate: { \r\n      type: Date, \r\n      default: null \r\n    },\r\n    feedbackGiven: { \r\n      type: Boolean, \r\n      default: false \r\n    },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\n\r\n// Pre-save hook to generate collaborationId\r\n  CollaborationSchema.pre(\"save\", async function(next) {\r\n      if (!this.collaborationId) {\r\n        this.collaborationId = await generateCustomId(\"collaboration\", \"COL\");\r\n      }\r\n      next();\r\n    });\r\n\r\nexport default mongoose.model<ICollaboration>(\r\n  \"Collaboration\",\r\n  CollaborationSchema\r\n);\r\n"]}