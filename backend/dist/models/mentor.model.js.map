{"version":3,"file":"mentor.model.js","sourceRoot":"","sources":["../../src/models/mentor.model.ts"],"names":[],"mappings":"AAAA,OAAO,QAAQ,EAAE,EAAE,MAAM,EAAY,MAAM,UAAU,CAAC;AAqBtD,MAAM,YAAY,GAAW,IAAI,MAAM,CACrC;IACE,MAAM,EAAE;QACJ,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,MAAM;QACX,QAAQ,EAAE,IAAI;KACjB;IACD,UAAU,EAAE;QACR,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,CAAC,YAAY,EAAE,WAAW,EAAE,UAAU,CAAC;QAC7C,OAAO,EAAE,YAAY;KACxB;IACD,eAAe,EAAE;QACf,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,IAAI;KACd;IACD,MAAM,EAAE;QACJ;YACI,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ;YAC3B,GAAG,EAAE,OAAO;SACf;KACJ;IACD,cAAc,EAAE;QACZ;YACI,IAAI,EAAE,MAAM;SACf;KACJ;IACD,cAAc,EAAE;QACZ,IAAI,EAAE,MAAM;QACZ,OAAO,EAAC,IAAI;KACf;IACD,GAAG,EAAE;QACH,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;KACf;IACD,KAAK,EAAE;QACL,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;KACf;IACD,cAAc,EAAE;QACZ;YACE,GAAG,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;YACrB,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;SAC9B;KACF;CACJ,EACD,EAAE,UAAU,EAAE,IAAI,EAAE,CACrB,CAAC;AAEF,eAAe,QAAQ,CAAC,KAAK,CAAU,QAAQ,EAAE,YAAY,CAAC,CAAC","sourcesContent":["import mongoose, { Schema, Document } from \"mongoose\";\r\n\r\ninterface IUser {\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\nexport interface IMentor extends Document {\r\n  userId: string | IUser;\r\n  isApproved?: string;\r\n  rejectionReason?:string;\r\n  skills?: string[];\r\n  certifications?: string[];\r\n  specialization?: string;\r\n  bio:string;\r\n  price:number;\r\n  availableSlots?: object[];\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\nconst MentorSchema: Schema = new Schema(\r\n  {\r\n    userId: { \r\n        type: Schema.Types.ObjectId, \r\n        ref: \"User\", \r\n        required: true \r\n    },\r\n    isApproved: { \r\n        type: String, \r\n        enum: [\"Processing\", \"Completed\", \"Rejected\"], \r\n        default: \"Processing\"\r\n    },\r\n    rejectionReason: { \r\n      type: String, \r\n      default: null \r\n    },\r\n    skills: [\r\n        { \r\n            type: Schema.Types.ObjectId, \r\n            ref: \"Skill\" \r\n        }\r\n    ],\r\n    certifications: [\r\n        { \r\n            type: String \r\n        }\r\n    ],\r\n    specialization: { \r\n        type: String, \r\n        default:null \r\n    },\r\n    bio: { \r\n      type: String, \r\n      required: true,\r\n    },\r\n    price: { \r\n      type: Number, \r\n      required: true,\r\n    },\r\n    availableSlots: [\r\n        {\r\n          day: { type: String },\r\n          timeSlots: [{ type: String }],\r\n        },\r\n      ],\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\nexport default mongoose.model<IMentor>(\"Mentor\", MentorSchema);\r\n"]}